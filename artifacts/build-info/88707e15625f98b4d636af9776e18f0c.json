{
	"id": "88707e15625f98b4d636af9776e18f0c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/OPZToken_flattened.sol": {
				"content": "\n// File: @openzeppelin/contracts/interfaces/draft-IERC6093.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n\n// File: contracts/OPZToken.sol\n\n\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.20;\n\n\ncontract OPZToken is ERC20 {\n    constructor() ERC20(\"OPZ Token\", \"OPZ\") {\n        _mint(msg.sender, 1000000000 * 10 ** decimals());\n    }\n}"
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/OPZToken_flattened.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OPZToken_flattened.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OPZToken_flattened.sol\":{\"keccak256\":\"0x0cbc7b02d80a6a9bb164ca3d139e6a95187824dc7bf724dc1589d874f64012a9\",\"urls\":[\"bzz-raw://6c42562b79eea1a905d28cc762548fb6bc8a3450fa634aaf6a52dd295c64b4fd\",\"dweb:/ipfs/QmZ72ihzQNhGaNLLwtPH1BgALjEMAFYZNEhsSEQLWLC8CK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OPZToken_flattened.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OPZToken_flattened.sol\":{\"keccak256\":\"0x0cbc7b02d80a6a9bb164ca3d139e6a95187824dc7bf724dc1589d874f64012a9\",\"urls\":[\"bzz-raw://6c42562b79eea1a905d28cc762548fb6bc8a3450fa634aaf6a52dd295c64b4fd\",\"dweb:/ipfs/QmZ72ihzQNhGaNLLwtPH1BgALjEMAFYZNEhsSEQLWLC8CK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "contracts/OPZToken_flattened.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "contracts/OPZToken_flattened.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "contracts/OPZToken_flattened.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "contracts/OPZToken_flattened.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "contracts/OPZToken_flattened.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OPZToken_flattened.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OPZToken_flattened.sol\":{\"keccak256\":\"0x0cbc7b02d80a6a9bb164ca3d139e6a95187824dc7bf724dc1589d874f64012a9\",\"urls\":[\"bzz-raw://6c42562b79eea1a905d28cc762548fb6bc8a3450fa634aaf6a52dd295c64b4fd\",\"dweb:/ipfs/QmZ72ihzQNhGaNLLwtPH1BgALjEMAFYZNEhsSEQLWLC8CK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OPZToken_flattened.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OPZToken_flattened.sol\":{\"keccak256\":\"0x0cbc7b02d80a6a9bb164ca3d139e6a95187824dc7bf724dc1589d874f64012a9\",\"urls\":[\"bzz-raw://6c42562b79eea1a905d28cc762548fb6bc8a3450fa634aaf6a52dd295c64b4fd\",\"dweb:/ipfs/QmZ72ihzQNhGaNLLwtPH1BgALjEMAFYZNEhsSEQLWLC8CK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OPZToken_flattened.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OPZToken_flattened.sol\":{\"keccak256\":\"0x0cbc7b02d80a6a9bb164ca3d139e6a95187824dc7bf724dc1589d874f64012a9\",\"urls\":[\"bzz-raw://6c42562b79eea1a905d28cc762548fb6bc8a3450fa634aaf6a52dd295c64b4fd\",\"dweb:/ipfs/QmZ72ihzQNhGaNLLwtPH1BgALjEMAFYZNEhsSEQLWLC8CK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OPZToken_flattened.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OPZToken_flattened.sol\":{\"keccak256\":\"0x0cbc7b02d80a6a9bb164ca3d139e6a95187824dc7bf724dc1589d874f64012a9\",\"urls\":[\"bzz-raw://6c42562b79eea1a905d28cc762548fb6bc8a3450fa634aaf6a52dd295c64b4fd\",\"dweb:/ipfs/QmZ72ihzQNhGaNLLwtPH1BgALjEMAFYZNEhsSEQLWLC8CK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OPZToken_flattened.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OPZToken_flattened.sol\":{\"keccak256\":\"0x0cbc7b02d80a6a9bb164ca3d139e6a95187824dc7bf724dc1589d874f64012a9\",\"urls\":[\"bzz-raw://6c42562b79eea1a905d28cc762548fb6bc8a3450fa634aaf6a52dd295c64b4fd\",\"dweb:/ipfs/QmZ72ihzQNhGaNLLwtPH1BgALjEMAFYZNEhsSEQLWLC8CK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"OPZToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/OPZToken_flattened.sol\":22115:22255  contract OPZToken is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/OPZToken_flattened.sol\":22148:22253  constructor() ERC20(\"OPZ Token\", \"OPZ\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/OPZToken_flattened.sol\":12757:12870  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x09\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xb9, 0x27a82d102a37b5b2b7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe9, 0x27a82d)\n  dup2\n  mstore\n  pop\n    /* \"contracts/OPZToken_flattened.sol\":12831:12836  name_ */\n  dup2\n    /* \"contracts/OPZToken_flattened.sol\":12823:12828  _name */\n  0x03\n    /* \"contracts/OPZToken_flattened.sol\":12823:12836  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"contracts/OPZToken_flattened.sol\":12846:12853  _symbol */\n  0x04\n    /* \"contracts/OPZToken_flattened.sol\":12846:12863  _symbol = symbol_ */\n  tag_7\n    /* \"contracts/OPZToken_flattened.sol\":12856:12863  symbol_ */\n  dup3\n    /* \"contracts/OPZToken_flattened.sol\":12846:12853  _symbol */\n  dup3\n    /* \"contracts/OPZToken_flattened.sol\":12846:12863  _symbol = symbol_ */\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"contracts/OPZToken_flattened.sol\":12757:12870  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/OPZToken_flattened.sol\":22198:22246  _mint(msg.sender, 1000000000 * 10 ** decimals()) */\n  tag_9\n    /* \"contracts/OPZToken_flattened.sol\":22204:22214  msg.sender */\n  caller\n    /* \"contracts/OPZToken_flattened.sol\":22235:22245  decimals() */\n  tag_10\n    /* \"contracts/OPZToken_flattened.sol\":22235:22243  decimals */\n  shl(0x20, tag_11)\n    /* \"contracts/OPZToken_flattened.sol\":22235:22245  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"contracts/OPZToken_flattened.sol\":22229:22245  10 ** decimals() */\n  tag_12\n  swap1\n    /* \"contracts/OPZToken_flattened.sol\":22229:22231  10 */\n  0x0a\n    /* \"contracts/OPZToken_flattened.sol\":22229:22245  10 ** decimals() */\n  tag_13\n  jump\t// in\ntag_12:\n    /* \"contracts/OPZToken_flattened.sol\":22216:22245  1000000000 * 10 ** decimals() */\n  tag_14\n  swap1\n    /* \"contracts/OPZToken_flattened.sol\":22216:22226  1000000000 */\n  0x3b9aca00\n    /* \"contracts/OPZToken_flattened.sol\":22216:22245  1000000000 * 10 ** decimals() */\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"contracts/OPZToken_flattened.sol\":22198:22203  _mint */\n  tag_16\n    /* \"contracts/OPZToken_flattened.sol\":22198:22246  _mint(msg.sender, 1000000000 * 10 ** decimals()) */\n  jump\t// in\ntag_9:\n    /* \"contracts/OPZToken_flattened.sol\":22115:22255  contract OPZToken is ERC20 {... */\n  jump(tag_45)\n    /* \"contracts/OPZToken_flattened.sol\":13863:13945  function decimals() public view virtual returns (uint8) {... */\ntag_11:\n    /* \"contracts/OPZToken_flattened.sol\":13936:13938  18 */\n  0x12\n  swap1\n    /* \"contracts/OPZToken_flattened.sol\":13863:13945  function decimals() public view virtual returns (uint8) {... */\n  jump\t// out\n    /* \"contracts/OPZToken_flattened.sol\":18582:18790  function _mint(address account, uint256 value) internal {... */\ntag_16:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/OPZToken_flattened.sol\":18652:18673  account == address(0) */\n  dup3\n  and\n    /* \"contracts/OPZToken_flattened.sol\":18648:18739  if (account == address(0)) {... */\n  tag_20\n  jumpi\n    /* \"contracts/OPZToken_flattened.sol\":18696:18728  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"contracts/OPZToken_flattened.sol\":18725:18726  0 */\n  0x00\n    /* \"contracts/OPZToken_flattened.sol\":18696:18728  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4529:4580   */\n  mstore\n    /* \"#utility.yul\":4502:4520   */\n  0x24\n  add\n    /* \"contracts/OPZToken_flattened.sol\":18696:18728  ERC20InvalidReceiver(address(0)) */\ntag_21:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/OPZToken_flattened.sol\":18648:18739  if (account == address(0)) {... */\ntag_20:\n    /* \"contracts/OPZToken_flattened.sol\":18748:18783  _update(address(0), account, value) */\n  tag_23\n    /* \"contracts/OPZToken_flattened.sol\":18764:18765  0 */\n  0x00\n    /* \"contracts/OPZToken_flattened.sol\":18768:18775  account */\n  dup4\n    /* \"contracts/OPZToken_flattened.sol\":18777:18782  value */\n  dup4\n    /* \"contracts/OPZToken_flattened.sol\":18748:18755  _update */\n  tag_24\n    /* \"contracts/OPZToken_flattened.sol\":18748:18783  _update(address(0), account, value) */\n  jump\t// in\ntag_23:\n    /* \"contracts/OPZToken_flattened.sol\":18582:18790  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/OPZToken_flattened.sol\":17132:18239  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_24:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/OPZToken_flattened.sol\":17221:17239  from == address(0) */\n  dup4\n  and\n    /* \"contracts/OPZToken_flattened.sol\":17217:17757  if (from == address(0)) {... */\n  tag_26\n  jumpi\n    /* \"contracts/OPZToken_flattened.sol\":17373:17378  value */\n  dup1\n    /* \"contracts/OPZToken_flattened.sol\":17357:17369  _totalSupply */\n  0x02\n  0x00\n    /* \"contracts/OPZToken_flattened.sol\":17357:17378  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_27\n  swap2\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"contracts/OPZToken_flattened.sol\":17217:17757  if (from == address(0)) {... */\n  tag_29\n  swap1\n  pop\n  jump\ntag_26:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/OPZToken_flattened.sol\":17431:17446  _balances[from] */\n  dup4\n  and\n    /* \"contracts/OPZToken_flattened.sol\":17409:17428  uint256 fromBalance */\n  0x00\n    /* \"contracts/OPZToken_flattened.sol\":17431:17446  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"contracts/OPZToken_flattened.sol\":17464:17483  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"contracts/OPZToken_flattened.sol\":17460:17575  if (fromBalance < value) {... */\n  iszero\n  tag_30\n  jumpi\n    /* \"contracts/OPZToken_flattened.sol\":17510:17560  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":4941:4973   */\n  dup6\n  and\n    /* \"contracts/OPZToken_flattened.sol\":17510:17560  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4923:4974   */\n  mstore\n    /* \"#utility.yul\":4990:5008   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":4983:5017   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":5033:5051   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":5026:5060   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":4896:4914   */\n  0x64\n  add\n    /* \"contracts/OPZToken_flattened.sol\":17510:17560  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_21\n    /* \"#utility.yul\":4721:5066   */\n  jump\n    /* \"contracts/OPZToken_flattened.sol\":17460:17575  if (fromBalance < value) {... */\ntag_30:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/OPZToken_flattened.sol\":17695:17710  _balances[from] */\n  dup5\n  and\n    /* \"contracts/OPZToken_flattened.sol\":17695:17704  _balances */\n  0x00\n    /* \"contracts/OPZToken_flattened.sol\":17695:17710  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"contracts/OPZToken_flattened.sol\":17713:17732  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"contracts/OPZToken_flattened.sol\":17695:17732  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"contracts/OPZToken_flattened.sol\":17217:17757  if (from == address(0)) {... */\ntag_29:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/OPZToken_flattened.sol\":17771:17787  to == address(0) */\n  dup3\n  and\n    /* \"contracts/OPZToken_flattened.sol\":17767:18192  if (to == address(0)) {... */\n  tag_33\n  jumpi\n    /* \"contracts/OPZToken_flattened.sol\":17934:17946  _totalSupply */\n  0x02\n    /* \"contracts/OPZToken_flattened.sol\":17934:17955  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"contracts/OPZToken_flattened.sol\":17767:18192  if (to == address(0)) {... */\n  jump(tag_34)\ntag_33:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/OPZToken_flattened.sol\":18145:18158  _balances[to] */\n  dup3\n  and\n    /* \"contracts/OPZToken_flattened.sol\":18145:18154  _balances */\n  0x00\n    /* \"contracts/OPZToken_flattened.sol\":18145:18158  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"contracts/OPZToken_flattened.sol\":18145:18167  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"contracts/OPZToken_flattened.sol\":17767:18192  if (to == address(0)) {... */\ntag_34:\n    /* \"contracts/OPZToken_flattened.sol\":18222:18224  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/OPZToken_flattened.sol\":18207:18232  Transfer(from, to, value) */\n  and\n    /* \"contracts/OPZToken_flattened.sol\":18216:18220  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/OPZToken_flattened.sol\":18207:18232  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"contracts/OPZToken_flattened.sol\":18226:18231  value */\n  dup4\n    /* \"contracts/OPZToken_flattened.sol\":18207:18232  Transfer(from, to, value) */\n  mload(0x40)\n  tag_35\n  swap2\n    /* \"#utility.yul\":5217:5242   */\n  dup2\n  mstore\n    /* \"#utility.yul\":5205:5207   */\n  0x20\n    /* \"#utility.yul\":5190:5208   */\n  add\n  swap1\n    /* \"#utility.yul\":5071:5248   */\n  jump\n    /* \"contracts/OPZToken_flattened.sol\":18207:18232  Transfer(from, to, value) */\ntag_35:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/OPZToken_flattened.sol\":17132:18239  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_37:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_38:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_48\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_48:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_49\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_49:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1175   */\ntag_40:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1169   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":795:800   */\n  dup1\n    /* \"#utility.yul\":792:793   */\n  0x00\n    /* \"#utility.yul\":785:801   */\n  mstore\n    /* \"#utility.yul\":839:843   */\n  0x20\n    /* \"#utility.yul\":836:837   */\n  0x00\n    /* \"#utility.yul\":826:844   */\n  keccak256\n    /* \"#utility.yul\":909:911   */\n  0x1f\n    /* \"#utility.yul\":897:907   */\n  dup5\n    /* \"#utility.yul\":893:912   */\n  add\n    /* \"#utility.yul\":890:891   */\n  0x05\n    /* \"#utility.yul\":886:913   */\n  shr\n    /* \"#utility.yul\":880:884   */\n  dup2\n    /* \"#utility.yul\":876:914   */\n  add\n    /* \"#utility.yul\":945:949   */\n  0x20\n    /* \"#utility.yul\":933:943   */\n  dup6\n    /* \"#utility.yul\":930:950   */\n  lt\n    /* \"#utility.yul\":927:974   */\n  iszero\n  tag_53\n  jumpi\n  pop\n    /* \"#utility.yul\":968:972   */\n  dup1\n    /* \"#utility.yul\":927:974   */\ntag_53:\n    /* \"#utility.yul\":1023:1025   */\n  0x1f\n    /* \"#utility.yul\":1018:1021   */\n  dup5\n    /* \"#utility.yul\":1014:1026   */\n  add\n    /* \"#utility.yul\":1011:1012   */\n  0x05\n    /* \"#utility.yul\":1007:1027   */\n  shr\n    /* \"#utility.yul\":1001:1005   */\n  dup3\n    /* \"#utility.yul\":997:1028   */\n  add\n    /* \"#utility.yul\":987:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":1078:1159   */\ntag_54:\n    /* \"#utility.yul\":1096:1098   */\n  dup2\n    /* \"#utility.yul\":1089:1094   */\n  dup2\n    /* \"#utility.yul\":1086:1099   */\n  lt\n    /* \"#utility.yul\":1078:1159   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":1155:1156   */\n  0x00\n    /* \"#utility.yul\":1141:1157   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1122:1123   */\n  0x01\n    /* \"#utility.yul\":1111:1124   */\n  add\n    /* \"#utility.yul\":1078:1159   */\n  jump(tag_54)\ntag_56:\n    /* \"#utility.yul\":1082:1085   */\n  pop\n  pop\n    /* \"#utility.yul\":748:1169   */\ntag_52:\n    /* \"#utility.yul\":657:1175   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1351:2696   */\ntag_6:\n    /* \"#utility.yul\":1471:1481   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1493:1523   */\n  dup2\n  gt\n    /* \"#utility.yul\":1490:1546   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1526:1544   */\n  tag_60\n  tag_37\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1555:1652   */\n  tag_61\n    /* \"#utility.yul\":1645:1651   */\n  dup2\n    /* \"#utility.yul\":1605:1643   */\n  tag_62\n    /* \"#utility.yul\":1637:1641   */\n  dup5\n    /* \"#utility.yul\":1631:1642   */\n  sload\n    /* \"#utility.yul\":1605:1643   */\n  tag_38\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1599:1603   */\n  dup5\n    /* \"#utility.yul\":1555:1652   */\n  tag_40\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1707:1711   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1764:1766   */\n  0x1f\n    /* \"#utility.yul\":1753:1767   */\n  dup4\n  gt\n    /* \"#utility.yul\":1781:1782   */\n  0x01\n    /* \"#utility.yul\":1776:2439   */\n  dup2\n  eq\n  tag_64\n  jumpi\n    /* \"#utility.yul\":2483:2484   */\n  0x00\n    /* \"#utility.yul\":2500:2506   */\n  dup5\n    /* \"#utility.yul\":2497:2586   */\n  iszero\n  tag_65\n  jumpi\n  pop\n    /* \"#utility.yul\":2552:2571   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2546:2572   */\n  mload\n    /* \"#utility.yul\":2497:2586   */\ntag_65:\n  not(0x00)\n    /* \"#utility.yul\":1308:1309   */\n  0x03\n    /* \"#utility.yul\":1304:1315   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1300:1324   */\n  shr\n    /* \"#utility.yul\":1296:1325   */\n  not\n    /* \"#utility.yul\":1286:1326   */\n  and\n    /* \"#utility.yul\":1332:1333   */\n  0x01\n    /* \"#utility.yul\":1328:1339   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1283:1340   */\n  or\n    /* \"#utility.yul\":2599:2680   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1746:2690   */\n  jump(tag_63)\n    /* \"#utility.yul\":1776:2439   */\ntag_64:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1812:1832   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":1930:2166   */\ntag_68:\n    /* \"#utility.yul\":1944:1951   */\n  dup3\n    /* \"#utility.yul\":1941:1942   */\n  dup2\n    /* \"#utility.yul\":1938:1952   */\n  lt\n    /* \"#utility.yul\":1930:2166   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":2033:2052   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2027:2053   */\n  mload\n    /* \"#utility.yul\":2012:2054   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2125:2152   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2093:2094   */\n  0x01\n    /* \"#utility.yul\":2081:2095   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":1960:1979   */\n  dup5\n  add\n    /* \"#utility.yul\":1930:2166   */\n  jump(tag_68)\ntag_70:\n    /* \"#utility.yul\":1934:1937   */\n  pop\n    /* \"#utility.yul\":2194:2200   */\n  dup6\n    /* \"#utility.yul\":2185:2192   */\n  dup3\n    /* \"#utility.yul\":2182:2201   */\n  lt\n    /* \"#utility.yul\":2179:2380   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":2255:2274   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2249:2275   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2338:2339   */\n  0x03\n    /* \"#utility.yul\":2334:2348   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2350:2353   */\n  0xf8\n    /* \"#utility.yul\":2330:2354   */\n  and\n    /* \"#utility.yul\":2326:2363   */\n  shr\n    /* \"#utility.yul\":2322:2364   */\n  not\n    /* \"#utility.yul\":2307:2365   */\n  and\n    /* \"#utility.yul\":2292:2366   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2179:2380   */\ntag_71:\n  pop\n  pop\n    /* \"#utility.yul\":2426:2427   */\n  0x01\n    /* \"#utility.yul\":2417:2423   */\n  dup5\n    /* \"#utility.yul\":2414:2415   */\n  0x01\n    /* \"#utility.yul\":2410:2424   */\n  shl\n    /* \"#utility.yul\":2406:2428   */\n  add\n    /* \"#utility.yul\":2400:2404   */\n  dup6\n    /* \"#utility.yul\":2393:2429   */\n  sstore\n    /* \"#utility.yul\":1746:2690   */\ntag_63:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1351:2696   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2701:2828   */\ntag_42:\n    /* \"#utility.yul\":2762:2772   */\n  0x4e487b71\n    /* \"#utility.yul\":2757:2760   */\n  0xe0\n    /* \"#utility.yul\":2753:2773   */\n  shl\n    /* \"#utility.yul\":2750:2751   */\n  0x00\n    /* \"#utility.yul\":2743:2774   */\n  mstore\n    /* \"#utility.yul\":2793:2797   */\n  0x11\n    /* \"#utility.yul\":2790:2791   */\n  0x04\n    /* \"#utility.yul\":2783:2798   */\n  mstore\n    /* \"#utility.yul\":2817:2821   */\n  0x24\n    /* \"#utility.yul\":2814:2815   */\n  0x00\n    /* \"#utility.yul\":2807:2822   */\n  revert\n    /* \"#utility.yul\":2833:3249   */\ntag_43:\n    /* \"#utility.yul\":2922:2923   */\n  0x01\n    /* \"#utility.yul\":2959:2964   */\n  dup2\n    /* \"#utility.yul\":2922:2923   */\n  dup2\n    /* \"#utility.yul\":2973:3243   */\ntag_74:\n    /* \"#utility.yul\":2994:3001   */\n  dup1\n    /* \"#utility.yul\":2984:2992   */\n  dup6\n    /* \"#utility.yul\":2981:3002   */\n  gt\n    /* \"#utility.yul\":2973:3243   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":3053:3057   */\n  dup2\n    /* \"#utility.yul\":3049:3050   */\n  0x00\n    /* \"#utility.yul\":3045:3051   */\n  not\n    /* \"#utility.yul\":3041:3058   */\n  div\n    /* \"#utility.yul\":3035:3039   */\n  dup3\n    /* \"#utility.yul\":3032:3059   */\n  gt\n    /* \"#utility.yul\":3029:3082   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":3062:3080   */\n  tag_78\n  tag_42\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":3112:3119   */\n  dup1\n    /* \"#utility.yul\":3102:3110   */\n  dup6\n    /* \"#utility.yul\":3098:3120   */\n  and\n    /* \"#utility.yul\":3095:3150   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":3132:3148   */\n  swap2\n  dup2\n  mul\n  swap2\n    /* \"#utility.yul\":3095:3150   */\ntag_79:\n    /* \"#utility.yul\":3211:3233   */\n  swap4\n  dup5\n  shr\n  swap4\n    /* \"#utility.yul\":3171:3186   */\n  swap1\n  dup1\n  mul\n  swap1\n    /* \"#utility.yul\":2973:3243   */\n  jump(tag_74)\ntag_76:\n    /* \"#utility.yul\":2977:2980   */\n  pop\n    /* \"#utility.yul\":2833:3249   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3254:4060   */\ntag_44:\n    /* \"#utility.yul\":3303:3308   */\n  0x00\n    /* \"#utility.yul\":3333:3341   */\n  dup3\n    /* \"#utility.yul\":3323:3403   */\n  tag_81\n  jumpi\n  pop\n    /* \"#utility.yul\":3374:3375   */\n  0x01\n    /* \"#utility.yul\":3388:3393   */\n  jump(tag_80)\n    /* \"#utility.yul\":3323:3403   */\ntag_81:\n    /* \"#utility.yul\":3422:3426   */\n  dup2\n    /* \"#utility.yul\":3412:3488   */\n  tag_82\n  jumpi\n  pop\n    /* \"#utility.yul\":3459:3460   */\n  0x00\n    /* \"#utility.yul\":3473:3478   */\n  jump(tag_80)\n    /* \"#utility.yul\":3412:3488   */\ntag_82:\n    /* \"#utility.yul\":3504:3508   */\n  dup2\n    /* \"#utility.yul\":3522:3523   */\n  0x01\n    /* \"#utility.yul\":3517:3576   */\n  dup2\n  eq\n  tag_84\n  jumpi\n    /* \"#utility.yul\":3590:3591   */\n  0x02\n    /* \"#utility.yul\":3585:3715   */\n  dup2\n  eq\n  tag_85\n  jumpi\n    /* \"#utility.yul\":3497:3715   */\n  jump(tag_83)\n    /* \"#utility.yul\":3517:3576   */\ntag_84:\n    /* \"#utility.yul\":3547:3548   */\n  0x01\n    /* \"#utility.yul\":3538:3548   */\n  swap2\n  pop\n    /* \"#utility.yul\":3561:3566   */\n  pop\n  jump(tag_80)\n    /* \"#utility.yul\":3585:3715   */\ntag_85:\n    /* \"#utility.yul\":3622:3625   */\n  0xff\n    /* \"#utility.yul\":3612:3620   */\n  dup5\n    /* \"#utility.yul\":3609:3626   */\n  gt\n    /* \"#utility.yul\":3606:3649   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":3629:3647   */\n  tag_87\n  tag_42\n  jump\t// in\ntag_87:\n  pop\n  pop\n    /* \"#utility.yul\":3685:3686   */\n  0x01\n    /* \"#utility.yul\":3671:3687   */\n  dup3\n  shl\n    /* \"#utility.yul\":3700:3705   */\n  jump(tag_80)\n    /* \"#utility.yul\":3497:3715   */\ntag_83:\n  pop\n    /* \"#utility.yul\":3799:3801   */\n  0x20\n    /* \"#utility.yul\":3789:3797   */\n  dup4\n    /* \"#utility.yul\":3786:3802   */\n  lt\n    /* \"#utility.yul\":3780:3783   */\n  0x0133\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3771:3784   */\n  lt\n    /* \"#utility.yul\":3767:3803   */\n  and\n    /* \"#utility.yul\":3761:3763   */\n  0x4e\n    /* \"#utility.yul\":3751:3759   */\n  dup5\n    /* \"#utility.yul\":3748:3764   */\n  lt\n    /* \"#utility.yul\":3743:3745   */\n  0x0b\n    /* \"#utility.yul\":3737:3741   */\n  dup5\n    /* \"#utility.yul\":3734:3746   */\n  lt\n    /* \"#utility.yul\":3730:3765   */\n  and\n    /* \"#utility.yul\":3727:3804   */\n  or\n    /* \"#utility.yul\":3724:3883   */\n  iszero\n  tag_88\n  jumpi\n  pop\n    /* \"#utility.yul\":3836:3855   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":3868:3873   */\n  jump(tag_80)\n    /* \"#utility.yul\":3724:3883   */\ntag_88:\n    /* \"#utility.yul\":3915:3949   */\n  tag_89\n    /* \"#utility.yul\":3940:3948   */\n  dup4\n    /* \"#utility.yul\":3934:3938   */\n  dup4\n    /* \"#utility.yul\":3915:3949   */\n  tag_43\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":3985:3991   */\n  dup1\n    /* \"#utility.yul\":3981:3982   */\n  0x00\n    /* \"#utility.yul\":3977:3983   */\n  not\n    /* \"#utility.yul\":3973:3992   */\n  div\n    /* \"#utility.yul\":3964:3971   */\n  dup3\n    /* \"#utility.yul\":3961:3993   */\n  gt\n    /* \"#utility.yul\":3958:4016   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":3996:4014   */\n  tag_91\n  tag_42\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4034:4054   */\n  mul\n  swap1\n  pop\n    /* \"#utility.yul\":3254:4060   */\ntag_80:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4065:4205   */\ntag_13:\n    /* \"#utility.yul\":4123:4128   */\n  0x00\n    /* \"#utility.yul\":4152:4199   */\n  tag_93\n    /* \"#utility.yul\":4193:4197   */\n  0xff\n    /* \"#utility.yul\":4183:4191   */\n  dup5\n    /* \"#utility.yul\":4179:4198   */\n  and\n    /* \"#utility.yul\":4173:4177   */\n  dup4\n    /* \"#utility.yul\":4152:4199   */\n  tag_44\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":4143:4199   */\n  swap4\n    /* \"#utility.yul\":4065:4205   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4210:4378   */\ntag_15:\n    /* \"#utility.yul\":4283:4292   */\n  dup1\n  dup3\n  mul\n    /* \"#utility.yul\":4314:4323   */\n  dup2\n  iszero\n    /* \"#utility.yul\":4331:4346   */\n  dup3\n  dup3\n  div\n    /* \"#utility.yul\":4325:4347   */\n  dup5\n  eq\n    /* \"#utility.yul\":4311:4348   */\n  or\n    /* \"#utility.yul\":4301:4372   */\n  tag_80\n  jumpi\n    /* \"#utility.yul\":4352:4370   */\n  tag_80\n  tag_42\n  jump\t// in\n    /* \"#utility.yul\":4591:4716   */\ntag_28:\n    /* \"#utility.yul\":4656:4665   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":4677:4687   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":4674:4710   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":4690:4708   */\n  tag_80\n  tag_42\n  jump\t// in\n    /* \"#utility.yul\":5071:5248   */\ntag_45:\n    /* \"contracts/OPZToken_flattened.sol\":22115:22255  contract OPZToken is ERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/OPZToken_flattened.sol\":22115:22255  contract OPZToken is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x313ce567\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/OPZToken_flattened.sol\":12935:13024  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/OPZToken_flattened.sol\":15154:15340  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_17\n      tag_18\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"contracts/OPZToken_flattened.sol\":15154:15340  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_15\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"contracts/OPZToken_flattened.sol\":14005:14102  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n        /* \"contracts/OPZToken_flattened.sol\":14083:14095  _totalSupply */\n      sload(0x02)\n        /* \"contracts/OPZToken_flattened.sol\":14005:14102  function totalSupply() public view virtual returns (uint256) {... */\n    tag_23:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"contracts/OPZToken_flattened.sol\":14005:14102  function totalSupply() public view virtual returns (uint256) {... */\n      tag_15\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"contracts/OPZToken_flattened.sol\":15900:16144  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_17\n      tag_28\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n        /* \"contracts/OPZToken_flattened.sol\":13863:13945  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"contracts/OPZToken_flattened.sol\":13936:13938  18 */\n      0x12\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"contracts/OPZToken_flattened.sol\":13863:13945  function decimals() public view virtual returns (uint8) {... */\n      tag_15\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"contracts/OPZToken_flattened.sol\":14160:14276  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_8:\n      tag_23\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OPZToken_flattened.sol\":14251:14269  _balances[account] */\n      and\n        /* \"contracts/OPZToken_flattened.sol\":14225:14232  uint256 */\n      0x00\n        /* \"contracts/OPZToken_flattened.sol\":14251:14269  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/OPZToken_flattened.sol\":14160:14276  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/OPZToken_flattened.sol\":13137:13230  function symbol() public view virtual returns (string memory) {... */\n    tag_9:\n      tag_13\n      tag_42\n      jump\t// in\n        /* \"contracts/OPZToken_flattened.sol\":14471:14649  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_10:\n      tag_17\n      tag_45\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n        /* \"contracts/OPZToken_flattened.sol\":14707:14847  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_11:\n      tag_23\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OPZToken_flattened.sol\":14813:14831  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/OPZToken_flattened.sol\":14787:14794  uint256 */\n      0x00\n        /* \"contracts/OPZToken_flattened.sol\":14813:14831  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/OPZToken_flattened.sol\":14813:14824  _allowances */\n      0x01\n        /* \"contracts/OPZToken_flattened.sol\":14813:14831  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/OPZToken_flattened.sol\":14813:14840  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/OPZToken_flattened.sol\":14707:14847  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/OPZToken_flattened.sol\":12935:13024  function name() public view virtual returns (string memory) {... */\n    tag_14:\n        /* \"contracts/OPZToken_flattened.sol\":12980:12993  string memory */\n      0x60\n        /* \"contracts/OPZToken_flattened.sol\":13012:13017  _name */\n      0x03\n        /* \"contracts/OPZToken_flattened.sol\":13005:13017  return _name */\n      dup1\n      sload\n      tag_54\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_56\n      swap1\n      tag_55\n      jump\t// in\n    tag_56:\n      dup1\n      iszero\n      tag_57\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_58\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_57)\n    tag_58:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_59:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_59\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_57:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/OPZToken_flattened.sol\":12935:13024  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/OPZToken_flattened.sol\":15154:15340  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_20:\n        /* \"contracts/OPZToken_flattened.sol\":15227:15231  bool */\n      0x00\n        /* \"contracts/OPZToken_flattened.sol\":7323:7333  msg.sender */\n      caller\n        /* \"contracts/OPZToken_flattened.sol\":15281:15312  _approve(owner, spender, value) */\n      tag_63\n        /* \"contracts/OPZToken_flattened.sol\":7323:7333  msg.sender */\n      dup2\n        /* \"contracts/OPZToken_flattened.sol\":15297:15304  spender */\n      dup6\n        /* \"contracts/OPZToken_flattened.sol\":15306:15311  value */\n      dup6\n        /* \"contracts/OPZToken_flattened.sol\":15281:15289  _approve */\n      tag_64\n        /* \"contracts/OPZToken_flattened.sol\":15281:15312  _approve(owner, spender, value) */\n      jump\t// in\n    tag_63:\n        /* \"contracts/OPZToken_flattened.sol\":15329:15333  true */\n      0x01\n        /* \"contracts/OPZToken_flattened.sol\":15322:15333  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/OPZToken_flattened.sol\":15154:15340  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_60:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OPZToken_flattened.sol\":15900:16144  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_30:\n        /* \"contracts/OPZToken_flattened.sol\":15987:15991  bool */\n      0x00\n        /* \"contracts/OPZToken_flattened.sol\":7323:7333  msg.sender */\n      caller\n        /* \"contracts/OPZToken_flattened.sol\":16043:16080  _spendAllowance(from, spender, value) */\n      tag_68\n        /* \"contracts/OPZToken_flattened.sol\":16059:16063  from */\n      dup6\n        /* \"contracts/OPZToken_flattened.sol\":7323:7333  msg.sender */\n      dup3\n        /* \"contracts/OPZToken_flattened.sol\":16074:16079  value */\n      dup6\n        /* \"contracts/OPZToken_flattened.sol\":16043:16058  _spendAllowance */\n      tag_69\n        /* \"contracts/OPZToken_flattened.sol\":16043:16080  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_68:\n        /* \"contracts/OPZToken_flattened.sol\":16090:16116  _transfer(from, to, value) */\n      tag_70\n        /* \"contracts/OPZToken_flattened.sol\":16100:16104  from */\n      dup6\n        /* \"contracts/OPZToken_flattened.sol\":16106:16108  to */\n      dup6\n        /* \"contracts/OPZToken_flattened.sol\":16110:16115  value */\n      dup6\n        /* \"contracts/OPZToken_flattened.sol\":16090:16099  _transfer */\n      tag_71\n        /* \"contracts/OPZToken_flattened.sol\":16090:16116  _transfer(from, to, value) */\n      jump\t// in\n    tag_70:\n      pop\n        /* \"contracts/OPZToken_flattened.sol\":16133:16137  true */\n      0x01\n      swap5\n        /* \"contracts/OPZToken_flattened.sol\":15900:16144  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OPZToken_flattened.sol\":13137:13230  function symbol() public view virtual returns (string memory) {... */\n    tag_42:\n        /* \"contracts/OPZToken_flattened.sol\":13184:13197  string memory */\n      0x60\n        /* \"contracts/OPZToken_flattened.sol\":13216:13223  _symbol */\n      0x04\n        /* \"contracts/OPZToken_flattened.sol\":13209:13223  return _symbol */\n      dup1\n      sload\n      tag_54\n      swap1\n      tag_55\n      jump\t// in\n        /* \"contracts/OPZToken_flattened.sol\":14471:14649  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_46:\n        /* \"contracts/OPZToken_flattened.sol\":14540:14544  bool */\n      0x00\n        /* \"contracts/OPZToken_flattened.sol\":7323:7333  msg.sender */\n      caller\n        /* \"contracts/OPZToken_flattened.sol\":14594:14621  _transfer(owner, to, value) */\n      tag_63\n        /* \"contracts/OPZToken_flattened.sol\":7323:7333  msg.sender */\n      dup2\n        /* \"contracts/OPZToken_flattened.sol\":14611:14613  to */\n      dup6\n        /* \"contracts/OPZToken_flattened.sol\":14615:14620  value */\n      dup6\n        /* \"contracts/OPZToken_flattened.sol\":14594:14603  _transfer */\n      tag_71\n        /* \"contracts/OPZToken_flattened.sol\":14594:14621  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"contracts/OPZToken_flattened.sol\":19850:19978  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_64:\n        /* \"contracts/OPZToken_flattened.sol\":19934:19971  _approve(owner, spender, value, true) */\n      tag_86\n        /* \"contracts/OPZToken_flattened.sol\":19943:19948  owner */\n      dup4\n        /* \"contracts/OPZToken_flattened.sol\":19950:19957  spender */\n      dup4\n        /* \"contracts/OPZToken_flattened.sol\":19959:19964  value */\n      dup4\n        /* \"contracts/OPZToken_flattened.sol\":19966:19970  true */\n      0x01\n        /* \"contracts/OPZToken_flattened.sol\":19934:19942  _approve */\n      tag_87\n        /* \"contracts/OPZToken_flattened.sol\":19934:19971  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_86:\n        /* \"contracts/OPZToken_flattened.sol\":19850:19978  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OPZToken_flattened.sol\":21524:22001  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_69:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OPZToken_flattened.sol\":14813:14831  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"contracts/OPZToken_flattened.sol\":21623:21647  uint256 currentAllowance */\n      0x00\n        /* \"contracts/OPZToken_flattened.sol\":14813:14831  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/OPZToken_flattened.sol\":14813:14824  _allowances */\n      0x01\n        /* \"contracts/OPZToken_flattened.sol\":14813:14831  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/OPZToken_flattened.sol\":14813:14840  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"contracts/OPZToken_flattened.sol\":21689:21726  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"contracts/OPZToken_flattened.sol\":21685:21995  if (currentAllowance != type(uint256).max) {... */\n      tag_94\n      jumpi\n        /* \"contracts/OPZToken_flattened.sol\":21765:21770  value */\n      dup2\n        /* \"contracts/OPZToken_flattened.sol\":21746:21762  currentAllowance */\n      dup2\n        /* \"contracts/OPZToken_flattened.sol\":21746:21770  currentAllowance < value */\n      lt\n        /* \"contracts/OPZToken_flattened.sol\":21742:21872  if (currentAllowance < value) {... */\n      iszero\n      tag_91\n      jumpi\n        /* \"contracts/OPZToken_flattened.sol\":21797:21857  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2961:2993   */\n      dup5\n      and\n        /* \"contracts/OPZToken_flattened.sol\":21797:21857  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2943:2994   */\n      mstore\n        /* \"#utility.yul\":3010:3028   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3003:3037   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3053:3071   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3046:3080   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":2916:2934   */\n      0x64\n      add\n        /* \"contracts/OPZToken_flattened.sol\":21797:21857  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/OPZToken_flattened.sol\":21742:21872  if (currentAllowance < value) {... */\n    tag_91:\n        /* \"contracts/OPZToken_flattened.sol\":21913:21970  _approve(owner, spender, currentAllowance - value, false) */\n      tag_94\n        /* \"contracts/OPZToken_flattened.sol\":21922:21927  owner */\n      dup5\n        /* \"contracts/OPZToken_flattened.sol\":21929:21936  spender */\n      dup5\n        /* \"contracts/OPZToken_flattened.sol\":21957:21962  value */\n      dup5\n        /* \"contracts/OPZToken_flattened.sol\":21938:21954  currentAllowance */\n      dup5\n        /* \"contracts/OPZToken_flattened.sol\":21938:21962  currentAllowance - value */\n      sub\n        /* \"contracts/OPZToken_flattened.sol\":21964:21969  false */\n      0x00\n        /* \"contracts/OPZToken_flattened.sol\":21913:21921  _approve */\n      tag_87\n        /* \"contracts/OPZToken_flattened.sol\":21913:21970  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_94:\n        /* \"contracts/OPZToken_flattened.sol\":21613:22001  {... */\n      pop\n        /* \"contracts/OPZToken_flattened.sol\":21524:22001  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OPZToken_flattened.sol\":16517:16817  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_71:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OPZToken_flattened.sol\":16600:16618  from == address(0) */\n      dup4\n      and\n        /* \"contracts/OPZToken_flattened.sol\":16596:16682  if (from == address(0)) {... */\n      tag_96\n      jumpi\n        /* \"contracts/OPZToken_flattened.sol\":16641:16671  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"contracts/OPZToken_flattened.sol\":16668:16669  0 */\n      0x00\n        /* \"contracts/OPZToken_flattened.sol\":16641:16671  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3237:3288   */\n      mstore\n        /* \"#utility.yul\":3210:3228   */\n      0x24\n      add\n        /* \"contracts/OPZToken_flattened.sol\":16641:16671  ERC20InvalidSender(address(0)) */\n      tag_92\n        /* \"#utility.yul\":3091:3294   */\n      jump\n        /* \"contracts/OPZToken_flattened.sol\":16596:16682  if (from == address(0)) {... */\n    tag_96:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OPZToken_flattened.sol\":16695:16711  to == address(0) */\n      dup3\n      and\n        /* \"contracts/OPZToken_flattened.sol\":16691:16777  if (to == address(0)) {... */\n      tag_99\n      jumpi\n        /* \"contracts/OPZToken_flattened.sol\":16734:16766  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"contracts/OPZToken_flattened.sol\":16763:16764  0 */\n      0x00\n        /* \"contracts/OPZToken_flattened.sol\":16734:16766  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3237:3288   */\n      mstore\n        /* \"#utility.yul\":3210:3228   */\n      0x24\n      add\n        /* \"contracts/OPZToken_flattened.sol\":16734:16766  ERC20InvalidReceiver(address(0)) */\n      tag_92\n        /* \"#utility.yul\":3091:3294   */\n      jump\n        /* \"contracts/OPZToken_flattened.sol\":16691:16777  if (to == address(0)) {... */\n    tag_99:\n        /* \"contracts/OPZToken_flattened.sol\":16786:16810  _update(from, to, value) */\n      tag_86\n        /* \"contracts/OPZToken_flattened.sol\":16794:16798  from */\n      dup4\n        /* \"contracts/OPZToken_flattened.sol\":16800:16802  to */\n      dup4\n        /* \"contracts/OPZToken_flattened.sol\":16804:16809  value */\n      dup4\n        /* \"contracts/OPZToken_flattened.sol\":16786:16793  _update */\n      tag_102\n        /* \"contracts/OPZToken_flattened.sol\":16786:16810  _update(from, to, value) */\n      jump\t// in\n        /* \"contracts/OPZToken_flattened.sol\":20810:21242  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_87:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OPZToken_flattened.sol\":20922:20941  owner == address(0) */\n      dup5\n      and\n        /* \"contracts/OPZToken_flattened.sol\":20918:21007  if (owner == address(0)) {... */\n      tag_104\n      jumpi\n        /* \"contracts/OPZToken_flattened.sol\":20964:20996  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"contracts/OPZToken_flattened.sol\":20993:20994  0 */\n      0x00\n        /* \"contracts/OPZToken_flattened.sol\":20964:20996  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3237:3288   */\n      mstore\n        /* \"#utility.yul\":3210:3228   */\n      0x24\n      add\n        /* \"contracts/OPZToken_flattened.sol\":20964:20996  ERC20InvalidApprover(address(0)) */\n      tag_92\n        /* \"#utility.yul\":3091:3294   */\n      jump\n        /* \"contracts/OPZToken_flattened.sol\":20918:21007  if (owner == address(0)) {... */\n    tag_104:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OPZToken_flattened.sol\":21020:21041  spender == address(0) */\n      dup4\n      and\n        /* \"contracts/OPZToken_flattened.sol\":21016:21106  if (spender == address(0)) {... */\n      tag_106\n      jumpi\n        /* \"contracts/OPZToken_flattened.sol\":21064:21095  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"contracts/OPZToken_flattened.sol\":21092:21093  0 */\n      0x00\n        /* \"contracts/OPZToken_flattened.sol\":21064:21095  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3237:3288   */\n      mstore\n        /* \"#utility.yul\":3210:3228   */\n      0x24\n      add\n        /* \"contracts/OPZToken_flattened.sol\":21064:21095  ERC20InvalidSpender(address(0)) */\n      tag_92\n        /* \"#utility.yul\":3091:3294   */\n      jump\n        /* \"contracts/OPZToken_flattened.sol\":21016:21106  if (spender == address(0)) {... */\n    tag_106:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OPZToken_flattened.sol\":21115:21133  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/OPZToken_flattened.sol\":21115:21126  _allowances */\n      0x01\n        /* \"contracts/OPZToken_flattened.sol\":21115:21133  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/OPZToken_flattened.sol\":21115:21142  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"contracts/OPZToken_flattened.sol\":21115:21150  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/OPZToken_flattened.sol\":21160:21236  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_94\n      jumpi\n        /* \"contracts/OPZToken_flattened.sol\":21210:21217  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OPZToken_flattened.sol\":21194:21225  Approval(owner, spender, value) */\n      and\n        /* \"contracts/OPZToken_flattened.sol\":21203:21208  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OPZToken_flattened.sol\":21194:21225  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/OPZToken_flattened.sol\":21219:21224  value */\n      dup5\n        /* \"contracts/OPZToken_flattened.sol\":21194:21225  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_109\n      swap2\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"contracts/OPZToken_flattened.sol\":21194:21225  Approval(owner, spender, value) */\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/OPZToken_flattened.sol\":20810:21242  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OPZToken_flattened.sol\":17132:18239  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_102:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OPZToken_flattened.sol\":17221:17239  from == address(0) */\n      dup4\n      and\n        /* \"contracts/OPZToken_flattened.sol\":17217:17757  if (from == address(0)) {... */\n      tag_111\n      jumpi\n        /* \"contracts/OPZToken_flattened.sol\":17373:17378  value */\n      dup1\n        /* \"contracts/OPZToken_flattened.sol\":17357:17369  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/OPZToken_flattened.sol\":17357:17378  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_112\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/OPZToken_flattened.sol\":17217:17757  if (from == address(0)) {... */\n      tag_114\n      swap1\n      pop\n      jump\n    tag_111:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OPZToken_flattened.sol\":17431:17446  _balances[from] */\n      dup4\n      and\n        /* \"contracts/OPZToken_flattened.sol\":17409:17428  uint256 fromBalance */\n      0x00\n        /* \"contracts/OPZToken_flattened.sol\":17431:17446  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/OPZToken_flattened.sol\":17464:17483  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"contracts/OPZToken_flattened.sol\":17460:17575  if (fromBalance < value) {... */\n      iszero\n      tag_115\n      jumpi\n        /* \"contracts/OPZToken_flattened.sol\":17510:17560  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2961:2993   */\n      dup6\n      and\n        /* \"contracts/OPZToken_flattened.sol\":17510:17560  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2943:2994   */\n      mstore\n        /* \"#utility.yul\":3010:3028   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3003:3037   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3053:3071   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3046:3080   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":2916:2934   */\n      0x64\n      add\n        /* \"contracts/OPZToken_flattened.sol\":17510:17560  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_92\n        /* \"#utility.yul\":2741:3086   */\n      jump\n        /* \"contracts/OPZToken_flattened.sol\":17460:17575  if (fromBalance < value) {... */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OPZToken_flattened.sol\":17695:17710  _balances[from] */\n      dup5\n      and\n        /* \"contracts/OPZToken_flattened.sol\":17695:17704  _balances */\n      0x00\n        /* \"contracts/OPZToken_flattened.sol\":17695:17710  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/OPZToken_flattened.sol\":17713:17732  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"contracts/OPZToken_flattened.sol\":17695:17732  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"contracts/OPZToken_flattened.sol\":17217:17757  if (from == address(0)) {... */\n    tag_114:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OPZToken_flattened.sol\":17771:17787  to == address(0) */\n      dup3\n      and\n        /* \"contracts/OPZToken_flattened.sol\":17767:18192  if (to == address(0)) {... */\n      tag_117\n      jumpi\n        /* \"contracts/OPZToken_flattened.sol\":17934:17946  _totalSupply */\n      0x02\n        /* \"contracts/OPZToken_flattened.sol\":17934:17955  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"contracts/OPZToken_flattened.sol\":17767:18192  if (to == address(0)) {... */\n      jump(tag_118)\n    tag_117:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OPZToken_flattened.sol\":18145:18158  _balances[to] */\n      dup3\n      and\n        /* \"contracts/OPZToken_flattened.sol\":18145:18154  _balances */\n      0x00\n        /* \"contracts/OPZToken_flattened.sol\":18145:18158  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/OPZToken_flattened.sol\":18145:18167  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"contracts/OPZToken_flattened.sol\":17767:18192  if (to == address(0)) {... */\n    tag_118:\n        /* \"contracts/OPZToken_flattened.sol\":18222:18224  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OPZToken_flattened.sol\":18207:18232  Transfer(from, to, value) */\n      and\n        /* \"contracts/OPZToken_flattened.sol\":18216:18220  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/OPZToken_flattened.sol\":18207:18232  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/OPZToken_flattened.sol\":18226:18231  value */\n      dup4\n        /* \"contracts/OPZToken_flattened.sol\":18207:18232  Transfer(from, to, value) */\n      mload(0x40)\n      tag_119\n      swap2\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"contracts/OPZToken_flattened.sol\":18207:18232  Transfer(from, to, value) */\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/OPZToken_flattened.sol\":17132:18239  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:562   */\n    tag_16:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      0x20\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_123:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_125\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_123)\n    tag_125:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_120:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_127\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_127:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_19:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_129\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_129:\n        /* \"#utility.yul\":913:942   */\n      tag_130\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_120\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_29:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_134\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_134:\n        /* \"#utility.yul\":1563:1592   */\n      tag_135\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_120\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_136\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_120\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2086   */\n    tag_38:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_139\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_139:\n        /* \"#utility.yul\":2051:2080   */\n      tag_140\n        /* \"#utility.yul\":2070:2079   */\n      dup3\n        /* \"#utility.yul\":2051:2080   */\n      tag_120\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":2041:2080   */\n      swap4\n        /* \"#utility.yul\":1900:2086   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2351   */\n    tag_50:\n        /* \"#utility.yul\":2159:2165   */\n      0x00\n        /* \"#utility.yul\":2167:2173   */\n      dup1\n        /* \"#utility.yul\":2220:2222   */\n      0x40\n        /* \"#utility.yul\":2208:2217   */\n      dup4\n        /* \"#utility.yul\":2199:2206   */\n      dup6\n        /* \"#utility.yul\":2195:2218   */\n      sub\n        /* \"#utility.yul\":2191:2223   */\n      slt\n        /* \"#utility.yul\":2188:2240   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":2236:2237   */\n      0x00\n        /* \"#utility.yul\":2233:2234   */\n      dup1\n        /* \"#utility.yul\":2226:2238   */\n      revert\n        /* \"#utility.yul\":2188:2240   */\n    tag_142:\n        /* \"#utility.yul\":2259:2288   */\n      tag_143\n        /* \"#utility.yul\":2278:2287   */\n      dup4\n        /* \"#utility.yul\":2259:2288   */\n      tag_120\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":2249:2288   */\n      swap2\n      pop\n        /* \"#utility.yul\":2307:2345   */\n      tag_144\n        /* \"#utility.yul\":2341:2343   */\n      0x20\n        /* \"#utility.yul\":2330:2339   */\n      dup5\n        /* \"#utility.yul\":2326:2344   */\n      add\n        /* \"#utility.yul\":2307:2345   */\n      tag_120\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":2297:2345   */\n      swap1\n      pop\n        /* \"#utility.yul\":2091:2351   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2356:2736   */\n    tag_55:\n        /* \"#utility.yul\":2435:2436   */\n      0x01\n        /* \"#utility.yul\":2431:2443   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2478:2490   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2499:2560   */\n      tag_146\n      jumpi\n        /* \"#utility.yul\":2553:2557   */\n      0x7f\n        /* \"#utility.yul\":2545:2551   */\n      dup3\n        /* \"#utility.yul\":2541:2558   */\n      and\n        /* \"#utility.yul\":2531:2558   */\n      swap2\n      pop\n        /* \"#utility.yul\":2499:2560   */\n    tag_146:\n        /* \"#utility.yul\":2606:2608   */\n      0x20\n        /* \"#utility.yul\":2598:2604   */\n      dup3\n        /* \"#utility.yul\":2595:2609   */\n      lt\n        /* \"#utility.yul\":2575:2593   */\n      dup2\n        /* \"#utility.yul\":2572:2610   */\n      sub\n        /* \"#utility.yul\":2569:2730   */\n      tag_147\n      jumpi\n        /* \"#utility.yul\":2652:2662   */\n      0x4e487b71\n        /* \"#utility.yul\":2647:2650   */\n      0xe0\n        /* \"#utility.yul\":2643:2663   */\n      shl\n        /* \"#utility.yul\":2640:2641   */\n      0x00\n        /* \"#utility.yul\":2633:2664   */\n      mstore\n        /* \"#utility.yul\":2687:2691   */\n      0x22\n        /* \"#utility.yul\":2684:2685   */\n      0x04\n        /* \"#utility.yul\":2677:2692   */\n      mstore\n        /* \"#utility.yul\":2715:2719   */\n      0x24\n        /* \"#utility.yul\":2712:2713   */\n      0x00\n        /* \"#utility.yul\":2705:2720   */\n      revert\n        /* \"#utility.yul\":2569:2730   */\n    tag_147:\n      pop\n        /* \"#utility.yul\":2356:2736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3299:3521   */\n    tag_113:\n        /* \"#utility.yul\":3364:3373   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3385:3395   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3382:3515   */\n      iszero\n      tag_60\n      jumpi\n        /* \"#utility.yul\":3437:3447   */\n      0x4e487b71\n        /* \"#utility.yul\":3432:3435   */\n      0xe0\n        /* \"#utility.yul\":3428:3448   */\n      shl\n        /* \"#utility.yul\":3425:3426   */\n      0x00\n        /* \"#utility.yul\":3418:3449   */\n      mstore\n        /* \"#utility.yul\":3472:3476   */\n      0x11\n        /* \"#utility.yul\":3469:3470   */\n      0x04\n        /* \"#utility.yul\":3462:3477   */\n      mstore\n        /* \"#utility.yul\":3500:3504   */\n      0x24\n        /* \"#utility.yul\":3497:3498   */\n      0x00\n        /* \"#utility.yul\":3490:3505   */\n      revert\n\n    auxdata: 0xa264697066735822122023ce6d4a5f4fa4133f0c793a2af580d8d6a96a15ae0e700ee5c5f89afae130b164736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_308": {
									"entryPoint": null,
									"id": 308,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_793": {
									"entryPoint": null,
									"id": 793,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_611": {
									"entryPoint": 181,
									"id": 611,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_578": {
									"entryPoint": 245,
									"id": 578,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_335": {
									"entryPoint": 176,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1230,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 930,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 1181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 626,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 568,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 910,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 548,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5250:1",
										"nodeType": "YulBlock",
										"src": "0:5250:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:1",
													"nodeType": "YulBlock",
													"src": "46:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:1",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:1",
																				"nodeType": "YulLiteral",
																				"src": "70:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:1",
																				"nodeType": "YulLiteral",
																				"src": "75:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:1"
																		},
																		"nativeSrc": "66:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nativeSrc": "56:31:1",
																"nodeType": "YulFunctionCall",
																"src": "56:31:1"
															},
															"nativeSrc": "56:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:1",
																		"nodeType": "YulLiteral",
																		"src": "103:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:1",
																		"nodeType": "YulLiteral",
																		"src": "106:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:1"
																},
																"nativeSrc": "96:15:1",
																"nodeType": "YulFunctionCall",
																"src": "96:15:1"
															},
															"nativeSrc": "96:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:1",
																		"nodeType": "YulLiteral",
																		"src": "127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:1",
																		"nodeType": "YulLiteral",
																		"src": "130:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nativeSrc": "120:15:1",
																"nodeType": "YulFunctionCall",
																"src": "120:15:1"
															},
															"nativeSrc": "120:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:1"
											},
											{
												"body": {
													"nativeSrc": "201:325:1",
													"nodeType": "YulBlock",
													"src": "201:325:1",
													"statements": [
														{
															"nativeSrc": "211:22:1",
															"nodeType": "YulAssignment",
															"src": "211:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "225:1:1",
																		"nodeType": "YulLiteral",
																		"src": "225:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "228:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "221:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:1"
																},
																"nativeSrc": "221:12:1",
																"nodeType": "YulFunctionCall",
																"src": "221:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "211:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:1"
																}
															]
														},
														{
															"nativeSrc": "242:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "272:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:1",
																		"nodeType": "YulLiteral",
																		"src": "278:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "268:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:1"
																},
																"nativeSrc": "268:12:1",
																"nodeType": "YulFunctionCall",
																"src": "268:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "246:18:1",
																	"nodeType": "YulTypedName",
																	"src": "246:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "319:31:1",
																"nodeType": "YulBlock",
																"src": "319:31:1",
																"statements": [
																	{
																		"nativeSrc": "321:27:1",
																		"nodeType": "YulAssignment",
																		"src": "321:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "335:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "343:4:1",
																					"nodeType": "YulLiteral",
																					"src": "343:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "331:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:1"
																			},
																			"nativeSrc": "331:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "321:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "299:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "292:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:1"
																},
																"nativeSrc": "292:26:1",
																"nodeType": "YulFunctionCall",
																"src": "292:26:1"
															},
															"nativeSrc": "289:61:1",
															"nodeType": "YulIf",
															"src": "289:61:1"
														},
														{
															"body": {
																"nativeSrc": "409:111:1",
																"nodeType": "YulBlock",
																"src": "409:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "430:1:1",
																					"nodeType": "YulLiteral",
																					"src": "430:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "437:3:1",
																							"nodeType": "YulLiteral",
																							"src": "437:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "442:10:1",
																							"nodeType": "YulLiteral",
																							"src": "442:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "433:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:1"
																					},
																					"nativeSrc": "433:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "423:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:1"
																			},
																			"nativeSrc": "423:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:1"
																		},
																		"nativeSrc": "423:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "474:1:1",
																					"nodeType": "YulLiteral",
																					"src": "474:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "477:4:1",
																					"nodeType": "YulLiteral",
																					"src": "477:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "467:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:1"
																			},
																			"nativeSrc": "467:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:1"
																		},
																		"nativeSrc": "467:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "502:1:1",
																					"nodeType": "YulLiteral",
																					"src": "502:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "505:4:1",
																					"nodeType": "YulLiteral",
																					"src": "505:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "495:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:1"
																			},
																			"nativeSrc": "495:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:1"
																		},
																		"nativeSrc": "495:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "365:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "388:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "396:2:1",
																				"nodeType": "YulLiteral",
																				"src": "396:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "385:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:1"
																		},
																		"nativeSrc": "385:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "362:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:1"
																},
																"nativeSrc": "362:38:1",
																"nodeType": "YulFunctionCall",
																"src": "362:38:1"
															},
															"nativeSrc": "359:161:1",
															"nodeType": "YulIf",
															"src": "359:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "146:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "181:4:1",
														"nodeType": "YulTypedName",
														"src": "181:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "190:6:1",
														"nodeType": "YulTypedName",
														"src": "190:6:1",
														"type": ""
													}
												],
												"src": "146:380:1"
											},
											{
												"body": {
													"nativeSrc": "587:65:1",
													"nodeType": "YulBlock",
													"src": "587:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "604:1:1",
																		"nodeType": "YulLiteral",
																		"src": "604:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "607:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "597:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																},
																"nativeSrc": "597:14:1",
																"nodeType": "YulFunctionCall",
																"src": "597:14:1"
															},
															"nativeSrc": "597:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "597:14:1"
														},
														{
															"nativeSrc": "620:26:1",
															"nodeType": "YulAssignment",
															"src": "620:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "638:1:1",
																		"nodeType": "YulLiteral",
																		"src": "638:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "641:4:1",
																		"nodeType": "YulLiteral",
																		"src": "641:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "628:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:1"
																},
																"nativeSrc": "628:18:1",
																"nodeType": "YulFunctionCall",
																"src": "628:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "620:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "531:121:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "570:3:1",
														"nodeType": "YulTypedName",
														"src": "570:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "578:4:1",
														"nodeType": "YulTypedName",
														"src": "578:4:1",
														"type": ""
													}
												],
												"src": "531:121:1"
											},
											{
												"body": {
													"nativeSrc": "738:437:1",
													"nodeType": "YulBlock",
													"src": "738:437:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "771:398:1",
																"nodeType": "YulBlock",
																"src": "771:398:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "792:1:1",
																					"nodeType": "YulLiteral",
																					"src": "792:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "795:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "795:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "785:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "785:6:1"
																			},
																			"nativeSrc": "785:16:1",
																			"nodeType": "YulFunctionCall",
																			"src": "785:16:1"
																		},
																		"nativeSrc": "785:16:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "785:16:1"
																	},
																	{
																		"nativeSrc": "814:30:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "814:30:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "836:1:1",
																					"nodeType": "YulLiteral",
																					"src": "836:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "839:4:1",
																					"nodeType": "YulLiteral",
																					"src": "839:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "826:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "826:9:1"
																			},
																			"nativeSrc": "826:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "826:18:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "818:4:1",
																				"nodeType": "YulTypedName",
																				"src": "818:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "857:57:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "857:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "880:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "880:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "890:1:1",
																							"nodeType": "YulLiteral",
																							"src": "890:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "897:10:1",
																									"nodeType": "YulIdentifier",
																									"src": "897:10:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "909:2:1",
																									"nodeType": "YulLiteral",
																									"src": "909:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "893:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "893:3:1"
																							},
																							"nativeSrc": "893:19:1",
																							"nodeType": "YulFunctionCall",
																							"src": "893:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "886:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "886:3:1"
																					},
																					"nativeSrc": "886:27:1",
																					"nodeType": "YulFunctionCall",
																					"src": "886:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "876:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "876:3:1"
																			},
																			"nativeSrc": "876:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "876:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "861:11:1",
																				"nodeType": "YulTypedName",
																				"src": "861:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "951:23:1",
																			"nodeType": "YulBlock",
																			"src": "951:23:1",
																			"statements": [
																				{
																					"nativeSrc": "953:19:1",
																					"nodeType": "YulAssignment",
																					"src": "953:19:1",
																					"value": {
																						"name": "data",
																						"nativeSrc": "968:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "968:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "953:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "953:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "933:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "933:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "945:4:1",
																					"nodeType": "YulLiteral",
																					"src": "945:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "930:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "930:2:1"
																			},
																			"nativeSrc": "930:20:1",
																			"nodeType": "YulFunctionCall",
																			"src": "930:20:1"
																		},
																		"nativeSrc": "927:47:1",
																		"nodeType": "YulIf",
																		"src": "927:47:1"
																	},
																	{
																		"nativeSrc": "987:41:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "987:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1001:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "1001:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1011:1:1",
																							"nodeType": "YulLiteral",
																							"src": "1011:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1018:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1018:3:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1023:2:1",
																									"nodeType": "YulLiteral",
																									"src": "1023:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1014:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "1014:3:1"
																							},
																							"nativeSrc": "1014:12:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1014:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1007:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1007:3:1"
																					},
																					"nativeSrc": "1007:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1007:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "997:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "997:3:1"
																			},
																			"nativeSrc": "997:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "997:31:1"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "991:2:1",
																				"nodeType": "YulTypedName",
																				"src": "991:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1041:24:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1041:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1054:11:1",
																			"nodeType": "YulIdentifier",
																			"src": "1054:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1045:5:1",
																				"nodeType": "YulTypedName",
																				"src": "1045:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1139:20:1",
																			"nodeType": "YulBlock",
																			"src": "1139:20:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1148:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "1148:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1155:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1155:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1141:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "1141:6:1"
																						},
																						"nativeSrc": "1141:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1141:16:1"
																					},
																					"nativeSrc": "1141:16:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "1141:16:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1089:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "1089:5:1"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1096:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "1096:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1086:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "1086:2:1"
																			},
																			"nativeSrc": "1086:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1086:13:1"
																		},
																		"nativeSrc": "1078:81:1",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1100:26:1",
																			"nodeType": "YulBlock",
																			"src": "1100:26:1",
																			"statements": [
																				{
																					"nativeSrc": "1102:22:1",
																					"nodeType": "YulAssignment",
																					"src": "1102:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1115:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "1115:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1122:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1122:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1111:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1111:3:1"
																						},
																						"nativeSrc": "1111:13:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1111:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1102:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "1102:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1082:3:1",
																			"nodeType": "YulBlock",
																			"src": "1082:3:1",
																			"statements": []
																		},
																		"src": "1078:81:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "754:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "759:2:1",
																		"nodeType": "YulLiteral",
																		"src": "759:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "751:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:1"
																},
																"nativeSrc": "751:11:1",
																"nodeType": "YulFunctionCall",
																"src": "751:11:1"
															},
															"nativeSrc": "748:421:1",
															"nodeType": "YulIf",
															"src": "748:421:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "657:518:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "710:5:1",
														"nodeType": "YulTypedName",
														"src": "710:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "717:3:1",
														"nodeType": "YulTypedName",
														"src": "717:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "722:10:1",
														"nodeType": "YulTypedName",
														"src": "722:10:1",
														"type": ""
													}
												],
												"src": "657:518:1"
											},
											{
												"body": {
													"nativeSrc": "1265:81:1",
													"nodeType": "YulBlock",
													"src": "1265:81:1",
													"statements": [
														{
															"nativeSrc": "1275:65:1",
															"nodeType": "YulAssignment",
															"src": "1275:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1290:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1290:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1308:1:1",
																										"nodeType": "YulLiteral",
																										"src": "1308:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1311:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "1311:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1304:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1304:3:1"
																								},
																								"nativeSrc": "1304:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1304:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1321:1:1",
																										"nodeType": "YulLiteral",
																										"src": "1321:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1317:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1317:3:1"
																								},
																								"nativeSrc": "1317:6:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1317:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1300:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1300:3:1"
																						},
																						"nativeSrc": "1300:24:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1300:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1296:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1296:3:1"
																				},
																				"nativeSrc": "1296:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1296:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1286:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1286:3:1"
																		},
																		"nativeSrc": "1286:40:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1286:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1332:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1332:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1335:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1335:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1328:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1328:3:1"
																		},
																		"nativeSrc": "1328:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1328:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1283:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1283:2:1"
																},
																"nativeSrc": "1283:57:1",
																"nodeType": "YulFunctionCall",
																"src": "1283:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1275:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1275:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1180:166:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1242:4:1",
														"nodeType": "YulTypedName",
														"src": "1242:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1248:3:1",
														"nodeType": "YulTypedName",
														"src": "1248:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1256:4:1",
														"nodeType": "YulTypedName",
														"src": "1256:4:1",
														"type": ""
													}
												],
												"src": "1180:166:1"
											},
											{
												"body": {
													"nativeSrc": "1447:1249:1",
													"nodeType": "YulBlock",
													"src": "1447:1249:1",
													"statements": [
														{
															"nativeSrc": "1457:24:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1457:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1477:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1477:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1471:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1471:5:1"
																},
																"nativeSrc": "1471:10:1",
																"nodeType": "YulFunctionCall",
																"src": "1471:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1461:6:1",
																	"nodeType": "YulTypedName",
																	"src": "1461:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1524:22:1",
																"nodeType": "YulBlock",
																"src": "1524:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1526:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1526:16:1"
																			},
																			"nativeSrc": "1526:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1526:18:1"
																		},
																		"nativeSrc": "1526:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1526:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1496:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1496:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1512:2:1",
																						"nodeType": "YulLiteral",
																						"src": "1512:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1516:1:1",
																						"nodeType": "YulLiteral",
																						"src": "1516:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1508:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1508:3:1"
																				},
																				"nativeSrc": "1508:10:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1508:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1520:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1520:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1504:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1504:3:1"
																		},
																		"nativeSrc": "1504:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1504:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1493:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1493:2:1"
																},
																"nativeSrc": "1493:30:1",
																"nodeType": "YulFunctionCall",
																"src": "1493:30:1"
															},
															"nativeSrc": "1490:56:1",
															"nodeType": "YulIf",
															"src": "1490:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1599:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1599:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1637:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "1637:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1631:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "1631:5:1"
																				},
																				"nativeSrc": "1631:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1631:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1605:25:1",
																			"nodeType": "YulIdentifier",
																			"src": "1605:25:1"
																		},
																		"nativeSrc": "1605:38:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1605:38:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1645:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1645:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1555:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "1555:43:1"
																},
																"nativeSrc": "1555:97:1",
																"nodeType": "YulFunctionCall",
																"src": "1555:97:1"
															},
															"nativeSrc": "1555:97:1",
															"nodeType": "YulExpressionStatement",
															"src": "1555:97:1"
														},
														{
															"nativeSrc": "1661:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1661:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1678:1:1",
																"nodeType": "YulLiteral",
																"src": "1678:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1665:9:1",
																	"nodeType": "YulTypedName",
																	"src": "1665:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1688:23:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1688:23:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1707:4:1",
																"nodeType": "YulLiteral",
																"src": "1707:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "1692:11:1",
																	"nodeType": "YulTypedName",
																	"src": "1692:11:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1720:17:1",
															"nodeType": "YulAssignment",
															"src": "1720:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1733:4:1",
																"nodeType": "YulLiteral",
																"src": "1733:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1720:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "1720:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1783:656:1",
																		"nodeType": "YulBlock",
																		"src": "1783:656:1",
																		"statements": [
																			{
																				"nativeSrc": "1797:35:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1797:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "1816:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "1816:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "1828:2:1",
																									"nodeType": "YulLiteral",
																									"src": "1828:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "1824:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "1824:3:1"
																							},
																							"nativeSrc": "1824:7:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1824:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "1812:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1812:3:1"
																					},
																					"nativeSrc": "1812:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1812:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "1801:7:1",
																						"nodeType": "YulTypedName",
																						"src": "1801:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1845:49:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1845:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "1889:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "1889:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "1859:29:1",
																						"nodeType": "YulIdentifier",
																						"src": "1859:29:1"
																					},
																					"nativeSrc": "1859:35:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1859:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "1849:6:1",
																						"nodeType": "YulTypedName",
																						"src": "1849:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1907:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1907:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1916:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1916:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "1911:1:1",
																						"nodeType": "YulTypedName",
																						"src": "1911:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "1994:172:1",
																					"nodeType": "YulBlock",
																					"src": "1994:172:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2019:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2019:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2037:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "2037:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2042:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "2042:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2033:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "2033:3:1"
																												},
																												"nativeSrc": "2033:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "2033:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2027:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "2027:5:1"
																										},
																										"nativeSrc": "2027:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2027:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2012:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2012:6:1"
																								},
																								"nativeSrc": "2012:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2012:42:1"
																							},
																							"nativeSrc": "2012:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "2012:42:1"
																						},
																						{
																							"nativeSrc": "2071:24:1",
																							"nodeType": "YulAssignment",
																							"src": "2071:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2085:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2085:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2093:1:1",
																										"nodeType": "YulLiteral",
																										"src": "2093:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2081:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2081:3:1"
																								},
																								"nativeSrc": "2081:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2081:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2071:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2071:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2112:40:1",
																							"nodeType": "YulAssignment",
																							"src": "2112:40:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2129:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "2129:9:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2140:11:1",
																										"nodeType": "YulIdentifier",
																										"src": "2140:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2125:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2125:3:1"
																								},
																								"nativeSrc": "2125:27:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2125:27:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2112:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "2112:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "1941:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "1941:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "1944:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "1944:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "1938:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "1938:2:1"
																					},
																					"nativeSrc": "1938:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1938:14:1"
																				},
																				"nativeSrc": "1930:236:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "1953:28:1",
																					"nodeType": "YulBlock",
																					"src": "1953:28:1",
																					"statements": [
																						{
																							"nativeSrc": "1955:24:1",
																							"nodeType": "YulAssignment",
																							"src": "1955:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "1964:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "1964:1:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "1967:11:1",
																										"nodeType": "YulIdentifier",
																										"src": "1967:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1960:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1960:3:1"
																								},
																								"nativeSrc": "1960:19:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1960:19:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "1955:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "1955:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "1934:3:1",
																					"nodeType": "YulBlock",
																					"src": "1934:3:1",
																					"statements": []
																				},
																				"src": "1930:236:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "2214:166:1",
																					"nodeType": "YulBlock",
																					"src": "2214:166:1",
																					"statements": [
																						{
																							"nativeSrc": "2232:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2232:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2259:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "2259:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2264:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "2264:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2255:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2255:3:1"
																										},
																										"nativeSrc": "2255:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2255:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2249:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2249:5:1"
																								},
																								"nativeSrc": "2249:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2249:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2236:9:1",
																									"nodeType": "YulTypedName",
																									"src": "2236:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2299:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2299:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2311:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "2311:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2338:1:1",
																																				"nodeType": "YulLiteral",
																																				"src": "2338:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2341:6:1",
																																				"nodeType": "YulIdentifier",
																																				"src": "2341:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2334:3:1",
																																			"nodeType": "YulIdentifier",
																																			"src": "2334:3:1"
																																		},
																																		"nativeSrc": "2334:14:1",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2334:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2350:3:1",
																																		"nodeType": "YulLiteral",
																																		"src": "2350:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2330:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "2330:3:1"
																																},
																																"nativeSrc": "2330:24:1",
																																"nodeType": "YulFunctionCall",
																																"src": "2330:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2360:1:1",
																																		"nodeType": "YulLiteral",
																																		"src": "2360:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2356:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "2356:3:1"
																																},
																																"nativeSrc": "2356:6:1",
																																"nodeType": "YulFunctionCall",
																																"src": "2356:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2326:3:1",
																															"nodeType": "YulIdentifier",
																															"src": "2326:3:1"
																														},
																														"nativeSrc": "2326:37:1",
																														"nodeType": "YulFunctionCall",
																														"src": "2326:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2322:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "2322:3:1"
																												},
																												"nativeSrc": "2322:42:1",
																												"nodeType": "YulFunctionCall",
																												"src": "2322:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2307:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2307:3:1"
																										},
																										"nativeSrc": "2307:58:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2307:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2292:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2292:6:1"
																								},
																								"nativeSrc": "2292:74:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2292:74:1"
																							},
																							"nativeSrc": "2292:74:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "2292:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2185:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "2185:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2194:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "2194:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2182:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "2182:2:1"
																					},
																					"nativeSrc": "2182:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2182:19:1"
																				},
																				"nativeSrc": "2179:201:1",
																				"nodeType": "YulIf",
																				"src": "2179:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2400:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "2400:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2414:1:1",
																											"nodeType": "YulLiteral",
																											"src": "2414:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2417:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "2417:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2410:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "2410:3:1"
																									},
																									"nativeSrc": "2410:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "2410:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2426:1:1",
																									"nodeType": "YulLiteral",
																									"src": "2426:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2406:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "2406:3:1"
																							},
																							"nativeSrc": "2406:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2406:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2393:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2393:6:1"
																					},
																					"nativeSrc": "2393:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2393:36:1"
																				},
																				"nativeSrc": "2393:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "2393:36:1"
																			}
																		]
																	},
																	"nativeSrc": "1776:663:1",
																	"nodeType": "YulCase",
																	"src": "1776:663:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1781:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1781:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2456:234:1",
																		"nodeType": "YulBlock",
																		"src": "2456:234:1",
																		"statements": [
																			{
																				"nativeSrc": "2470:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2470:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2483:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2483:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2474:5:1",
																						"nodeType": "YulTypedName",
																						"src": "2474:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2519:67:1",
																					"nodeType": "YulBlock",
																					"src": "2519:67:1",
																					"statements": [
																						{
																							"nativeSrc": "2537:35:1",
																							"nodeType": "YulAssignment",
																							"src": "2537:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2556:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "2556:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2561:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "2561:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2552:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2552:3:1"
																										},
																										"nativeSrc": "2552:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2552:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2546:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2546:5:1"
																								},
																								"nativeSrc": "2546:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2546:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2537:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2537:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2500:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "2500:6:1"
																				},
																				"nativeSrc": "2497:89:1",
																				"nodeType": "YulIf",
																				"src": "2497:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2606:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "2606:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2665:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2665:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2672:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2672:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2612:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "2612:52:1"
																							},
																							"nativeSrc": "2612:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2612:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2599:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2599:6:1"
																					},
																					"nativeSrc": "2599:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2599:81:1"
																				},
																				"nativeSrc": "2599:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "2599:81:1"
																			}
																		]
																	},
																	"nativeSrc": "2448:242:1",
																	"nodeType": "YulCase",
																	"src": "2448:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1756:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1756:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1764:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1764:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1753:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1753:2:1"
																},
																"nativeSrc": "1753:14:1",
																"nodeType": "YulFunctionCall",
																"src": "1753:14:1"
															},
															"nativeSrc": "1746:944:1",
															"nodeType": "YulSwitch",
															"src": "1746:944:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1351:1345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1432:4:1",
														"nodeType": "YulTypedName",
														"src": "1432:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1438:3:1",
														"nodeType": "YulTypedName",
														"src": "1438:3:1",
														"type": ""
													}
												],
												"src": "1351:1345:1"
											},
											{
												"body": {
													"nativeSrc": "2733:95:1",
													"nodeType": "YulBlock",
													"src": "2733:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2750:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2750:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2757:3:1",
																				"nodeType": "YulLiteral",
																				"src": "2757:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2762:10:1",
																				"nodeType": "YulLiteral",
																				"src": "2762:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2753:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2753:3:1"
																		},
																		"nativeSrc": "2753:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2753:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2743:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2743:6:1"
																},
																"nativeSrc": "2743:31:1",
																"nodeType": "YulFunctionCall",
																"src": "2743:31:1"
															},
															"nativeSrc": "2743:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "2743:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2790:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2793:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2793:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2783:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2783:6:1"
																},
																"nativeSrc": "2783:15:1",
																"nodeType": "YulFunctionCall",
																"src": "2783:15:1"
															},
															"nativeSrc": "2783:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "2783:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2814:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2814:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2817:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2817:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2807:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2807:6:1"
																},
																"nativeSrc": "2807:15:1",
																"nodeType": "YulFunctionCall",
																"src": "2807:15:1"
															},
															"nativeSrc": "2807:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "2807:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2701:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "2701:127:1"
											},
											{
												"body": {
													"nativeSrc": "2897:352:1",
													"nodeType": "YulBlock",
													"src": "2897:352:1",
													"statements": [
														{
															"nativeSrc": "2907:16:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2907:16:1",
															"value": {
																"kind": "number",
																"nativeSrc": "2922:1:1",
																"nodeType": "YulLiteral",
																"src": "2922:1:1",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "2911:7:1",
																	"nodeType": "YulTypedName",
																	"src": "2911:7:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2932:10:1",
															"nodeType": "YulAssignment",
															"src": "2932:10:1",
															"value": {
																"kind": "number",
																"nativeSrc": "2941:1:1",
																"nodeType": "YulLiteral",
																"src": "2941:1:1",
																"type": "",
																"value": "1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "2932:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2932:5:1"
																}
															]
														},
														{
															"nativeSrc": "2951:13:1",
															"nodeType": "YulAssignment",
															"src": "2951:13:1",
															"value": {
																"name": "_base",
																"nativeSrc": "2959:5:1",
																"nodeType": "YulIdentifier",
																"src": "2959:5:1"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "2951:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2951:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3015:228:1",
																"nodeType": "YulBlock",
																"src": "3015:228:1",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "3060:22:1",
																			"nodeType": "YulBlock",
																			"src": "3060:22:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "3062:16:1",
																							"nodeType": "YulIdentifier",
																							"src": "3062:16:1"
																						},
																						"nativeSrc": "3062:18:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3062:18:1"
																					},
																					"nativeSrc": "3062:18:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "3062:18:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "3035:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "3035:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3049:1:1",
																									"nodeType": "YulLiteral",
																									"src": "3049:1:1",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3045:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "3045:3:1"
																							},
																							"nativeSrc": "3045:6:1",
																							"nodeType": "YulFunctionCall",
																							"src": "3045:6:1"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "3053:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "3053:4:1"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "3041:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3041:3:1"
																					},
																					"nativeSrc": "3041:17:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3041:17:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "3032:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "3032:2:1"
																			},
																			"nativeSrc": "3032:27:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3032:27:1"
																		},
																		"nativeSrc": "3029:53:1",
																		"nodeType": "YulIf",
																		"src": "3029:53:1"
																	},
																	{
																		"body": {
																			"nativeSrc": "3121:29:1",
																			"nodeType": "YulBlock",
																			"src": "3121:29:1",
																			"statements": [
																				{
																					"nativeSrc": "3123:25:1",
																					"nodeType": "YulAssignment",
																					"src": "3123:25:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "3136:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "3136:5:1"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "3143:4:1",
																								"nodeType": "YulIdentifier",
																								"src": "3143:4:1"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "3132:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3132:3:1"
																						},
																						"nativeSrc": "3132:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3132:16:1"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "3123:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "3123:5:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "3102:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "3102:8:1"
																				},
																				{
																					"name": "power_1",
																					"nativeSrc": "3112:7:1",
																					"nodeType": "YulIdentifier",
																					"src": "3112:7:1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3098:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3098:3:1"
																			},
																			"nativeSrc": "3098:22:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3098:22:1"
																		},
																		"nativeSrc": "3095:55:1",
																		"nodeType": "YulIf",
																		"src": "3095:55:1"
																	},
																	{
																		"nativeSrc": "3163:23:1",
																		"nodeType": "YulAssignment",
																		"src": "3163:23:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "3175:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "3175:4:1"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "3181:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "3181:4:1"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "3171:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3171:3:1"
																			},
																			"nativeSrc": "3171:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3171:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "3163:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "3163:4:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3199:34:1",
																		"nodeType": "YulAssignment",
																		"src": "3199:34:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nativeSrc": "3215:7:1",
																					"nodeType": "YulIdentifier",
																					"src": "3215:7:1"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "3224:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "3224:8:1"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "3211:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3211:3:1"
																			},
																			"nativeSrc": "3211:22:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3211:22:1"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "3199:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "3199:8:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "2984:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "2984:8:1"
																	},
																	{
																		"name": "power_1",
																		"nativeSrc": "2994:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "2994:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2981:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2981:2:1"
																},
																"nativeSrc": "2981:21:1",
																"nodeType": "YulFunctionCall",
																"src": "2981:21:1"
															},
															"nativeSrc": "2973:270:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3003:3:1",
																"nodeType": "YulBlock",
																"src": "3003:3:1",
																"statements": []
															},
															"pre": {
																"nativeSrc": "2977:3:1",
																"nodeType": "YulBlock",
																"src": "2977:3:1",
																"statements": []
															},
															"src": "2973:270:1"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "2833:416:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nativeSrc": "2861:5:1",
														"nodeType": "YulTypedName",
														"src": "2861:5:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "2868:8:1",
														"nodeType": "YulTypedName",
														"src": "2868:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "2881:5:1",
														"nodeType": "YulTypedName",
														"src": "2881:5:1",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "2888:4:1",
														"nodeType": "YulTypedName",
														"src": "2888:4:1",
														"type": ""
													}
												],
												"src": "2833:416:1"
											},
											{
												"body": {
													"nativeSrc": "3313:747:1",
													"nodeType": "YulBlock",
													"src": "3313:747:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3351:52:1",
																"nodeType": "YulBlock",
																"src": "3351:52:1",
																"statements": [
																	{
																		"nativeSrc": "3365:10:1",
																		"nodeType": "YulAssignment",
																		"src": "3365:10:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "3374:1:1",
																			"nodeType": "YulLiteral",
																			"src": "3374:1:1",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "3365:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3365:5:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3388:5:1",
																		"nodeType": "YulLeave",
																		"src": "3388:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "3333:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "3333:8:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3326:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3326:6:1"
																},
																"nativeSrc": "3326:16:1",
																"nodeType": "YulFunctionCall",
																"src": "3326:16:1"
															},
															"nativeSrc": "3323:80:1",
															"nodeType": "YulIf",
															"src": "3323:80:1"
														},
														{
															"body": {
																"nativeSrc": "3436:52:1",
																"nodeType": "YulBlock",
																"src": "3436:52:1",
																"statements": [
																	{
																		"nativeSrc": "3450:10:1",
																		"nodeType": "YulAssignment",
																		"src": "3450:10:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "3459:1:1",
																			"nodeType": "YulLiteral",
																			"src": "3459:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "3450:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3450:5:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3473:5:1",
																		"nodeType": "YulLeave",
																		"src": "3473:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "3422:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3422:4:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3415:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3415:6:1"
																},
																"nativeSrc": "3415:12:1",
																"nodeType": "YulFunctionCall",
																"src": "3415:12:1"
															},
															"nativeSrc": "3412:76:1",
															"nodeType": "YulIf",
															"src": "3412:76:1"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3524:52:1",
																		"nodeType": "YulBlock",
																		"src": "3524:52:1",
																		"statements": [
																			{
																				"nativeSrc": "3538:10:1",
																				"nodeType": "YulAssignment",
																				"src": "3538:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3547:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3547:1:1",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "3538:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "3538:5:1"
																					}
																				]
																			},
																			{
																				"nativeSrc": "3561:5:1",
																				"nodeType": "YulLeave",
																				"src": "3561:5:1"
																			}
																		]
																	},
																	"nativeSrc": "3517:59:1",
																	"nodeType": "YulCase",
																	"src": "3517:59:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3522:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3522:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3592:123:1",
																		"nodeType": "YulBlock",
																		"src": "3592:123:1",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "3627:22:1",
																					"nodeType": "YulBlock",
																					"src": "3627:22:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "3629:16:1",
																									"nodeType": "YulIdentifier",
																									"src": "3629:16:1"
																								},
																								"nativeSrc": "3629:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "3629:18:1"
																							},
																							"nativeSrc": "3629:18:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "3629:18:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "3612:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "3612:8:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3622:3:1",
																							"nodeType": "YulLiteral",
																							"src": "3622:3:1",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "3609:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "3609:2:1"
																					},
																					"nativeSrc": "3609:17:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3609:17:1"
																				},
																				"nativeSrc": "3606:43:1",
																				"nodeType": "YulIf",
																				"src": "3606:43:1"
																			},
																			{
																				"nativeSrc": "3662:25:1",
																				"nodeType": "YulAssignment",
																				"src": "3662:25:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "3675:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "3675:8:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3685:1:1",
																							"nodeType": "YulLiteral",
																							"src": "3685:1:1",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3671:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3671:3:1"
																					},
																					"nativeSrc": "3671:16:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3671:16:1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "3662:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "3662:5:1"
																					}
																				]
																			},
																			{
																				"nativeSrc": "3700:5:1",
																				"nodeType": "YulLeave",
																				"src": "3700:5:1"
																			}
																		]
																	},
																	"nativeSrc": "3585:130:1",
																	"nodeType": "YulCase",
																	"src": "3585:130:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3590:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3590:1:1",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "3504:4:1",
																"nodeType": "YulIdentifier",
																"src": "3504:4:1"
															},
															"nativeSrc": "3497:218:1",
															"nodeType": "YulSwitch",
															"src": "3497:218:1"
														},
														{
															"body": {
																"nativeSrc": "3813:70:1",
																"nodeType": "YulBlock",
																"src": "3813:70:1",
																"statements": [
																	{
																		"nativeSrc": "3827:28:1",
																		"nodeType": "YulAssignment",
																		"src": "3827:28:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "3840:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "3840:4:1"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "3846:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "3846:8:1"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "3836:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3836:3:1"
																			},
																			"nativeSrc": "3836:19:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3836:19:1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "3827:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3827:5:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3868:5:1",
																		"nodeType": "YulLeave",
																		"src": "3868:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "3737:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "3737:4:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3743:2:1",
																						"nodeType": "YulLiteral",
																						"src": "3743:2:1",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "3734:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "3734:2:1"
																				},
																				"nativeSrc": "3734:12:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3734:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "3751:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "3751:8:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3761:2:1",
																						"nodeType": "YulLiteral",
																						"src": "3761:2:1",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "3748:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "3748:2:1"
																				},
																				"nativeSrc": "3748:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3748:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3730:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3730:3:1"
																		},
																		"nativeSrc": "3730:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3730:35:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "3774:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "3774:4:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3780:3:1",
																						"nodeType": "YulLiteral",
																						"src": "3780:3:1",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "3771:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "3771:2:1"
																				},
																				"nativeSrc": "3771:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3771:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "3789:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "3789:8:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3799:2:1",
																						"nodeType": "YulLiteral",
																						"src": "3799:2:1",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "3786:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "3786:2:1"
																				},
																				"nativeSrc": "3786:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3786:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3767:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:1"
																		},
																		"nativeSrc": "3767:36:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3767:36:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3727:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3727:2:1"
																},
																"nativeSrc": "3727:77:1",
																"nodeType": "YulFunctionCall",
																"src": "3727:77:1"
															},
															"nativeSrc": "3724:159:1",
															"nodeType": "YulIf",
															"src": "3724:159:1"
														},
														{
															"nativeSrc": "3892:57:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3892:57:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "3934:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3934:4:1"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "3940:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "3940:8:1"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "3915:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "3915:18:1"
																},
																"nativeSrc": "3915:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3915:34:1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "3896:7:1",
																	"nodeType": "YulTypedName",
																	"src": "3896:7:1",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nativeSrc": "3905:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3905:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3994:22:1",
																"nodeType": "YulBlock",
																"src": "3994:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3996:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "3996:16:1"
																			},
																			"nativeSrc": "3996:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3996:18:1"
																		},
																		"nativeSrc": "3996:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3996:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "3964:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "3964:7:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3981:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3981:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3977:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3977:3:1"
																				},
																				"nativeSrc": "3977:6:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3977:6:1"
																			},
																			{
																				"name": "base_1",
																				"nativeSrc": "3985:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3985:6:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "3973:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3973:3:1"
																		},
																		"nativeSrc": "3973:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3973:19:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3961:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3961:2:1"
																},
																"nativeSrc": "3961:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3961:32:1"
															},
															"nativeSrc": "3958:58:1",
															"nodeType": "YulIf",
															"src": "3958:58:1"
														},
														{
															"nativeSrc": "4025:29:1",
															"nodeType": "YulAssignment",
															"src": "4025:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "4038:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "4038:7:1"
																	},
																	{
																		"name": "base_1",
																		"nativeSrc": "4047:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4047:6:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4034:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4034:3:1"
																},
																"nativeSrc": "4034:20:1",
																"nodeType": "YulFunctionCall",
																"src": "4034:20:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4025:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "4025:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "3254:806:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "3284:4:1",
														"nodeType": "YulTypedName",
														"src": "3284:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "3290:8:1",
														"nodeType": "YulTypedName",
														"src": "3290:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "3303:5:1",
														"nodeType": "YulTypedName",
														"src": "3303:5:1",
														"type": ""
													}
												],
												"src": "3254:806:1"
											},
											{
												"body": {
													"nativeSrc": "4133:72:1",
													"nodeType": "YulBlock",
													"src": "4133:72:1",
													"statements": [
														{
															"nativeSrc": "4143:56:1",
															"nodeType": "YulAssignment",
															"src": "4143:56:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "4173:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4173:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nativeSrc": "4183:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "4183:8:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4193:4:1",
																				"nodeType": "YulLiteral",
																				"src": "4193:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4179:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4179:3:1"
																		},
																		"nativeSrc": "4179:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4179:19:1"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "4152:20:1",
																	"nodeType": "YulIdentifier",
																	"src": "4152:20:1"
																},
																"nativeSrc": "4152:47:1",
																"nodeType": "YulFunctionCall",
																"src": "4152:47:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4143:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "4143:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "4065:140:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "4104:4:1",
														"nodeType": "YulTypedName",
														"src": "4104:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "4110:8:1",
														"nodeType": "YulTypedName",
														"src": "4110:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "4123:5:1",
														"nodeType": "YulTypedName",
														"src": "4123:5:1",
														"type": ""
													}
												],
												"src": "4065:140:1"
											},
											{
												"body": {
													"nativeSrc": "4262:116:1",
													"nodeType": "YulBlock",
													"src": "4262:116:1",
													"statements": [
														{
															"nativeSrc": "4272:20:1",
															"nodeType": "YulAssignment",
															"src": "4272:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4287:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4287:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4290:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4290:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4283:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4283:3:1"
																},
																"nativeSrc": "4283:9:1",
																"nodeType": "YulFunctionCall",
																"src": "4283:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4272:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "4272:7:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4350:22:1",
																"nodeType": "YulBlock",
																"src": "4350:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4352:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4352:16:1"
																			},
																			"nativeSrc": "4352:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4352:18:1"
																		},
																		"nativeSrc": "4352:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4352:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "4321:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "4321:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4314:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "4314:6:1"
																				},
																				"nativeSrc": "4314:9:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4314:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "4328:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "4328:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "4335:7:1",
																								"nodeType": "YulIdentifier",
																								"src": "4335:7:1"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "4344:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "4344:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "4331:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "4331:3:1"
																						},
																						"nativeSrc": "4331:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "4331:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "4325:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "4325:2:1"
																				},
																				"nativeSrc": "4325:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4325:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4311:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "4311:2:1"
																		},
																		"nativeSrc": "4311:37:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4311:37:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4304:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4304:6:1"
																},
																"nativeSrc": "4304:45:1",
																"nodeType": "YulFunctionCall",
																"src": "4304:45:1"
															},
															"nativeSrc": "4301:71:1",
															"nodeType": "YulIf",
															"src": "4301:71:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "4210:168:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4241:1:1",
														"nodeType": "YulTypedName",
														"src": "4241:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4244:1:1",
														"nodeType": "YulTypedName",
														"src": "4244:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4250:7:1",
														"nodeType": "YulTypedName",
														"src": "4250:7:1",
														"type": ""
													}
												],
												"src": "4210:168:1"
											},
											{
												"body": {
													"nativeSrc": "4484:102:1",
													"nodeType": "YulBlock",
													"src": "4484:102:1",
													"statements": [
														{
															"nativeSrc": "4494:26:1",
															"nodeType": "YulAssignment",
															"src": "4494:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4506:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4506:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4517:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4517:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4502:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4502:3:1"
																},
																"nativeSrc": "4502:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4502:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4494:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4494:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4536:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4536:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4551:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4551:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4567:3:1",
																								"nodeType": "YulLiteral",
																								"src": "4567:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4572:1:1",
																								"nodeType": "YulLiteral",
																								"src": "4572:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4563:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "4563:3:1"
																						},
																						"nativeSrc": "4563:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "4563:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4576:1:1",
																						"nodeType": "YulLiteral",
																						"src": "4576:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4559:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4559:3:1"
																				},
																				"nativeSrc": "4559:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4559:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4547:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4547:3:1"
																		},
																		"nativeSrc": "4547:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4547:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4529:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4529:6:1"
																},
																"nativeSrc": "4529:51:1",
																"nodeType": "YulFunctionCall",
																"src": "4529:51:1"
															},
															"nativeSrc": "4529:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "4529:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4383:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4453:9:1",
														"nodeType": "YulTypedName",
														"src": "4453:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4464:6:1",
														"nodeType": "YulTypedName",
														"src": "4464:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4475:4:1",
														"nodeType": "YulTypedName",
														"src": "4475:4:1",
														"type": ""
													}
												],
												"src": "4383:203:1"
											},
											{
												"body": {
													"nativeSrc": "4639:77:1",
													"nodeType": "YulBlock",
													"src": "4639:77:1",
													"statements": [
														{
															"nativeSrc": "4649:16:1",
															"nodeType": "YulAssignment",
															"src": "4649:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4660:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4660:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4663:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4663:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4656:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4656:3:1"
																},
																"nativeSrc": "4656:9:1",
																"nodeType": "YulFunctionCall",
																"src": "4656:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4649:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4649:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4688:22:1",
																"nodeType": "YulBlock",
																"src": "4688:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4690:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4690:16:1"
																			},
																			"nativeSrc": "4690:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4690:18:1"
																		},
																		"nativeSrc": "4690:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4690:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4680:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4680:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4683:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4683:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4677:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4677:2:1"
																},
																"nativeSrc": "4677:10:1",
																"nodeType": "YulFunctionCall",
																"src": "4677:10:1"
															},
															"nativeSrc": "4674:36:1",
															"nodeType": "YulIf",
															"src": "4674:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4591:125:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4622:1:1",
														"nodeType": "YulTypedName",
														"src": "4622:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4625:1:1",
														"nodeType": "YulTypedName",
														"src": "4625:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4631:3:1",
														"nodeType": "YulTypedName",
														"src": "4631:3:1",
														"type": ""
													}
												],
												"src": "4591:125:1"
											},
											{
												"body": {
													"nativeSrc": "4878:188:1",
													"nodeType": "YulBlock",
													"src": "4878:188:1",
													"statements": [
														{
															"nativeSrc": "4888:26:1",
															"nodeType": "YulAssignment",
															"src": "4888:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4900:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4900:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4911:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4911:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4896:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4896:3:1"
																},
																"nativeSrc": "4896:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4896:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4888:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4888:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4930:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4930:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4945:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4945:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4961:3:1",
																								"nodeType": "YulLiteral",
																								"src": "4961:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4966:1:1",
																								"nodeType": "YulLiteral",
																								"src": "4966:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4957:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "4957:3:1"
																						},
																						"nativeSrc": "4957:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "4957:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4970:1:1",
																						"nodeType": "YulLiteral",
																						"src": "4970:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4953:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4953:3:1"
																				},
																				"nativeSrc": "4953:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4953:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4941:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4941:3:1"
																		},
																		"nativeSrc": "4941:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4941:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4923:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4923:6:1"
																},
																"nativeSrc": "4923:51:1",
																"nodeType": "YulFunctionCall",
																"src": "4923:51:1"
															},
															"nativeSrc": "4923:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "4923:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4994:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4994:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5005:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5005:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4990:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4990:3:1"
																		},
																		"nativeSrc": "4990:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4990:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5010:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5010:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4983:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4983:6:1"
																},
																"nativeSrc": "4983:34:1",
																"nodeType": "YulFunctionCall",
																"src": "4983:34:1"
															},
															"nativeSrc": "4983:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "4983:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5037:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5037:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5048:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5048:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5033:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5033:3:1"
																		},
																		"nativeSrc": "5033:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5033:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "5053:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5053:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5026:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5026:6:1"
																},
																"nativeSrc": "5026:34:1",
																"nodeType": "YulFunctionCall",
																"src": "5026:34:1"
															},
															"nativeSrc": "5026:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "5026:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4721:345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4831:9:1",
														"nodeType": "YulTypedName",
														"src": "4831:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4842:6:1",
														"nodeType": "YulTypedName",
														"src": "4842:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4850:6:1",
														"nodeType": "YulTypedName",
														"src": "4850:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4858:6:1",
														"nodeType": "YulTypedName",
														"src": "4858:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4869:4:1",
														"nodeType": "YulTypedName",
														"src": "4869:4:1",
														"type": ""
													}
												],
												"src": "4721:345:1"
											},
											{
												"body": {
													"nativeSrc": "5172:76:1",
													"nodeType": "YulBlock",
													"src": "5172:76:1",
													"statements": [
														{
															"nativeSrc": "5182:26:1",
															"nodeType": "YulAssignment",
															"src": "5182:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5194:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5194:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5205:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5205:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5190:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5190:3:1"
																},
																"nativeSrc": "5190:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5190:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5182:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5182:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5224:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5224:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5235:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5235:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5217:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5217:6:1"
																},
																"nativeSrc": "5217:25:1",
																"nodeType": "YulFunctionCall",
																"src": "5217:25:1"
															},
															"nativeSrc": "5217:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "5217:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5071:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5141:9:1",
														"nodeType": "YulTypedName",
														"src": "5141:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5152:6:1",
														"nodeType": "YulTypedName",
														"src": "5152:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5163:4:1",
														"nodeType": "YulTypedName",
														"src": "5163:4:1",
														"type": ""
													}
												],
												"src": "5071:177:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := 1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b506040518060400160405280600981526020016827a82d102a37b5b2b760b91b8152506040518060400160405280600381526020016227a82d60e91b8152508160039081620000609190620002c2565b5060046200006f8282620002c2565b505050620000aa3362000087620000b060201b60201c565b6200009490600a6200049d565b620000a490633b9aca00620004b4565b620000b5565b620004e4565b601290565b6001600160a01b038216620000e45760405163ec442f0560e01b81525f60048201526024015b60405180910390fd5b620000f15f8383620000f5565b5050565b6001600160a01b03831662000123578060025f828254620001179190620004ce565b90915550620001959050565b6001600160a01b0383165f9081526020819052604090205481811015620001775760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401620000db565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216620001b357600280548290039055620001d1565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200021791815260200190565b60405180910390a3505050565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806200024d57607f821691505b6020821081036200026c57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115620002bd57805f5260205f20601f840160051c81016020851015620002995750805b601f840160051c820191505b81811015620002ba575f8155600101620002a5565b50505b505050565b81516001600160401b03811115620002de57620002de62000224565b620002f681620002ef845462000238565b8462000272565b602080601f8311600181146200032c575f8415620003145750858301515b5f19600386901b1c1916600185901b17855562000386565b5f85815260208120601f198616915b828110156200035c578886015182559484019460019091019084016200033b565b50858210156200037a57878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b634e487b7160e01b5f52601160045260245ffd5b600181815b80851115620003e257815f1904821115620003c657620003c66200038e565b80851615620003d457918102915b93841c9390800290620003a7565b509250929050565b5f82620003fa5750600162000497565b816200040857505f62000497565b81600181146200042157600281146200042c576200044c565b600191505062000497565b60ff8411156200044057620004406200038e565b50506001821b62000497565b5060208310610133831016604e8410600b841016171562000471575081810a62000497565b6200047d8383620003a2565b805f19048211156200049357620004936200038e565b0290505b92915050565b5f620004ad60ff841683620003ea565b9392505050565b80820281158282048414176200049757620004976200038e565b808201808211156200049757620004976200038e565b6106f980620004f25f395ff3fe608060405234801561000f575f80fd5b5060043610610090575f3560e01c8063313ce56711610063578063313ce567146100fa57806370a082311461010957806395d89b4114610131578063a9059cbb14610139578063dd62ed3e1461014c575f80fd5b806306fdde0314610094578063095ea7b3146100b257806318160ddd146100d557806323b872dd146100e7575b5f80fd5b61009c610184565b6040516100a99190610553565b60405180910390f35b6100c56100c03660046105ba565b610214565b60405190151581526020016100a9565b6002545b6040519081526020016100a9565b6100c56100f53660046105e2565b61022d565b604051601281526020016100a9565b6100d961011736600461061b565b6001600160a01b03165f9081526020819052604090205490565b61009c610250565b6100c56101473660046105ba565b61025f565b6100d961015a36600461063b565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6060600380546101939061066c565b80601f01602080910402602001604051908101604052809291908181526020018280546101bf9061066c565b801561020a5780601f106101e15761010080835404028352916020019161020a565b820191905f5260205f20905b8154815290600101906020018083116101ed57829003601f168201915b5050505050905090565b5f3361022181858561026c565b60019150505b92915050565b5f3361023a85828561027e565b6102458585856102fe565b506001949350505050565b6060600480546101939061066c565b5f336102218185856102fe565b610279838383600161035b565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f1981146102f857818110156102ea57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b6102f884848484035f61035b565b50505050565b6001600160a01b03831661032757604051634b637e8f60e11b81525f60048201526024016102e1565b6001600160a01b0382166103505760405163ec442f0560e01b81525f60048201526024016102e1565b61027983838361042d565b6001600160a01b0384166103845760405163e602df0560e01b81525f60048201526024016102e1565b6001600160a01b0383166103ad57604051634a1406b160e11b81525f60048201526024016102e1565b6001600160a01b038085165f90815260016020908152604080832093871683529290522082905580156102f857826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161041f91815260200190565b60405180910390a350505050565b6001600160a01b038316610457578060025f82825461044c91906106a4565b909155506104c79050565b6001600160a01b0383165f90815260208190526040902054818110156104a95760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016102e1565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166104e357600280548290039055610501565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161054691815260200190565b60405180910390a3505050565b5f602080835283518060208501525f5b8181101561057f57858101830151858201604001528201610563565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146105b5575f80fd5b919050565b5f80604083850312156105cb575f80fd5b6105d48361059f565b946020939093013593505050565b5f805f606084860312156105f4575f80fd5b6105fd8461059f565b925061060b6020850161059f565b9150604084013590509250925092565b5f6020828403121561062b575f80fd5b6106348261059f565b9392505050565b5f806040838503121561064c575f80fd5b6106558361059f565b91506106636020840161059f565b90509250929050565b600181811c9082168061068057607f821691505b60208210810361069e57634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561022757634e487b7160e01b5f52601160045260245ffdfea264697066735822122023ce6d4a5f4fa4133f0c793a2af580d8d6a96a15ae0e700ee5c5f89afae130b164736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x27A82D102A37B5B2B7 PUSH1 0xB9 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x27A82D PUSH1 0xE9 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x60 SWAP2 SWAP1 PUSH3 0x2C2 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x6F DUP3 DUP3 PUSH3 0x2C2 JUMP JUMPDEST POP POP POP PUSH3 0xAA CALLER PUSH3 0x87 PUSH3 0xB0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x94 SWAP1 PUSH1 0xA PUSH3 0x49D JUMP JUMPDEST PUSH3 0xA4 SWAP1 PUSH4 0x3B9ACA00 PUSH3 0x4B4 JUMP JUMPDEST PUSH3 0xB5 JUMP JUMPDEST PUSH3 0x4E4 JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0xE4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xF1 PUSH0 DUP4 DUP4 PUSH3 0xF5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x123 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x117 SWAP2 SWAP1 PUSH3 0x4CE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH3 0x195 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH3 0x177 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH3 0xDB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x1B3 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH3 0x1D1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x217 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x24D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x26C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x2BD JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x299 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x2BA JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2A5 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x2DE JUMPI PUSH3 0x2DE PUSH3 0x224 JUMP JUMPDEST PUSH3 0x2F6 DUP2 PUSH3 0x2EF DUP5 SLOAD PUSH3 0x238 JUMP JUMPDEST DUP5 PUSH3 0x272 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x32C JUMPI PUSH0 DUP5 ISZERO PUSH3 0x314 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x386 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x35C JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x33B JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x37A JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x3E2 JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH3 0x3C6 JUMPI PUSH3 0x3C6 PUSH3 0x38E JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x3D4 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x3A7 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH3 0x3FA JUMPI POP PUSH1 0x1 PUSH3 0x497 JUMP JUMPDEST DUP2 PUSH3 0x408 JUMPI POP PUSH0 PUSH3 0x497 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x421 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x42C JUMPI PUSH3 0x44C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x497 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x440 JUMPI PUSH3 0x440 PUSH3 0x38E JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x497 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x471 JUMPI POP DUP2 DUP2 EXP PUSH3 0x497 JUMP JUMPDEST PUSH3 0x47D DUP4 DUP4 PUSH3 0x3A2 JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH3 0x493 JUMPI PUSH3 0x493 PUSH3 0x38E JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x4AD PUSH1 0xFF DUP5 AND DUP4 PUSH3 0x3EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH3 0x497 JUMPI PUSH3 0x497 PUSH3 0x38E JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x497 JUMPI PUSH3 0x497 PUSH3 0x38E JUMP JUMPDEST PUSH2 0x6F9 DUP1 PUSH3 0x4F2 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x90 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x14C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xE7 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9C PUSH2 0x184 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x553 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0x5BA JUMP JUMPDEST PUSH2 0x214 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xC5 PUSH2 0xF5 CALLDATASIZE PUSH1 0x4 PUSH2 0x5E2 JUMP JUMPDEST PUSH2 0x22D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xD9 PUSH2 0x117 CALLDATASIZE PUSH1 0x4 PUSH2 0x61B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x9C PUSH2 0x250 JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x147 CALLDATASIZE PUSH1 0x4 PUSH2 0x5BA JUMP JUMPDEST PUSH2 0x25F JUMP JUMPDEST PUSH2 0xD9 PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0x63B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x193 SWAP1 PUSH2 0x66C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1BF SWAP1 PUSH2 0x66C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x20A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x20A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1ED JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x221 DUP2 DUP6 DUP6 PUSH2 0x26C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x23A DUP6 DUP3 DUP6 PUSH2 0x27E JUMP JUMPDEST PUSH2 0x245 DUP6 DUP6 DUP6 PUSH2 0x2FE JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x193 SWAP1 PUSH2 0x66C JUMP JUMPDEST PUSH0 CALLER PUSH2 0x221 DUP2 DUP6 DUP6 PUSH2 0x2FE JUMP JUMPDEST PUSH2 0x279 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x35B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x2F8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x2EA JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2F8 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x35B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x327 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x350 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E1 JUMP JUMPDEST PUSH2 0x279 DUP4 DUP4 DUP4 PUSH2 0x42D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x384 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AD JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x2F8 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x41F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x457 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x44C SWAP2 SWAP1 PUSH2 0x6A4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x4C7 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x4A9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4E3 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x501 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x546 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x57F JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x563 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5B5 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5CB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5D4 DUP4 PUSH2 0x59F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5FD DUP5 PUSH2 0x59F JUMP JUMPDEST SWAP3 POP PUSH2 0x60B PUSH1 0x20 DUP6 ADD PUSH2 0x59F JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x62B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x634 DUP3 PUSH2 0x59F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x64C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x655 DUP4 PUSH2 0x59F JUMP JUMPDEST SWAP2 POP PUSH2 0x663 PUSH1 0x20 DUP5 ADD PUSH2 0x59F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x680 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x69E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x227 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 0xCE PUSH14 0x4A5F4FA4133F0C793A2AF580D8D6 0xA9 PUSH11 0x15AE0E700EE5C5F89AFAE1 ADDRESS 0xB1 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "22115:140:0:-:0;;;22148:105;;;;;;;;;;12757:113;;;;;;;;;;;;;-1:-1:-1;;;12757:113:0;;;;;;;;;;;;;;;;-1:-1:-1;;;12757:113:0;;;12831:5;12823;:13;;;;;;:::i;:::-;-1:-1:-1;12846:7:0;:17;12856:7;12846;:17;:::i;:::-;;12757:113;;22198:48:::1;22204:10;22235;:8;;;:10;;:::i;:::-;22229:16;::::0;:2:::1;:16;:::i;:::-;22216:29;::::0;:10:::1;:29;:::i;:::-;22198:5;:48::i;:::-;22115:140:::0;;13863:82;13936:2;;13863:82::o;18582:208::-;-1:-1:-1;;;;;18652:21:0;;18648:91;;18696:32;;-1:-1:-1;;;18696:32:0;;18725:1;18696:32;;;4529:51:1;4502:18;;18696:32:0;;;;;;;;18648:91;18748:35;18764:1;18768:7;18777:5;18748:7;:35::i;:::-;18582:208;;:::o;17132:1107::-;-1:-1:-1;;;;;17221:18:0;;17217:540;;17373:5;17357:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;17217:540:0;;-1:-1:-1;17217:540:0;;-1:-1:-1;;;;;17431:15:0;;17409:19;17431:15;;;;;;;;;;;17464:19;;;17460:115;;;17510:50;;-1:-1:-1;;;17510:50:0;;-1:-1:-1;;;;;4941:32:1;;17510:50:0;;;4923:51:1;4990:18;;;4983:34;;;5033:18;;;5026:34;;;4896:18;;17510:50:0;4721:345:1;17460:115:0;-1:-1:-1;;;;;17695:15:0;;:9;:15;;;;;;;;;;17713:19;;;;17695:37;;17217:540;-1:-1:-1;;;;;17771:16:0;;17767:425;;17934:12;:21;;;;;;;17767:425;;;-1:-1:-1;;;;;18145:13:0;;:9;:13;;;;;;;;;;:22;;;;;;17767:425;18222:2;-1:-1:-1;;;;;18207:25:0;18216:4;-1:-1:-1;;;;;18207:25:0;;18226:5;18207:25;;;;5217::1;;5205:2;5190:18;;5071:177;18207:25:0;;;;;;;;17132:1107;;;:::o;14:127:1:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:518::-;759:2;754:3;751:11;748:421;;;795:5;792:1;785:16;839:4;836:1;826:18;909:2;897:10;893:19;890:1;886:27;880:4;876:38;945:4;933:10;930:20;927:47;;;-1:-1:-1;968:4:1;927:47;1023:2;1018:3;1014:12;1011:1;1007:20;1001:4;997:31;987:41;;1078:81;1096:2;1089:5;1086:13;1078:81;;;1155:1;1141:16;;1122:1;1111:13;1078:81;;;1082:3;;748:421;657:518;;;:::o;1351:1345::-;1471:10;;-1:-1:-1;;;;;1493:30:1;;1490:56;;;1526:18;;:::i;:::-;1555:97;1645:6;1605:38;1637:4;1631:11;1605:38;:::i;:::-;1599:4;1555:97;:::i;:::-;1707:4;;1764:2;1753:14;;1781:1;1776:663;;;;2483:1;2500:6;2497:89;;;-1:-1:-1;2552:19:1;;;2546:26;2497:89;-1:-1:-1;;1308:1:1;1304:11;;;1300:24;1296:29;1286:40;1332:1;1328:11;;;1283:57;2599:81;;1746:944;;1776:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1812:20:1;;;1930:236;1944:7;1941:1;1938:14;1930:236;;;2033:19;;;2027:26;2012:42;;2125:27;;;;2093:1;2081:14;;;;1960:19;;1930:236;;;1934:3;2194:6;2185:7;2182:19;2179:201;;;2255:19;;;2249:26;-1:-1:-1;;2338:1:1;2334:14;;;2350:3;2330:24;2326:37;2322:42;2307:58;2292:74;;2179:201;;;2426:1;2417:6;2414:1;2410:14;2406:22;2400:4;2393:36;1746:944;;;;;1351:1345;;:::o;2701:127::-;2762:10;2757:3;2753:20;2750:1;2743:31;2793:4;2790:1;2783:15;2817:4;2814:1;2807:15;2833:416;2922:1;2959:5;2922:1;2973:270;2994:7;2984:8;2981:21;2973:270;;;3053:4;3049:1;3045:6;3041:17;3035:4;3032:27;3029:53;;;3062:18;;:::i;:::-;3112:7;3102:8;3098:22;3095:55;;;3132:16;;;;3095:55;3211:22;;;;3171:15;;;;2973:270;;;2977:3;2833:416;;;;;:::o;3254:806::-;3303:5;3333:8;3323:80;;-1:-1:-1;3374:1:1;3388:5;;3323:80;3422:4;3412:76;;-1:-1:-1;3459:1:1;3473:5;;3412:76;3504:4;3522:1;3517:59;;;;3590:1;3585:130;;;;3497:218;;3517:59;3547:1;3538:10;;3561:5;;;3585:130;3622:3;3612:8;3609:17;3606:43;;;3629:18;;:::i;:::-;-1:-1:-1;;3685:1:1;3671:16;;3700:5;;3497:218;;3799:2;3789:8;3786:16;3780:3;3774:4;3771:13;3767:36;3761:2;3751:8;3748:16;3743:2;3737:4;3734:12;3730:35;3727:77;3724:159;;;-1:-1:-1;3836:19:1;;;3868:5;;3724:159;3915:34;3940:8;3934:4;3915:34;:::i;:::-;3985:6;3981:1;3977:6;3973:19;3964:7;3961:32;3958:58;;;3996:18;;:::i;:::-;4034:20;;-1:-1:-1;3254:806:1;;;;;:::o;4065:140::-;4123:5;4152:47;4193:4;4183:8;4179:19;4173:4;4152:47;:::i;:::-;4143:56;4065:140;-1:-1:-1;;;4065:140:1:o;4210:168::-;4283:9;;;4314;;4331:15;;;4325:22;;4311:37;4301:71;;4352:18;;:::i;4591:125::-;4656:9;;;4677:10;;;4674:36;;;4690:18;;:::i;5071:177::-;22115:140:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_662": {
									"entryPoint": 620,
									"id": 662,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_722": {
									"entryPoint": 859,
									"id": 722,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_147": {
									"entryPoint": null,
									"id": 147,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_770": {
									"entryPoint": 638,
									"id": 770,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_501": {
									"entryPoint": 766,
									"id": 501,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_578": {
									"entryPoint": 1069,
									"id": 578,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_398": {
									"entryPoint": null,
									"id": 398,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_422": {
									"entryPoint": 532,
									"id": 422,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_357": {
									"entryPoint": null,
									"id": 357,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_335": {
									"entryPoint": null,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_317": {
									"entryPoint": 388,
									"id": 317,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_326": {
									"entryPoint": 592,
									"id": 326,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_344": {
									"entryPoint": null,
									"id": 344,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_454": {
									"entryPoint": 557,
									"id": 454,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_381": {
									"entryPoint": 607,
									"id": 381,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1439,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1595,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1466,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1644,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3523:1",
										"nodeType": "YulBlock",
										"src": "0:3523:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:427:1",
													"nodeType": "YulBlock",
													"src": "135:427:1",
													"statements": [
														{
															"nativeSrc": "145:12:1",
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:1",
															"value": {
																"kind": "number",
																"nativeSrc": "155:2:1",
																"nodeType": "YulLiteral",
																"src": "155:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "149:2:1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "173:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "184:2:1",
																		"nodeType": "YulLiteral",
																		"src": "184:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "166:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nativeSrc": "166:21:1",
																"nodeType": "YulFunctionCall",
																"src": "166:21:1"
															},
															"nativeSrc": "166:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "166:21:1"
														},
														{
															"nativeSrc": "196:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "216:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "210:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:1"
																},
																"nativeSrc": "210:13:1",
																"nodeType": "YulFunctionCall",
																"src": "210:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "200:6:1",
																	"nodeType": "YulTypedName",
																	"src": "200:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "243:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "254:2:1",
																				"nodeType": "YulLiteral",
																				"src": "254:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "239:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:1"
																		},
																		"nativeSrc": "239:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "259:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "232:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:1"
																},
																"nativeSrc": "232:34:1",
																"nodeType": "YulFunctionCall",
																"src": "232:34:1"
															},
															"nativeSrc": "232:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "232:34:1"
														},
														{
															"nativeSrc": "275:10:1",
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:1",
															"value": {
																"kind": "number",
																"nativeSrc": "284:1:1",
																"nodeType": "YulLiteral",
																"src": "284:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "279:1:1",
																	"nodeType": "YulTypedName",
																	"src": "279:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "344:90:1",
																"nodeType": "YulBlock",
																"src": "344:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nativeSrc": "373:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:1"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "384:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "369:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:1"
																							},
																							"nativeSrc": "369:17:1",
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "388:2:1",
																							"nodeType": "YulLiteral",
																							"src": "388:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "365:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:1"
																					},
																					"nativeSrc": "365:26:1",
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nativeSrc": "407:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:1"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "415:1:1",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "403:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:1"
																									},
																									"nativeSrc": "403:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:1"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "419:2:1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "399:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:1"
																							},
																							"nativeSrc": "399:23:1",
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "393:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:1"
																					},
																					"nativeSrc": "393:30:1",
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "358:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:1"
																			},
																			"nativeSrc": "358:66:1",
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:1"
																		},
																		"nativeSrc": "358:66:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "305:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "308:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "302:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:1"
																},
																"nativeSrc": "302:13:1",
																"nodeType": "YulFunctionCall",
																"src": "302:13:1"
															},
															"nativeSrc": "294:140:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "316:19:1",
																"nodeType": "YulBlock",
																"src": "316:19:1",
																"statements": [
																	{
																		"nativeSrc": "318:15:1",
																		"nodeType": "YulAssignment",
																		"src": "318:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "327:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:1"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "330:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "323:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:1"
																			},
																			"nativeSrc": "323:10:1",
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "318:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "298:3:1",
																"nodeType": "YulBlock",
																"src": "298:3:1",
																"statements": []
															},
															"src": "294:140:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "458:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:1"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "469:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "454:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:1"
																				},
																				"nativeSrc": "454:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "478:2:1",
																				"nodeType": "YulLiteral",
																				"src": "478:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "450:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:1"
																		},
																		"nativeSrc": "450:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "483:1:1",
																		"nodeType": "YulLiteral",
																		"src": "483:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "443:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:1"
																},
																"nativeSrc": "443:42:1",
																"nodeType": "YulFunctionCall",
																"src": "443:42:1"
															},
															"nativeSrc": "443:42:1",
															"nodeType": "YulExpressionStatement",
															"src": "443:42:1"
														},
														{
															"nativeSrc": "494:62:1",
															"nodeType": "YulAssignment",
															"src": "494:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "510:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "529:6:1",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "537:2:1",
																								"nodeType": "YulLiteral",
																								"src": "537:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "525:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:1"
																						},
																						"nativeSrc": "525:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "546:2:1",
																								"nodeType": "YulLiteral",
																								"src": "546:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "542:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:1"
																						},
																						"nativeSrc": "542:7:1",
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "521:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:1"
																				},
																				"nativeSrc": "521:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "506:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:1"
																		},
																		"nativeSrc": "506:45:1",
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "553:2:1",
																		"nodeType": "YulLiteral",
																		"src": "553:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "502:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:1"
																},
																"nativeSrc": "502:54:1",
																"nodeType": "YulFunctionCall",
																"src": "502:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "494:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:548:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:1",
														"nodeType": "YulTypedName",
														"src": "104:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:1",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:1",
														"nodeType": "YulTypedName",
														"src": "126:4:1",
														"type": ""
													}
												],
												"src": "14:548:1"
											},
											{
												"body": {
													"nativeSrc": "616:124:1",
													"nodeType": "YulBlock",
													"src": "616:124:1",
													"statements": [
														{
															"nativeSrc": "626:29:1",
															"nodeType": "YulAssignment",
															"src": "626:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "648:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "635:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:1"
																},
																"nativeSrc": "635:20:1",
																"nodeType": "YulFunctionCall",
																"src": "635:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "626:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "718:16:1",
																"nodeType": "YulBlock",
																"src": "718:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "727:1:1",
																					"nodeType": "YulLiteral",
																					"src": "727:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "730:1:1",
																					"nodeType": "YulLiteral",
																					"src": "730:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "720:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:1"
																			},
																			"nativeSrc": "720:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:1"
																		},
																		"nativeSrc": "720:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "677:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "688:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "703:3:1",
																										"nodeType": "YulLiteral",
																										"src": "703:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "708:1:1",
																										"nodeType": "YulLiteral",
																										"src": "708:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "699:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:1"
																								},
																								"nativeSrc": "699:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "712:1:1",
																								"nodeType": "YulLiteral",
																								"src": "712:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "695:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:1"
																						},
																						"nativeSrc": "695:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "684:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:1"
																				},
																				"nativeSrc": "684:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "674:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:1"
																		},
																		"nativeSrc": "674:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "667:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:1"
																},
																"nativeSrc": "667:50:1",
																"nodeType": "YulFunctionCall",
																"src": "667:50:1"
															},
															"nativeSrc": "664:70:1",
															"nodeType": "YulIf",
															"src": "664:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "567:173:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "595:6:1",
														"nodeType": "YulTypedName",
														"src": "595:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "606:5:1",
														"nodeType": "YulTypedName",
														"src": "606:5:1",
														"type": ""
													}
												],
												"src": "567:173:1"
											},
											{
												"body": {
													"nativeSrc": "832:167:1",
													"nodeType": "YulBlock",
													"src": "832:167:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "878:16:1",
																"nodeType": "YulBlock",
																"src": "878:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "887:1:1",
																					"nodeType": "YulLiteral",
																					"src": "887:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "890:1:1",
																					"nodeType": "YulLiteral",
																					"src": "890:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "880:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:1"
																			},
																			"nativeSrc": "880:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:1"
																		},
																		"nativeSrc": "880:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "853:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "862:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "849:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:1"
																		},
																		"nativeSrc": "849:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "874:2:1",
																		"nodeType": "YulLiteral",
																		"src": "874:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "845:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:1"
																},
																"nativeSrc": "845:32:1",
																"nodeType": "YulFunctionCall",
																"src": "845:32:1"
															},
															"nativeSrc": "842:52:1",
															"nodeType": "YulIf",
															"src": "842:52:1"
														},
														{
															"nativeSrc": "903:39:1",
															"nodeType": "YulAssignment",
															"src": "903:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "932:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "913:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:1"
																},
																"nativeSrc": "913:29:1",
																"nodeType": "YulFunctionCall",
																"src": "913:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "903:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:1"
																}
															]
														},
														{
															"nativeSrc": "951:42:1",
															"nodeType": "YulAssignment",
															"src": "951:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "978:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "989:2:1",
																				"nodeType": "YulLiteral",
																				"src": "989:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "974:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:1"
																		},
																		"nativeSrc": "974:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "961:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:1"
																},
																"nativeSrc": "961:32:1",
																"nodeType": "YulFunctionCall",
																"src": "961:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "951:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "745:254:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "790:9:1",
														"nodeType": "YulTypedName",
														"src": "790:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "801:7:1",
														"nodeType": "YulTypedName",
														"src": "801:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "813:6:1",
														"nodeType": "YulTypedName",
														"src": "813:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "821:6:1",
														"nodeType": "YulTypedName",
														"src": "821:6:1",
														"type": ""
													}
												],
												"src": "745:254:1"
											},
											{
												"body": {
													"nativeSrc": "1099:92:1",
													"nodeType": "YulBlock",
													"src": "1099:92:1",
													"statements": [
														{
															"nativeSrc": "1109:26:1",
															"nodeType": "YulAssignment",
															"src": "1109:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1121:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1132:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1117:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:1"
																},
																"nativeSrc": "1117:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1117:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1109:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1151:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1176:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1169:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:1"
																				},
																				"nativeSrc": "1169:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1162:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:1"
																		},
																		"nativeSrc": "1162:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1144:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:1"
																},
																"nativeSrc": "1144:41:1",
																"nodeType": "YulFunctionCall",
																"src": "1144:41:1"
															},
															"nativeSrc": "1144:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1004:187:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1068:9:1",
														"nodeType": "YulTypedName",
														"src": "1068:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1079:6:1",
														"nodeType": "YulTypedName",
														"src": "1079:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1090:4:1",
														"nodeType": "YulTypedName",
														"src": "1090:4:1",
														"type": ""
													}
												],
												"src": "1004:187:1"
											},
											{
												"body": {
													"nativeSrc": "1297:76:1",
													"nodeType": "YulBlock",
													"src": "1297:76:1",
													"statements": [
														{
															"nativeSrc": "1307:26:1",
															"nodeType": "YulAssignment",
															"src": "1307:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1319:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1330:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1315:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:1"
																},
																"nativeSrc": "1315:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1315:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1307:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1349:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1360:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1342:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:1"
																},
																"nativeSrc": "1342:25:1",
																"nodeType": "YulFunctionCall",
																"src": "1342:25:1"
															},
															"nativeSrc": "1342:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1196:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1266:9:1",
														"nodeType": "YulTypedName",
														"src": "1266:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1277:6:1",
														"nodeType": "YulTypedName",
														"src": "1277:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1288:4:1",
														"nodeType": "YulTypedName",
														"src": "1288:4:1",
														"type": ""
													}
												],
												"src": "1196:177:1"
											},
											{
												"body": {
													"nativeSrc": "1482:224:1",
													"nodeType": "YulBlock",
													"src": "1482:224:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1528:16:1",
																"nodeType": "YulBlock",
																"src": "1528:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1537:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1540:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1530:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:1"
																			},
																			"nativeSrc": "1530:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:1"
																		},
																		"nativeSrc": "1530:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1503:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1512:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1499:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:1"
																		},
																		"nativeSrc": "1499:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1524:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1495:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:1"
																},
																"nativeSrc": "1495:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1495:32:1"
															},
															"nativeSrc": "1492:52:1",
															"nodeType": "YulIf",
															"src": "1492:52:1"
														},
														{
															"nativeSrc": "1553:39:1",
															"nodeType": "YulAssignment",
															"src": "1553:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1582:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1563:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:1"
																},
																"nativeSrc": "1563:29:1",
																"nodeType": "YulFunctionCall",
																"src": "1563:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1553:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:1"
																}
															]
														},
														{
															"nativeSrc": "1601:48:1",
															"nodeType": "YulAssignment",
															"src": "1601:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1634:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1645:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1630:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:1"
																		},
																		"nativeSrc": "1630:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1611:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:1"
																},
																"nativeSrc": "1611:38:1",
																"nodeType": "YulFunctionCall",
																"src": "1611:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1601:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:1"
																}
															]
														},
														{
															"nativeSrc": "1658:42:1",
															"nodeType": "YulAssignment",
															"src": "1658:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1685:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1696:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1681:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:1"
																		},
																		"nativeSrc": "1681:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1668:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:1"
																},
																"nativeSrc": "1668:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1668:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1658:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1378:328:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1432:9:1",
														"nodeType": "YulTypedName",
														"src": "1432:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1443:7:1",
														"nodeType": "YulTypedName",
														"src": "1443:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1455:6:1",
														"nodeType": "YulTypedName",
														"src": "1455:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1463:6:1",
														"nodeType": "YulTypedName",
														"src": "1463:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1471:6:1",
														"nodeType": "YulTypedName",
														"src": "1471:6:1",
														"type": ""
													}
												],
												"src": "1378:328:1"
											},
											{
												"body": {
													"nativeSrc": "1808:87:1",
													"nodeType": "YulBlock",
													"src": "1808:87:1",
													"statements": [
														{
															"nativeSrc": "1818:26:1",
															"nodeType": "YulAssignment",
															"src": "1818:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1830:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1841:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1826:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:1"
																},
																"nativeSrc": "1826:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1826:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1818:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1860:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1875:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1883:4:1",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1871:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:1"
																		},
																		"nativeSrc": "1871:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1853:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:1"
																},
																"nativeSrc": "1853:36:1",
																"nodeType": "YulFunctionCall",
																"src": "1853:36:1"
															},
															"nativeSrc": "1853:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1711:184:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1777:9:1",
														"nodeType": "YulTypedName",
														"src": "1777:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1788:6:1",
														"nodeType": "YulTypedName",
														"src": "1788:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1799:4:1",
														"nodeType": "YulTypedName",
														"src": "1799:4:1",
														"type": ""
													}
												],
												"src": "1711:184:1"
											},
											{
												"body": {
													"nativeSrc": "1970:116:1",
													"nodeType": "YulBlock",
													"src": "1970:116:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2016:16:1",
																"nodeType": "YulBlock",
																"src": "2016:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2025:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2028:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2018:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:1"
																			},
																			"nativeSrc": "2018:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:1"
																		},
																		"nativeSrc": "2018:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1991:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2000:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1987:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:1"
																		},
																		"nativeSrc": "1987:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2012:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1983:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:1"
																},
																"nativeSrc": "1983:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1983:32:1"
															},
															"nativeSrc": "1980:52:1",
															"nodeType": "YulIf",
															"src": "1980:52:1"
														},
														{
															"nativeSrc": "2041:39:1",
															"nodeType": "YulAssignment",
															"src": "2041:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2070:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2070:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2051:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2051:18:1"
																},
																"nativeSrc": "2051:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2051:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2041:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1900:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1936:9:1",
														"nodeType": "YulTypedName",
														"src": "1936:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1947:7:1",
														"nodeType": "YulTypedName",
														"src": "1947:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1959:6:1",
														"nodeType": "YulTypedName",
														"src": "1959:6:1",
														"type": ""
													}
												],
												"src": "1900:186:1"
											},
											{
												"body": {
													"nativeSrc": "2178:173:1",
													"nodeType": "YulBlock",
													"src": "2178:173:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2224:16:1",
																"nodeType": "YulBlock",
																"src": "2224:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2233:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2233:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2236:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2236:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2226:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2226:6:1"
																			},
																			"nativeSrc": "2226:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2226:12:1"
																		},
																		"nativeSrc": "2226:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2226:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2199:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2199:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2208:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2208:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2195:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2195:3:1"
																		},
																		"nativeSrc": "2195:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2195:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2220:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2220:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2191:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2191:3:1"
																},
																"nativeSrc": "2191:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2191:32:1"
															},
															"nativeSrc": "2188:52:1",
															"nodeType": "YulIf",
															"src": "2188:52:1"
														},
														{
															"nativeSrc": "2249:39:1",
															"nodeType": "YulAssignment",
															"src": "2249:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2278:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2278:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2259:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2259:18:1"
																},
																"nativeSrc": "2259:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2259:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2249:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2249:6:1"
																}
															]
														},
														{
															"nativeSrc": "2297:48:1",
															"nodeType": "YulAssignment",
															"src": "2297:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2330:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2330:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2341:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2341:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2326:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2326:3:1"
																		},
																		"nativeSrc": "2326:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2326:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2307:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2307:18:1"
																},
																"nativeSrc": "2307:38:1",
																"nodeType": "YulFunctionCall",
																"src": "2307:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2297:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2297:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2091:260:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2136:9:1",
														"nodeType": "YulTypedName",
														"src": "2136:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2147:7:1",
														"nodeType": "YulTypedName",
														"src": "2147:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2159:6:1",
														"nodeType": "YulTypedName",
														"src": "2159:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2167:6:1",
														"nodeType": "YulTypedName",
														"src": "2167:6:1",
														"type": ""
													}
												],
												"src": "2091:260:1"
											},
											{
												"body": {
													"nativeSrc": "2411:325:1",
													"nodeType": "YulBlock",
													"src": "2411:325:1",
													"statements": [
														{
															"nativeSrc": "2421:22:1",
															"nodeType": "YulAssignment",
															"src": "2421:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2435:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2435:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2438:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2438:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2431:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2431:3:1"
																},
																"nativeSrc": "2431:12:1",
																"nodeType": "YulFunctionCall",
																"src": "2431:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2421:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2421:6:1"
																}
															]
														},
														{
															"nativeSrc": "2452:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2452:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2482:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2482:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2488:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2488:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2478:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2478:3:1"
																},
																"nativeSrc": "2478:12:1",
																"nodeType": "YulFunctionCall",
																"src": "2478:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2456:18:1",
																	"nodeType": "YulTypedName",
																	"src": "2456:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2529:31:1",
																"nodeType": "YulBlock",
																"src": "2529:31:1",
																"statements": [
																	{
																		"nativeSrc": "2531:27:1",
																		"nodeType": "YulAssignment",
																		"src": "2531:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2545:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "2545:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2553:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2553:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2541:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2541:3:1"
																			},
																			"nativeSrc": "2541:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2541:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2531:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2509:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "2509:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2502:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2502:6:1"
																},
																"nativeSrc": "2502:26:1",
																"nodeType": "YulFunctionCall",
																"src": "2502:26:1"
															},
															"nativeSrc": "2499:61:1",
															"nodeType": "YulIf",
															"src": "2499:61:1"
														},
														{
															"body": {
																"nativeSrc": "2619:111:1",
																"nodeType": "YulBlock",
																"src": "2619:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2640:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2640:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2647:3:1",
																							"nodeType": "YulLiteral",
																							"src": "2647:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2652:10:1",
																							"nodeType": "YulLiteral",
																							"src": "2652:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2643:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "2643:3:1"
																					},
																					"nativeSrc": "2643:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2643:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2633:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2633:6:1"
																			},
																			"nativeSrc": "2633:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2633:31:1"
																		},
																		"nativeSrc": "2633:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2633:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2684:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2684:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2687:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2687:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2677:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2677:6:1"
																			},
																			"nativeSrc": "2677:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2677:15:1"
																		},
																		"nativeSrc": "2677:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2677:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2712:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2712:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2715:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2715:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2705:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2705:6:1"
																			},
																			"nativeSrc": "2705:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2705:15:1"
																		},
																		"nativeSrc": "2705:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2705:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2575:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "2575:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2598:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2598:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2606:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2606:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2595:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2595:2:1"
																		},
																		"nativeSrc": "2595:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2595:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2572:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2572:2:1"
																},
																"nativeSrc": "2572:38:1",
																"nodeType": "YulFunctionCall",
																"src": "2572:38:1"
															},
															"nativeSrc": "2569:161:1",
															"nodeType": "YulIf",
															"src": "2569:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2356:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2391:4:1",
														"nodeType": "YulTypedName",
														"src": "2391:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2400:6:1",
														"nodeType": "YulTypedName",
														"src": "2400:6:1",
														"type": ""
													}
												],
												"src": "2356:380:1"
											},
											{
												"body": {
													"nativeSrc": "2898:188:1",
													"nodeType": "YulBlock",
													"src": "2898:188:1",
													"statements": [
														{
															"nativeSrc": "2908:26:1",
															"nodeType": "YulAssignment",
															"src": "2908:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2920:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2920:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2931:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2931:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2916:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2916:3:1"
																},
																"nativeSrc": "2916:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2916:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2908:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2908:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2950:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2950:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2965:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2965:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2981:3:1",
																								"nodeType": "YulLiteral",
																								"src": "2981:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2986:1:1",
																								"nodeType": "YulLiteral",
																								"src": "2986:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2977:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "2977:3:1"
																						},
																						"nativeSrc": "2977:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2977:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2990:1:1",
																						"nodeType": "YulLiteral",
																						"src": "2990:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2973:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2973:3:1"
																				},
																				"nativeSrc": "2973:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2973:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2961:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2961:3:1"
																		},
																		"nativeSrc": "2961:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2961:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2943:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2943:6:1"
																},
																"nativeSrc": "2943:51:1",
																"nodeType": "YulFunctionCall",
																"src": "2943:51:1"
															},
															"nativeSrc": "2943:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "2943:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3014:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3014:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3025:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3025:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3010:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3010:3:1"
																		},
																		"nativeSrc": "3010:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3010:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3030:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3030:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3003:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3003:6:1"
																},
																"nativeSrc": "3003:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3003:34:1"
															},
															"nativeSrc": "3003:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3003:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3057:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3057:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3068:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3068:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3053:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3053:3:1"
																		},
																		"nativeSrc": "3053:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3053:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3073:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3073:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3046:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3046:6:1"
																},
																"nativeSrc": "3046:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3046:34:1"
															},
															"nativeSrc": "3046:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3046:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "2741:345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2851:9:1",
														"nodeType": "YulTypedName",
														"src": "2851:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2862:6:1",
														"nodeType": "YulTypedName",
														"src": "2862:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2870:6:1",
														"nodeType": "YulTypedName",
														"src": "2870:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2878:6:1",
														"nodeType": "YulTypedName",
														"src": "2878:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2889:4:1",
														"nodeType": "YulTypedName",
														"src": "2889:4:1",
														"type": ""
													}
												],
												"src": "2741:345:1"
											},
											{
												"body": {
													"nativeSrc": "3192:102:1",
													"nodeType": "YulBlock",
													"src": "3192:102:1",
													"statements": [
														{
															"nativeSrc": "3202:26:1",
															"nodeType": "YulAssignment",
															"src": "3202:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3214:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3214:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3225:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3225:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3210:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3210:3:1"
																},
																"nativeSrc": "3210:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3210:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3202:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3202:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3244:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3244:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3259:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3259:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3275:3:1",
																								"nodeType": "YulLiteral",
																								"src": "3275:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3280:1:1",
																								"nodeType": "YulLiteral",
																								"src": "3280:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3271:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3271:3:1"
																						},
																						"nativeSrc": "3271:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3271:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3284:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3284:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3267:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3267:3:1"
																				},
																				"nativeSrc": "3267:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3267:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3255:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3255:3:1"
																		},
																		"nativeSrc": "3255:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3255:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3237:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3237:6:1"
																},
																"nativeSrc": "3237:51:1",
																"nodeType": "YulFunctionCall",
																"src": "3237:51:1"
															},
															"nativeSrc": "3237:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "3237:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3091:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3161:9:1",
														"nodeType": "YulTypedName",
														"src": "3161:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3172:6:1",
														"nodeType": "YulTypedName",
														"src": "3172:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3183:4:1",
														"nodeType": "YulTypedName",
														"src": "3183:4:1",
														"type": ""
													}
												],
												"src": "3091:203:1"
											},
											{
												"body": {
													"nativeSrc": "3347:174:1",
													"nodeType": "YulBlock",
													"src": "3347:174:1",
													"statements": [
														{
															"nativeSrc": "3357:16:1",
															"nodeType": "YulAssignment",
															"src": "3357:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3368:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3368:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3371:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3371:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3364:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3364:3:1"
																},
																"nativeSrc": "3364:9:1",
																"nodeType": "YulFunctionCall",
																"src": "3364:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3357:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3357:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3404:111:1",
																"nodeType": "YulBlock",
																"src": "3404:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3425:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3425:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3432:3:1",
																							"nodeType": "YulLiteral",
																							"src": "3432:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3437:10:1",
																							"nodeType": "YulLiteral",
																							"src": "3437:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3428:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3428:3:1"
																					},
																					"nativeSrc": "3428:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3428:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3418:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3418:6:1"
																			},
																			"nativeSrc": "3418:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3418:31:1"
																		},
																		"nativeSrc": "3418:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3418:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3469:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3469:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3472:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3472:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3462:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3462:6:1"
																			},
																			"nativeSrc": "3462:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3462:15:1"
																		},
																		"nativeSrc": "3462:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3462:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3497:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3497:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3500:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3500:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3490:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3490:6:1"
																			},
																			"nativeSrc": "3490:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3490:15:1"
																		},
																		"nativeSrc": "3490:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3490:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3388:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3388:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3391:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3391:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3385:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3385:2:1"
																},
																"nativeSrc": "3385:10:1",
																"nodeType": "YulFunctionCall",
																"src": "3385:10:1"
															},
															"nativeSrc": "3382:133:1",
															"nodeType": "YulIf",
															"src": "3382:133:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3299:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3330:1:1",
														"nodeType": "YulTypedName",
														"src": "3330:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3333:1:1",
														"nodeType": "YulTypedName",
														"src": "3333:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3339:3:1",
														"nodeType": "YulTypedName",
														"src": "3339:3:1",
														"type": ""
													}
												],
												"src": "3299:222:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610090575f3560e01c8063313ce56711610063578063313ce567146100fa57806370a082311461010957806395d89b4114610131578063a9059cbb14610139578063dd62ed3e1461014c575f80fd5b806306fdde0314610094578063095ea7b3146100b257806318160ddd146100d557806323b872dd146100e7575b5f80fd5b61009c610184565b6040516100a99190610553565b60405180910390f35b6100c56100c03660046105ba565b610214565b60405190151581526020016100a9565b6002545b6040519081526020016100a9565b6100c56100f53660046105e2565b61022d565b604051601281526020016100a9565b6100d961011736600461061b565b6001600160a01b03165f9081526020819052604090205490565b61009c610250565b6100c56101473660046105ba565b61025f565b6100d961015a36600461063b565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6060600380546101939061066c565b80601f01602080910402602001604051908101604052809291908181526020018280546101bf9061066c565b801561020a5780601f106101e15761010080835404028352916020019161020a565b820191905f5260205f20905b8154815290600101906020018083116101ed57829003601f168201915b5050505050905090565b5f3361022181858561026c565b60019150505b92915050565b5f3361023a85828561027e565b6102458585856102fe565b506001949350505050565b6060600480546101939061066c565b5f336102218185856102fe565b610279838383600161035b565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f1981146102f857818110156102ea57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b6102f884848484035f61035b565b50505050565b6001600160a01b03831661032757604051634b637e8f60e11b81525f60048201526024016102e1565b6001600160a01b0382166103505760405163ec442f0560e01b81525f60048201526024016102e1565b61027983838361042d565b6001600160a01b0384166103845760405163e602df0560e01b81525f60048201526024016102e1565b6001600160a01b0383166103ad57604051634a1406b160e11b81525f60048201526024016102e1565b6001600160a01b038085165f90815260016020908152604080832093871683529290522082905580156102f857826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161041f91815260200190565b60405180910390a350505050565b6001600160a01b038316610457578060025f82825461044c91906106a4565b909155506104c79050565b6001600160a01b0383165f90815260208190526040902054818110156104a95760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016102e1565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166104e357600280548290039055610501565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161054691815260200190565b60405180910390a3505050565b5f602080835283518060208501525f5b8181101561057f57858101830151858201604001528201610563565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146105b5575f80fd5b919050565b5f80604083850312156105cb575f80fd5b6105d48361059f565b946020939093013593505050565b5f805f606084860312156105f4575f80fd5b6105fd8461059f565b925061060b6020850161059f565b9150604084013590509250925092565b5f6020828403121561062b575f80fd5b6106348261059f565b9392505050565b5f806040838503121561064c575f80fd5b6106558361059f565b91506106636020840161059f565b90509250929050565b600181811c9082168061068057607f821691505b60208210810361069e57634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561022757634e487b7160e01b5f52601160045260245ffdfea264697066735822122023ce6d4a5f4fa4133f0c793a2af580d8d6a96a15ae0e700ee5c5f89afae130b164736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x90 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x14C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xE7 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9C PUSH2 0x184 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x553 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0x5BA JUMP JUMPDEST PUSH2 0x214 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xC5 PUSH2 0xF5 CALLDATASIZE PUSH1 0x4 PUSH2 0x5E2 JUMP JUMPDEST PUSH2 0x22D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xD9 PUSH2 0x117 CALLDATASIZE PUSH1 0x4 PUSH2 0x61B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x9C PUSH2 0x250 JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x147 CALLDATASIZE PUSH1 0x4 PUSH2 0x5BA JUMP JUMPDEST PUSH2 0x25F JUMP JUMPDEST PUSH2 0xD9 PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0x63B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x193 SWAP1 PUSH2 0x66C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1BF SWAP1 PUSH2 0x66C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x20A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x20A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1ED JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x221 DUP2 DUP6 DUP6 PUSH2 0x26C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x23A DUP6 DUP3 DUP6 PUSH2 0x27E JUMP JUMPDEST PUSH2 0x245 DUP6 DUP6 DUP6 PUSH2 0x2FE JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x193 SWAP1 PUSH2 0x66C JUMP JUMPDEST PUSH0 CALLER PUSH2 0x221 DUP2 DUP6 DUP6 PUSH2 0x2FE JUMP JUMPDEST PUSH2 0x279 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x35B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x2F8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x2EA JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2F8 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x35B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x327 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x350 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E1 JUMP JUMPDEST PUSH2 0x279 DUP4 DUP4 DUP4 PUSH2 0x42D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x384 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AD JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x2F8 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x41F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x457 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x44C SWAP2 SWAP1 PUSH2 0x6A4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x4C7 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x4A9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4E3 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x501 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x546 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x57F JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x563 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5B5 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5CB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5D4 DUP4 PUSH2 0x59F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5FD DUP5 PUSH2 0x59F JUMP JUMPDEST SWAP3 POP PUSH2 0x60B PUSH1 0x20 DUP6 ADD PUSH2 0x59F JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x62B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x634 DUP3 PUSH2 0x59F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x64C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x655 DUP4 PUSH2 0x59F JUMP JUMPDEST SWAP2 POP PUSH2 0x663 PUSH1 0x20 DUP5 ADD PUSH2 0x59F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x680 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x69E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x227 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 0xCE PUSH14 0x4A5F4FA4133F0C793A2AF580D8D6 0xA9 PUSH11 0x15AE0E700EE5C5F89AFAE1 ADDRESS 0xB1 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "22115:140:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12935:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15154:186;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:1;;1162:22;1144:41;;1132:2;1117:18;15154:186:0;1004:187:1;14005:97:0;14083:12;;14005:97;;;1342:25:1;;;1330:2;1315:18;14005:97:0;1196:177:1;15900:244:0;;;;;;:::i;:::-;;:::i;13863:82::-;;;13936:2;1853:36:1;;1841:2;1826:18;13863:82:0;1711:184:1;14160:116:0;;;;;;:::i;:::-;-1:-1:-1;;;;;14251:18:0;14225:7;14251:18;;;;;;;;;;;;14160:116;13137:93;;;:::i;14471:178::-;;;;;;:::i;:::-;;:::i;14707:140::-;;;;;;:::i;:::-;-1:-1:-1;;;;;14813:18:0;;;14787:7;14813:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;14707:140;12935:89;12980:13;13012:5;13005:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12935:89;:::o;15154:186::-;15227:4;7323:10;15281:31;7323:10;15297:7;15306:5;15281:8;:31::i;:::-;15329:4;15322:11;;;15154:186;;;;;:::o;15900:244::-;15987:4;7323:10;16043:37;16059:4;7323:10;16074:5;16043:15;:37::i;:::-;16090:26;16100:4;16106:2;16110:5;16090:9;:26::i;:::-;-1:-1:-1;16133:4:0;;15900:244;-1:-1:-1;;;;15900:244:0:o;13137:93::-;13184:13;13216:7;13209:14;;;;;:::i;14471:178::-;14540:4;7323:10;14594:27;7323:10;14611:2;14615:5;14594:9;:27::i;19850:128::-;19934:37;19943:5;19950:7;19959:5;19966:4;19934:8;:37::i;:::-;19850:128;;;:::o;21524:477::-;-1:-1:-1;;;;;14813:18:0;;;21623:24;14813:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;21689:37:0;;21685:310;;21765:5;21746:16;:24;21742:130;;;21797:60;;-1:-1:-1;;;21797:60:0;;-1:-1:-1;;;;;2961:32:1;;21797:60:0;;;2943:51:1;3010:18;;;3003:34;;;3053:18;;;3046:34;;;2916:18;;21797:60:0;;;;;;;;21742:130;21913:57;21922:5;21929:7;21957:5;21938:16;:24;21964:5;21913:8;:57::i;:::-;21613:388;21524:477;;;:::o;16517:300::-;-1:-1:-1;;;;;16600:18:0;;16596:86;;16641:30;;-1:-1:-1;;;16641:30:0;;16668:1;16641:30;;;3237:51:1;3210:18;;16641:30:0;3091:203:1;16596:86:0;-1:-1:-1;;;;;16695:16:0;;16691:86;;16734:32;;-1:-1:-1;;;16734:32:0;;16763:1;16734:32;;;3237:51:1;3210:18;;16734:32:0;3091:203:1;16691:86:0;16786:24;16794:4;16800:2;16804:5;16786:7;:24::i;20810:432::-;-1:-1:-1;;;;;20922:19:0;;20918:89;;20964:32;;-1:-1:-1;;;20964:32:0;;20993:1;20964:32;;;3237:51:1;3210:18;;20964:32:0;3091:203:1;20918:89:0;-1:-1:-1;;;;;21020:21:0;;21016:90;;21064:31;;-1:-1:-1;;;21064:31:0;;21092:1;21064:31;;;3237:51:1;3210:18;;21064:31:0;3091:203:1;21016:90:0;-1:-1:-1;;;;;21115:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;21160:76;;;;21210:7;-1:-1:-1;;;;;21194:31:0;21203:5;-1:-1:-1;;;;;21194:31:0;;21219:5;21194:31;;;;1342:25:1;;1330:2;1315:18;;1196:177;21194:31:0;;;;;;;;20810:432;;;;:::o;17132:1107::-;-1:-1:-1;;;;;17221:18:0;;17217:540;;17373:5;17357:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;17217:540:0;;-1:-1:-1;17217:540:0;;-1:-1:-1;;;;;17431:15:0;;17409:19;17431:15;;;;;;;;;;;17464:19;;;17460:115;;;17510:50;;-1:-1:-1;;;17510:50:0;;-1:-1:-1;;;;;2961:32:1;;17510:50:0;;;2943:51:1;3010:18;;;3003:34;;;3053:18;;;3046:34;;;2916:18;;17510:50:0;2741:345:1;17460:115:0;-1:-1:-1;;;;;17695:15:0;;:9;:15;;;;;;;;;;17713:19;;;;17695:37;;17217:540;-1:-1:-1;;;;;17771:16:0;;17767:425;;17934:12;:21;;;;;;;17767:425;;;-1:-1:-1;;;;;18145:13:0;;:9;:13;;;;;;;;;;:22;;;;;;17767:425;18222:2;-1:-1:-1;;;;;18207:25:0;18216:4;-1:-1:-1;;;;;18207:25:0;;18226:5;18207:25;;;;1342::1;;1330:2;1315:18;;1196:177;18207:25:0;;;;;;;;17132:1107;;;:::o;14:548:1:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:1;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:1:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:1:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;3299:222::-;3364:9;;;3385:10;;;3382:133;;;3437:10;3432:3;3428:20;3425:1;3418:31;3472:4;3469:1;3462:15;3500:4;3497:1;3490:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "357000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24735",
								"balanceOf(address)": "2559",
								"decimals()": "176",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2325",
								"transfer(address,uint256)": "51282",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 22115,
									"end": 22255,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 22115,
									"end": 22255,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 22115,
									"end": 22255,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 22148,
									"end": 22253,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 22148,
									"end": 22253,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22148,
									"end": 22253,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 22148,
									"end": 22253,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 22148,
									"end": 22253,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 22148,
									"end": 22253,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22148,
									"end": 22253,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22148,
									"end": 22253,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 22148,
									"end": 22253,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 22148,
									"end": 22253,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22148,
									"end": 22253,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "27A82D102A37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "27A82D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12831,
									"end": 12836,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12823,
									"end": 12828,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12823,
									"end": 12836,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12823,
									"end": 12836,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12823,
									"end": 12836,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 12823,
									"end": 12836,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12823,
									"end": 12836,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12823,
									"end": 12836,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 12823,
									"end": 12836,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12823,
									"end": 12836,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 12823,
									"end": 12836,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 12846,
									"end": 12853,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12846,
									"end": 12863,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 12856,
									"end": 12863,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12846,
									"end": 12853,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12846,
									"end": 12863,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 12846,
									"end": 12863,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12846,
									"end": 12863,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 12846,
									"end": 12863,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12846,
									"end": 12863,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22198,
									"end": 22246,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 22204,
									"end": 22214,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 22235,
									"end": 22245,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 22235,
									"end": 22243,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 22235,
									"end": 22243,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 22235,
									"end": 22243,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 22235,
									"end": 22245,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 22235,
									"end": 22245,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 22235,
									"end": 22245,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 22235,
									"end": 22245,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 22235,
									"end": 22245,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22229,
									"end": 22245,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 22229,
									"end": 22245,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22229,
									"end": 22231,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 22229,
									"end": 22245,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 22229,
									"end": 22245,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 22229,
									"end": 22245,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 22229,
									"end": 22245,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22216,
									"end": 22245,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 22216,
									"end": 22245,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22216,
									"end": 22226,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "3B9ACA00"
								},
								{
									"begin": 22216,
									"end": 22245,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 22216,
									"end": 22245,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 22216,
									"end": 22245,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 22216,
									"end": 22245,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22198,
									"end": 22203,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 22198,
									"end": 22246,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 22198,
									"end": 22246,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 22198,
									"end": 22246,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22115,
									"end": 22255,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 22115,
									"end": 22255,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 13863,
									"end": 13945,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 13863,
									"end": 13945,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13936,
									"end": 13938,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 13936,
									"end": 13938,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13863,
									"end": 13945,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18582,
									"end": 18790,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 18582,
									"end": 18790,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 18652,
									"end": 18673,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18652,
									"end": 18673,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18648,
									"end": 18739,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18648,
									"end": 18739,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 18696,
									"end": 18728,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18696,
									"end": 18728,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 18696,
									"end": 18728,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18696,
									"end": 18728,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18725,
									"end": 18726,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18696,
									"end": 18728,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 18696,
									"end": 18728,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18696,
									"end": 18728,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4529,
									"end": 4580,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4502,
									"end": 4520,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 4502,
									"end": 4520,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 18696,
									"end": 18728,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 18696,
									"end": 18728,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18696,
									"end": 18728,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18696,
									"end": 18728,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18696,
									"end": 18728,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18696,
									"end": 18728,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18696,
									"end": 18728,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18696,
									"end": 18728,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18696,
									"end": 18728,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 18648,
									"end": 18739,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18648,
									"end": 18739,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18748,
									"end": 18783,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 18764,
									"end": 18765,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18768,
									"end": 18775,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18777,
									"end": 18782,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18748,
									"end": 18755,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 18748,
									"end": 18783,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18748,
									"end": 18783,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 18748,
									"end": 18783,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18582,
									"end": 18790,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18582,
									"end": 18790,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18582,
									"end": 18790,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17132,
									"end": 18239,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 17132,
									"end": 18239,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17221,
									"end": 17239,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17221,
									"end": 17239,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17217,
									"end": 17757,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 17217,
									"end": 17757,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17373,
									"end": 17378,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17357,
									"end": 17369,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17357,
									"end": 17369,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17357,
									"end": 17378,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17357,
									"end": 17378,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17357,
									"end": 17378,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17357,
									"end": 17378,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 17357,
									"end": 17378,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17357,
									"end": 17378,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17357,
									"end": 17378,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 17357,
									"end": 17378,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17357,
									"end": 17378,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 17357,
									"end": 17378,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17357,
									"end": 17378,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17357,
									"end": 17378,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17357,
									"end": 17378,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 17217,
									"end": 17757,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 17217,
									"end": 17757,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 17217,
									"end": 17757,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17217,
									"end": 17757,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 17217,
									"end": 17757,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17431,
									"end": 17446,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17431,
									"end": 17446,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17409,
									"end": 17428,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17431,
									"end": 17446,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17431,
									"end": 17446,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17431,
									"end": 17446,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17431,
									"end": 17446,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17431,
									"end": 17446,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17431,
									"end": 17446,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17431,
									"end": 17446,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17431,
									"end": 17446,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17431,
									"end": 17446,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17431,
									"end": 17446,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17431,
									"end": 17446,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17464,
									"end": 17483,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17464,
									"end": 17483,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17464,
									"end": 17483,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 17460,
									"end": 17575,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17460,
									"end": 17575,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 17460,
									"end": 17575,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17510,
									"end": 17560,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17510,
									"end": 17560,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 17510,
									"end": 17560,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17510,
									"end": 17560,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4941,
									"end": 4973,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4941,
									"end": 4973,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 17510,
									"end": 17560,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 17510,
									"end": 17560,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17510,
									"end": 17560,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4923,
									"end": 4974,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4990,
									"end": 5008,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 4990,
									"end": 5008,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4990,
									"end": 5008,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4983,
									"end": 5017,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4983,
									"end": 5017,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4983,
									"end": 5017,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5033,
									"end": 5051,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 5033,
									"end": 5051,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5033,
									"end": 5051,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5026,
									"end": 5060,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5026,
									"end": 5060,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5026,
									"end": 5060,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4896,
									"end": 4914,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 4896,
									"end": 4914,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 17510,
									"end": 17560,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 4721,
									"end": 5066,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 17460,
									"end": 17575,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 17460,
									"end": 17575,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17695,
									"end": 17710,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 17695,
									"end": 17710,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17695,
									"end": 17704,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17695,
									"end": 17710,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17695,
									"end": 17710,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17695,
									"end": 17710,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17695,
									"end": 17710,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17695,
									"end": 17710,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17695,
									"end": 17710,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17695,
									"end": 17710,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17695,
									"end": 17710,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17695,
									"end": 17710,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17695,
									"end": 17710,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17713,
									"end": 17732,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17713,
									"end": 17732,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17713,
									"end": 17732,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17713,
									"end": 17732,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17695,
									"end": 17732,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17695,
									"end": 17732,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17217,
									"end": 17757,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 17217,
									"end": 17757,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17771,
									"end": 17787,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17771,
									"end": 17787,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17767,
									"end": 18192,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 17767,
									"end": 18192,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17934,
									"end": 17946,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17934,
									"end": 17955,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17934,
									"end": 17955,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17934,
									"end": 17955,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17934,
									"end": 17955,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17934,
									"end": 17955,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17934,
									"end": 17955,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17934,
									"end": 17955,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17767,
									"end": 18192,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 17767,
									"end": 18192,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17767,
									"end": 18192,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 17767,
									"end": 18192,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 18145,
									"end": 18158,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18145,
									"end": 18158,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18145,
									"end": 18154,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18145,
									"end": 18158,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18145,
									"end": 18158,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18145,
									"end": 18158,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18145,
									"end": 18158,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18145,
									"end": 18158,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18145,
									"end": 18158,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18145,
									"end": 18158,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18145,
									"end": 18158,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18145,
									"end": 18158,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18145,
									"end": 18158,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 18145,
									"end": 18167,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18145,
									"end": 18167,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 18145,
									"end": 18167,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18145,
									"end": 18167,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18145,
									"end": 18167,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18145,
									"end": 18167,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17767,
									"end": 18192,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 17767,
									"end": 18192,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18222,
									"end": 18224,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 18207,
									"end": 18232,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18216,
									"end": 18220,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 18207,
									"end": 18232,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18207,
									"end": 18232,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 18226,
									"end": 18231,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18207,
									"end": 18232,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18207,
									"end": 18232,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18207,
									"end": 18232,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 18207,
									"end": 18232,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5217,
									"end": 5242,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5217,
									"end": 5242,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5205,
									"end": 5207,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5190,
									"end": 5208,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5190,
									"end": 5208,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5071,
									"end": 5248,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 18207,
									"end": 18232,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 18207,
									"end": 18232,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18207,
									"end": 18232,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18207,
									"end": 18232,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18207,
									"end": 18232,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18207,
									"end": 18232,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18207,
									"end": 18232,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18207,
									"end": 18232,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18207,
									"end": 18232,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 17132,
									"end": 18239,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17132,
									"end": 18239,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17132,
									"end": 18239,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17132,
									"end": 18239,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 795,
									"end": 800,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 792,
									"end": 793,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 785,
									"end": 801,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 839,
									"end": 843,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 836,
									"end": 837,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 826,
									"end": 844,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 909,
									"end": 911,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 897,
									"end": 907,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 893,
									"end": 912,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 890,
									"end": 891,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 886,
									"end": 913,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 880,
									"end": 884,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 876,
									"end": 914,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 945,
									"end": 949,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 933,
									"end": 943,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 930,
									"end": 950,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 927,
									"end": 974,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 927,
									"end": 974,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 968,
									"end": 972,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 927,
									"end": 974,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1023,
									"end": 1025,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1018,
									"end": 1021,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 1026,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1012,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1007,
									"end": 1027,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1001,
									"end": 1005,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 997,
									"end": 1028,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1096,
									"end": 1098,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1089,
									"end": 1094,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1086,
									"end": 1099,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1155,
									"end": 1156,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1122,
									"end": 1123,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1111,
									"end": 1124,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1175,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1526,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 1645,
									"end": 1651,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 1637,
									"end": 1641,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1631,
									"end": 1642,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1605,
									"end": 1643,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1599,
									"end": 1603,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1555,
									"end": 1652,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1707,
									"end": 1711,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1707,
									"end": 1711,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1764,
									"end": 1766,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1753,
									"end": 1767,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1753,
									"end": 1767,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2500,
									"end": 2506,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2552,
									"end": 2571,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2552,
									"end": 2571,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2552,
									"end": 2571,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2546,
									"end": 2572,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1308,
									"end": 1309,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1300,
									"end": 1324,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1325,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1286,
									"end": 1326,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1332,
									"end": 1333,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1283,
									"end": 1340,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2599,
									"end": 2680,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2599,
									"end": 2680,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1944,
									"end": 1951,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1941,
									"end": 1942,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1938,
									"end": 1952,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2033,
									"end": 2052,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2033,
									"end": 2052,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2033,
									"end": 2052,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2027,
									"end": 2053,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2012,
									"end": 2054,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2012,
									"end": 2054,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2093,
									"end": 2094,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1960,
									"end": 1979,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1960,
									"end": 1979,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "tag",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1934,
									"end": 1937,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2194,
									"end": 2200,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2185,
									"end": 2192,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2182,
									"end": 2201,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2249,
									"end": 2275,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2338,
									"end": 2339,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2334,
									"end": 2348,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2334,
									"end": 2348,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2334,
									"end": 2348,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2350,
									"end": 2353,
									"name": "PUSH",
									"source": 1,
									"value": "F8"
								},
								{
									"begin": 2330,
									"end": 2354,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2326,
									"end": 2363,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2322,
									"end": 2364,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2307,
									"end": 2365,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2292,
									"end": 2366,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2292,
									"end": 2366,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "tag",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2426,
									"end": 2427,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2414,
									"end": 2415,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2410,
									"end": 2424,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2406,
									"end": 2428,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2400,
									"end": 2404,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2393,
									"end": 2429,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1351,
									"end": 2696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2701,
									"end": 2828,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 2701,
									"end": 2828,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2762,
									"end": 2772,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 2757,
									"end": 2760,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 2753,
									"end": 2773,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2750,
									"end": 2751,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2743,
									"end": 2774,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2793,
									"end": 2797,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 2790,
									"end": 2791,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2783,
									"end": 2798,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2817,
									"end": 2821,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2814,
									"end": 2815,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2807,
									"end": 2822,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2833,
									"end": 3249,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 2833,
									"end": 3249,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2922,
									"end": 2923,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2959,
									"end": 2964,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2922,
									"end": 2923,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2973,
									"end": 3243,
									"name": "tag",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 2973,
									"end": 3243,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2994,
									"end": 3001,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2984,
									"end": 2992,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2981,
									"end": 3002,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2973,
									"end": 3243,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2973,
									"end": 3243,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 2973,
									"end": 3243,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3053,
									"end": 3057,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3049,
									"end": 3050,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3045,
									"end": 3051,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 3035,
									"end": 3039,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3032,
									"end": 3059,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3029,
									"end": 3082,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3029,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 3029,
									"end": 3082,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3062,
									"end": 3080,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 3062,
									"end": 3080,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 3062,
									"end": 3080,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3062,
									"end": 3080,
									"name": "tag",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 3062,
									"end": 3080,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3112,
									"end": 3119,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3102,
									"end": 3110,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3098,
									"end": 3120,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3095,
									"end": 3150,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3095,
									"end": 3150,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 3095,
									"end": 3150,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3132,
									"end": 3148,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3132,
									"end": 3148,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3132,
									"end": 3148,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3132,
									"end": 3148,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3095,
									"end": 3150,
									"name": "tag",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 3095,
									"end": 3150,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3211,
									"end": 3233,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 3211,
									"end": 3233,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3211,
									"end": 3233,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3211,
									"end": 3233,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 3171,
									"end": 3186,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3171,
									"end": 3186,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3171,
									"end": 3186,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3171,
									"end": 3186,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2973,
									"end": 3243,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 2973,
									"end": 3243,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2973,
									"end": 3243,
									"name": "tag",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 2973,
									"end": 3243,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2977,
									"end": 2980,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2833,
									"end": 3249,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2833,
									"end": 3249,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2833,
									"end": 3249,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2833,
									"end": 3249,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2833,
									"end": 3249,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2833,
									"end": 3249,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3254,
									"end": 4060,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 3254,
									"end": 4060,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3303,
									"end": 3308,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3333,
									"end": 3341,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3323,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 3323,
									"end": 3403,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3374,
									"end": 3375,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3388,
									"end": 3393,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 3388,
									"end": 3393,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3323,
									"end": 3403,
									"name": "tag",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 3323,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3422,
									"end": 3426,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3412,
									"end": 3488,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 3412,
									"end": 3488,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3459,
									"end": 3460,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3473,
									"end": 3478,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 3473,
									"end": 3478,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3412,
									"end": 3488,
									"name": "tag",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 3412,
									"end": 3488,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3504,
									"end": 3508,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3522,
									"end": 3523,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3517,
									"end": 3576,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3517,
									"end": 3576,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 3517,
									"end": 3576,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 3517,
									"end": 3576,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3590,
									"end": 3591,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 3585,
									"end": 3715,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3585,
									"end": 3715,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 3585,
									"end": 3715,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 3585,
									"end": 3715,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3497,
									"end": 3715,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 3497,
									"end": 3715,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3517,
									"end": 3576,
									"name": "tag",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 3517,
									"end": 3576,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3547,
									"end": 3548,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3538,
									"end": 3548,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3538,
									"end": 3548,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3561,
									"end": 3566,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3561,
									"end": 3566,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 3561,
									"end": 3566,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3585,
									"end": 3715,
									"name": "tag",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 3585,
									"end": 3715,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3622,
									"end": 3625,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 3612,
									"end": 3620,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3609,
									"end": 3626,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3606,
									"end": 3649,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3606,
									"end": 3649,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 3606,
									"end": 3649,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3629,
									"end": 3647,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 3629,
									"end": 3647,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 3629,
									"end": 3647,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3629,
									"end": 3647,
									"name": "tag",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 3629,
									"end": 3647,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3685,
									"end": 3686,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3671,
									"end": 3687,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3671,
									"end": 3687,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3700,
									"end": 3705,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 3700,
									"end": 3705,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3497,
									"end": 3715,
									"name": "tag",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 3497,
									"end": 3715,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3497,
									"end": 3715,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3799,
									"end": 3801,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3789,
									"end": 3797,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3786,
									"end": 3802,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "PUSH",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3771,
									"end": 3784,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3767,
									"end": 3803,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3761,
									"end": 3763,
									"name": "PUSH",
									"source": 1,
									"value": "4E"
								},
								{
									"begin": 3751,
									"end": 3759,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3748,
									"end": 3764,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3743,
									"end": 3745,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 3737,
									"end": 3741,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3734,
									"end": 3746,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3730,
									"end": 3765,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3727,
									"end": 3804,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3724,
									"end": 3883,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3724,
									"end": 3883,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 3724,
									"end": 3883,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3836,
									"end": 3855,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3836,
									"end": 3855,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3836,
									"end": 3855,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3868,
									"end": 3873,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 3868,
									"end": 3873,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3724,
									"end": 3883,
									"name": "tag",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 3724,
									"end": 3883,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3915,
									"end": 3949,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 3940,
									"end": 3948,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3934,
									"end": 3938,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3915,
									"end": 3949,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 3915,
									"end": 3949,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3915,
									"end": 3949,
									"name": "tag",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 3915,
									"end": 3949,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3985,
									"end": 3991,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3981,
									"end": 3982,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3977,
									"end": 3983,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3973,
									"end": 3992,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 3964,
									"end": 3971,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3961,
									"end": 3993,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3958,
									"end": 4016,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3958,
									"end": 4016,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 3958,
									"end": 4016,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3996,
									"end": 4014,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 3996,
									"end": 4014,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 3996,
									"end": 4014,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3996,
									"end": 4014,
									"name": "tag",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 3996,
									"end": 4014,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4034,
									"end": 4054,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4034,
									"end": 4054,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3254,
									"end": 4060,
									"name": "tag",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 3254,
									"end": 4060,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3254,
									"end": 4060,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3254,
									"end": 4060,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3254,
									"end": 4060,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3254,
									"end": 4060,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3254,
									"end": 4060,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4065,
									"end": 4205,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 4065,
									"end": 4205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4123,
									"end": 4128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4152,
									"end": 4199,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 4193,
									"end": 4197,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 4183,
									"end": 4191,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4179,
									"end": 4198,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4173,
									"end": 4177,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4152,
									"end": 4199,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 4152,
									"end": 4199,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4152,
									"end": 4199,
									"name": "tag",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 4152,
									"end": 4199,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4143,
									"end": 4199,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 4065,
									"end": 4205,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4065,
									"end": 4205,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4210,
									"end": 4378,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 4210,
									"end": 4378,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4283,
									"end": 4292,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4283,
									"end": 4292,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4283,
									"end": 4292,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4314,
									"end": 4323,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4314,
									"end": 4323,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4331,
									"end": 4346,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4331,
									"end": 4346,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4331,
									"end": 4346,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 4325,
									"end": 4347,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4325,
									"end": 4347,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 4311,
									"end": 4348,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 4301,
									"end": 4372,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 4301,
									"end": 4372,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4352,
									"end": 4370,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 4352,
									"end": 4370,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 4352,
									"end": 4370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4591,
									"end": 4716,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 4591,
									"end": 4716,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4656,
									"end": 4665,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4656,
									"end": 4665,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4656,
									"end": 4665,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4677,
									"end": 4687,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4677,
									"end": 4687,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4677,
									"end": 4687,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4674,
									"end": 4710,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4674,
									"end": 4710,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 4674,
									"end": 4710,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4690,
									"end": 4708,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 4690,
									"end": 4708,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 4690,
									"end": 4708,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5071,
									"end": 5248,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 5071,
									"end": 5248,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 22115,
									"end": 22255,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 22115,
									"end": 22255,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22115,
									"end": 22255,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 22115,
									"end": 22255,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22115,
									"end": 22255,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 22115,
									"end": 22255,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22115,
									"end": 22255,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122023ce6d4a5f4fa4133f0c793a2af580d8d6a96a15ae0e700ee5c5f89afae130b164736f6c63430008160033",
									".code": [
										{
											"begin": 22115,
											"end": 22255,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22255,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 12935,
											"end": 13024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 12935,
											"end": 13024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 15154,
											"end": 15340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15154,
											"end": 15340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14102,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14005,
											"end": 14102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14083,
											"end": 14095,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14083,
											"end": 14095,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14102,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 14005,
											"end": 14102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14102,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14102,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15900,
											"end": 16144,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15900,
											"end": 16144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15900,
											"end": 16144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 15900,
											"end": 16144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 15900,
											"end": 16144,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15900,
											"end": 16144,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15900,
											"end": 16144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 15900,
											"end": 16144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15900,
											"end": 16144,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 15900,
											"end": 16144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15900,
											"end": 16144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 15900,
											"end": 16144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13863,
											"end": 13945,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 13863,
											"end": 13945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13863,
											"end": 13945,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13863,
											"end": 13945,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13936,
											"end": 13938,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13863,
											"end": 13945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14160,
											"end": 14276,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 14160,
											"end": 14276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14160,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 14160,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 14160,
											"end": 14276,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14160,
											"end": 14276,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14160,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 14160,
											"end": 14276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14160,
											"end": 14276,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 14160,
											"end": 14276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14251,
											"end": 14269,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14225,
											"end": 14232,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14251,
											"end": 14269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14251,
											"end": 14269,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14251,
											"end": 14269,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14251,
											"end": 14269,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14251,
											"end": 14269,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14251,
											"end": 14269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14251,
											"end": 14269,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14251,
											"end": 14269,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14251,
											"end": 14269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14251,
											"end": 14269,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14251,
											"end": 14269,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14251,
											"end": 14269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14160,
											"end": 14276,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13137,
											"end": 13230,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 13137,
											"end": 13230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13137,
											"end": 13230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 13137,
											"end": 13230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 13137,
											"end": 13230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14471,
											"end": 14649,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 14471,
											"end": 14649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14471,
											"end": 14649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 14471,
											"end": 14649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 14471,
											"end": 14649,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14471,
											"end": 14649,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14471,
											"end": 14649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 14471,
											"end": 14649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14471,
											"end": 14649,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 14471,
											"end": 14649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14471,
											"end": 14649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 14471,
											"end": 14649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14847,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 14707,
											"end": 14847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 14707,
											"end": 14847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 14707,
											"end": 14847,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14847,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14707,
											"end": 14847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 14707,
											"end": 14847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14847,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 14707,
											"end": 14847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14787,
											"end": 14794,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14824,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14847,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12980,
											"end": 12993,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13012,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 13005,
											"end": 13017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 13005,
											"end": 13017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15227,
											"end": 15231,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7323,
											"end": 7333,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15281,
											"end": 15312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 7323,
											"end": 7333,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15297,
											"end": 15304,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15306,
											"end": 15311,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15281,
											"end": 15289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 15281,
											"end": 15312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15281,
											"end": 15312,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 15281,
											"end": 15312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15333,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15322,
											"end": 15333,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15322,
											"end": 15333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15322,
											"end": 15333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15154,
											"end": 15340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15900,
											"end": 16144,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 15900,
											"end": 16144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15987,
											"end": 15991,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7323,
											"end": 7333,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 16043,
											"end": 16080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 16059,
											"end": 16063,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7323,
											"end": 7333,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16074,
											"end": 16079,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16043,
											"end": 16058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 16043,
											"end": 16080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16043,
											"end": 16080,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 16043,
											"end": 16080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16090,
											"end": 16116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 16100,
											"end": 16104,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16106,
											"end": 16108,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16110,
											"end": 16115,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16090,
											"end": 16099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 16090,
											"end": 16116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16090,
											"end": 16116,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 16090,
											"end": 16116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16133,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16133,
											"end": 16137,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15900,
											"end": 16144,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15900,
											"end": 16144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13137,
											"end": 13230,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 13137,
											"end": 13230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13184,
											"end": 13197,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13216,
											"end": 13223,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13209,
											"end": 13223,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13209,
											"end": 13223,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13209,
											"end": 13223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 13209,
											"end": 13223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13209,
											"end": 13223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 13209,
											"end": 13223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14471,
											"end": 14649,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 14471,
											"end": 14649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14544,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7323,
											"end": 7333,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 7323,
											"end": 7333,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14611,
											"end": 14613,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14615,
											"end": 14620,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 14594,
											"end": 14621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19850,
											"end": 19978,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 19850,
											"end": 19978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19934,
											"end": 19971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 19943,
											"end": 19948,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19950,
											"end": 19957,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19959,
											"end": 19964,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19966,
											"end": 19970,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19934,
											"end": 19942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 19934,
											"end": 19971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19934,
											"end": 19971,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 19934,
											"end": 19971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19850,
											"end": 19978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19850,
											"end": 19978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19850,
											"end": 19978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19850,
											"end": 19978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21524,
											"end": 22001,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 21524,
											"end": 22001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21623,
											"end": 21647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14824,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 21689,
											"end": 21726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21689,
											"end": 21726,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21685,
											"end": 21995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 21685,
											"end": 21995,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21765,
											"end": 21770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21746,
											"end": 21762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21746,
											"end": 21770,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21742,
											"end": 21872,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21742,
											"end": 21872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 21742,
											"end": 21872,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21797,
											"end": 21857,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21797,
											"end": 21857,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21797,
											"end": 21857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21797,
											"end": 21857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2961,
											"end": 2993,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 2993,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21797,
											"end": 21857,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21797,
											"end": 21857,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21797,
											"end": 21857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2943,
											"end": 2994,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3028,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3010,
											"end": 3028,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3003,
											"end": 3037,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3003,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3003,
											"end": 3037,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3053,
											"end": 3071,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3053,
											"end": 3071,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3053,
											"end": 3071,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3046,
											"end": 3080,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3046,
											"end": 3080,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3046,
											"end": 3080,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2916,
											"end": 2934,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2916,
											"end": 2934,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21797,
											"end": 21857,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 21797,
											"end": 21857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21797,
											"end": 21857,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21797,
											"end": 21857,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21797,
											"end": 21857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21797,
											"end": 21857,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21797,
											"end": 21857,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21797,
											"end": 21857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21797,
											"end": 21857,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21742,
											"end": 21872,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 21742,
											"end": 21872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21913,
											"end": 21970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 21922,
											"end": 21927,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21929,
											"end": 21936,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21957,
											"end": 21962,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21938,
											"end": 21954,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21938,
											"end": 21962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21964,
											"end": 21969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21913,
											"end": 21921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 21913,
											"end": 21970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21913,
											"end": 21970,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 21913,
											"end": 21970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21613,
											"end": 22001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21524,
											"end": 22001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21524,
											"end": 22001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21524,
											"end": 22001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21524,
											"end": 22001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16517,
											"end": 16817,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 16517,
											"end": 16817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16600,
											"end": 16618,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16600,
											"end": 16618,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16596,
											"end": 16682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 16596,
											"end": 16682,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16641,
											"end": 16671,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16641,
											"end": 16671,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16641,
											"end": 16671,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16641,
											"end": 16671,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16668,
											"end": 16669,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16641,
											"end": 16671,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16641,
											"end": 16671,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16641,
											"end": 16671,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3237,
											"end": 3288,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3210,
											"end": 3228,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3210,
											"end": 3228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16641,
											"end": 16671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3091,
											"end": 3294,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16596,
											"end": 16682,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 16596,
											"end": 16682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16695,
											"end": 16711,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16695,
											"end": 16711,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16691,
											"end": 16777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 16691,
											"end": 16777,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16734,
											"end": 16766,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16734,
											"end": 16766,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16734,
											"end": 16766,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16734,
											"end": 16766,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16763,
											"end": 16764,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16734,
											"end": 16766,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16734,
											"end": 16766,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16734,
											"end": 16766,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3237,
											"end": 3288,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3210,
											"end": 3228,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3210,
											"end": 3228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16734,
											"end": 16766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3091,
											"end": 3294,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16777,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 16691,
											"end": 16777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16786,
											"end": 16810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 16794,
											"end": 16798,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16800,
											"end": 16802,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16804,
											"end": 16809,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16786,
											"end": 16793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 16786,
											"end": 16810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20810,
											"end": 21242,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 20810,
											"end": 21242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20922,
											"end": 20941,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20922,
											"end": 20941,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20918,
											"end": 21007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 20918,
											"end": 21007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20964,
											"end": 20996,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20964,
											"end": 20996,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20964,
											"end": 20996,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20964,
											"end": 20996,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20993,
											"end": 20994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20964,
											"end": 20996,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20964,
											"end": 20996,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20964,
											"end": 20996,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3237,
											"end": 3288,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3210,
											"end": 3228,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3210,
											"end": 3228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20964,
											"end": 20996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3091,
											"end": 3294,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20918,
											"end": 21007,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 20918,
											"end": 21007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21020,
											"end": 21041,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21020,
											"end": 21041,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21016,
											"end": 21106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 21016,
											"end": 21106,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21064,
											"end": 21095,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21064,
											"end": 21095,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21064,
											"end": 21095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21064,
											"end": 21095,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21092,
											"end": 21093,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21064,
											"end": 21095,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21064,
											"end": 21095,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21064,
											"end": 21095,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3237,
											"end": 3288,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3210,
											"end": 3228,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3210,
											"end": 3228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21064,
											"end": 21095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3091,
											"end": 3294,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21016,
											"end": 21106,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 21016,
											"end": 21106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21115,
											"end": 21133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21133,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21133,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21133,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21115,
											"end": 21133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21133,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21126,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21115,
											"end": 21133,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21115,
											"end": 21133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21133,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21115,
											"end": 21133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21133,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21133,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21142,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21142,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21142,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21142,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21142,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21142,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21142,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21142,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21150,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21150,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21160,
											"end": 21236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21160,
											"end": 21236,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21160,
											"end": 21236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 21160,
											"end": 21236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21210,
											"end": 21217,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21203,
											"end": 21208,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 21219,
											"end": 21224,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 20810,
											"end": 21242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20810,
											"end": 21242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20810,
											"end": 21242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20810,
											"end": 21242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20810,
											"end": 21242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17132,
											"end": 18239,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 17132,
											"end": 18239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17221,
											"end": 17239,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17239,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17217,
											"end": 17757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 17217,
											"end": 17757,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17373,
											"end": 17378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17357,
											"end": 17369,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17357,
											"end": 17369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17357,
											"end": 17378,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17357,
											"end": 17378,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17357,
											"end": 17378,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17357,
											"end": 17378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 17357,
											"end": 17378,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17357,
											"end": 17378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17357,
											"end": 17378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 17357,
											"end": 17378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17357,
											"end": 17378,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 17357,
											"end": 17378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17357,
											"end": 17378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17357,
											"end": 17378,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17357,
											"end": 17378,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17217,
											"end": 17757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 17217,
											"end": 17757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17217,
											"end": 17757,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17217,
											"end": 17757,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 17217,
											"end": 17757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17431,
											"end": 17446,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17446,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17409,
											"end": 17428,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17431,
											"end": 17446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17446,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17431,
											"end": 17446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17446,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17431,
											"end": 17446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17446,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17446,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17464,
											"end": 17483,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17464,
											"end": 17483,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17464,
											"end": 17483,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17460,
											"end": 17575,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17460,
											"end": 17575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 17460,
											"end": 17575,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17510,
											"end": 17560,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17510,
											"end": 17560,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17510,
											"end": 17560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17510,
											"end": 17560,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2961,
											"end": 2993,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 2993,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17510,
											"end": 17560,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17510,
											"end": 17560,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17510,
											"end": 17560,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2943,
											"end": 2994,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3028,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3010,
											"end": 3028,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3003,
											"end": 3037,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3003,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3003,
											"end": 3037,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3053,
											"end": 3071,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3053,
											"end": 3071,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3053,
											"end": 3071,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3046,
											"end": 3080,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3046,
											"end": 3080,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3046,
											"end": 3080,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2916,
											"end": 2934,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2916,
											"end": 2934,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17510,
											"end": 17560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2741,
											"end": 3086,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17460,
											"end": 17575,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 17460,
											"end": 17575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17695,
											"end": 17710,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17695,
											"end": 17710,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17695,
											"end": 17704,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17695,
											"end": 17710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17695,
											"end": 17710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17695,
											"end": 17710,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17695,
											"end": 17710,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17695,
											"end": 17710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17695,
											"end": 17710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17695,
											"end": 17710,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17695,
											"end": 17710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17695,
											"end": 17710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17695,
											"end": 17710,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17713,
											"end": 17732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17713,
											"end": 17732,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17713,
											"end": 17732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17713,
											"end": 17732,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17695,
											"end": 17732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17695,
											"end": 17732,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17217,
											"end": 17757,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 17217,
											"end": 17757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17771,
											"end": 17787,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17771,
											"end": 17787,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17767,
											"end": 18192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 17767,
											"end": 18192,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17934,
											"end": 17946,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17934,
											"end": 17955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17934,
											"end": 17955,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17934,
											"end": 17955,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17934,
											"end": 17955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17934,
											"end": 17955,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17934,
											"end": 17955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17934,
											"end": 17955,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17767,
											"end": 18192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 17767,
											"end": 18192,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17767,
											"end": 18192,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 17767,
											"end": 18192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18145,
											"end": 18158,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18145,
											"end": 18158,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18145,
											"end": 18154,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18145,
											"end": 18158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18145,
											"end": 18158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18145,
											"end": 18158,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18145,
											"end": 18158,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18145,
											"end": 18158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18145,
											"end": 18158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18145,
											"end": 18158,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18145,
											"end": 18158,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18145,
											"end": 18158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18145,
											"end": 18158,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18145,
											"end": 18167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18145,
											"end": 18167,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18145,
											"end": 18167,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18145,
											"end": 18167,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18145,
											"end": 18167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18145,
											"end": 18167,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17767,
											"end": 18192,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 17767,
											"end": 18192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18222,
											"end": 18224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18216,
											"end": 18220,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 18226,
											"end": 18231,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 17132,
											"end": 18239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17132,
											"end": 18239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17132,
											"end": 18239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17132,
											"end": 18239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 254,
											"end": 256,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2070,
											"end": 2079,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2051,
											"end": 2080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2080,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 2086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2159,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2222,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2206,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2195,
											"end": 2218,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2223,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2237,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2234,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 2278,
											"end": 2287,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2259,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 2341,
											"end": 2343,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2326,
											"end": 2344,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2307,
											"end": 2345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2436,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 2545,
											"end": 2551,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2608,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2598,
											"end": 2604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2595,
											"end": 2609,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2575,
											"end": 2593,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2610,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2662,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2647,
											"end": 2650,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2643,
											"end": 2663,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2640,
											"end": 2641,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2664,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2687,
											"end": 2691,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2684,
											"end": 2685,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2692,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2715,
											"end": 2719,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2712,
											"end": 2713,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3521,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 3299,
											"end": 3521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3364,
											"end": 3373,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3364,
											"end": 3373,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3364,
											"end": 3373,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3385,
											"end": 3395,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3385,
											"end": 3395,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3385,
											"end": 3395,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3382,
											"end": 3515,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3382,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3382,
											"end": 3515,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3437,
											"end": 3447,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3432,
											"end": 3435,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3426,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3418,
											"end": 3449,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3472,
											"end": 3476,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3469,
											"end": 3470,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3462,
											"end": 3477,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3500,
											"end": 3504,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3497,
											"end": 3498,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3490,
											"end": 3505,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/OPZToken_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OPZToken_flattened.sol\":\"OPZToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OPZToken_flattened.sol\":{\"keccak256\":\"0x0cbc7b02d80a6a9bb164ca3d139e6a95187824dc7bf724dc1589d874f64012a9\",\"urls\":[\"bzz-raw://6c42562b79eea1a905d28cc762548fb6bc8a3450fa634aaf6a52dd295c64b4fd\",\"dweb:/ipfs/QmZ72ihzQNhGaNLLwtPH1BgALjEMAFYZNEhsSEQLWLC8CK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "contracts/OPZToken_flattened.sol:OPZToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "contracts/OPZToken_flattened.sol:OPZToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "contracts/OPZToken_flattened.sol:OPZToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "contracts/OPZToken_flattened.sol:OPZToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "contracts/OPZToken_flattened.sol:OPZToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/OPZToken_flattened.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/OPZToken_flattened.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/OPZToken_flattened.sol": {
				"ast": {
					"absolutePath": "contracts/OPZToken_flattened.sol",
					"exportedSymbols": {
						"Context": [
							165
						],
						"ERC20": [
							771
						],
						"IERC1155Errors": [
							136
						],
						"IERC20": [
							242
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							265
						],
						"IERC721Errors": [
							89
						],
						"OPZToken": [
							794
						]
					},
					"id": 795,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "146:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "172:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "322:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "341:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "661:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "694:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "686:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "710:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "702:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "702:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "685:49:0"
									},
									"src": "655:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "741:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "904:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "931:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "923:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "923:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "922:16:0"
									},
									"src": "898:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "945:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1115:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1144:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1136:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1135:18:0"
									},
									"src": "1109:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1160:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1516:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1551:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1543:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1543:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1568:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1560:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1587:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1579:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1579:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1542:52:0"
									},
									"src": "1510:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1601:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1786:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1815:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1807:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1807:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1806:18:0"
									},
									"src": "1780:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1831:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2037:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2065:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2057:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2057:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2056:17:0"
									},
									"src": "2031:43:0"
								}
							],
							"scope": 795,
							"src": "312:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2078:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2230:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2250:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2480:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2507:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2499:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2499:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2498:15:0"
									},
									"src": "2474:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2520:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2663:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2694:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2686:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2686:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2685:17:0"
									},
									"src": "2657:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2709:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "3009:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3038:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3030:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3030:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3054:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3046:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3046:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3071:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3063:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3029:48:0"
									},
									"src": "3003:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3084:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3247:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3275:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3267:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3267:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3266:16:0"
									},
									"src": "3241:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3289:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3459:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3489:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3481:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3481:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3480:18:0"
									},
									"src": "3453:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3505:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3763:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3798:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3790:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3790:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3816:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3808:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3808:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3789:35:0"
									},
									"src": "3757:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3831:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "4016:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4046:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4038:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4038:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4037:18:0"
									},
									"src": "4010:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4062:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4270:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4300:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4292:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4292:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4291:18:0"
									},
									"src": "4264:46:0"
								}
							],
							"scope": 795,
							"src": "2220:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4314:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4468:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4489:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4861:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4896:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4888:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4888:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4912:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4904:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4904:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4929:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4921:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4921:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4945:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4937:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4937:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4887:66:0"
									},
									"src": "4855:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4960:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5123:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5152:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5144:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5144:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5143:16:0"
									},
									"src": "5117:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5166:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5336:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5367:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5359:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5359:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5358:18:0"
									},
									"src": "5330:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5383:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5650:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5687:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5679:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5679:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5705:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5697:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5697:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5678:33:0"
									},
									"src": "5644:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5718:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5903:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5934:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5926:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5926:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5925:18:0"
									},
									"src": "5897:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5950:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6158:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6189:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6181:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6181:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6180:18:0"
									},
									"src": "6152:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6205:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6496:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6530:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6522:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6522:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6549:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6541:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6541:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6521:41:0"
									},
									"src": "6490:73:0"
								}
							],
							"scope": 795,
							"src": "4458:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						},
						{
							"id": 137,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "6689:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 138,
								"nodeType": "StructuredDocumentation",
								"src": "6715:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 165,
							"linearizedBaseContracts": [
								165
							],
							"name": "Context",
							"nameLocation": "7230:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "7306:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 143,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "7323:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7327:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "7323:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 142,
												"id": 145,
												"nodeType": "Return",
												"src": "7316:17:0"
											}
										]
									},
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "7253:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7263:2:0"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "7297:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7297:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7296:9:0"
									},
									"scope": 165,
									"src": "7244:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 155,
										"nodeType": "Block",
										"src": "7413:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 152,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "7430:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7434:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "7430:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 151,
												"id": 154,
												"nodeType": "Return",
												"src": "7423:15:0"
											}
										]
									},
									"id": 156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "7355:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7363:2:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "7397:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 149,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7397:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7396:16:0"
									},
									"scope": 165,
									"src": "7346:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "7523:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7540:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 160,
												"id": 162,
												"nodeType": "Return",
												"src": "7533:8:0"
											}
										]
									},
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "7460:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7480:2:0"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "7514:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7514:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7513:9:0"
									},
									"scope": 165,
									"src": "7451:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 795,
							"src": "7212:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 166,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "7684:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 167,
								"nodeType": "StructuredDocumentation",
								"src": "7710:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 242,
							"linearizedBaseContracts": [
								242
							],
							"name": "IERC20",
							"nameLocation": "7791:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "7804:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 176,
									"name": "Transfer",
									"nameLocation": "7973:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7998:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "7982:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7982:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8020:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "8004:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8032:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "8024:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8024:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7981:57:0"
									},
									"src": "7967:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "8045:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 185,
									"name": "Approval",
									"nameLocation": "8204:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8229:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "8213:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8252:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "8236:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8236:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8269:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "8261:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8261:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8212:63:0"
									},
									"src": "8198:78:0"
								},
								{
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "8282:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 191,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "8361:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8372:2:0"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "8398:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8398:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8397:9:0"
									},
									"scope": 242,
									"src": "8352:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "8413:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 199,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "8498:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8516:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "8508:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8508:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8507:17:0"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "8548:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8548:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8547:9:0"
									},
									"scope": 242,
									"src": "8489:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "8563:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 209,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "8790:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8807:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "8799:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8799:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8819:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "8811:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8811:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8798:27:0"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "8844:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8844:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8843:6:0"
									},
									"scope": 242,
									"src": "8781:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "8856:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "9134:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9152:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "9144:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9144:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9167:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "9159:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9159:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9143:32:0"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "9199:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9198:9:0"
									},
									"scope": 242,
									"src": "9125:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "9214:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 229,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "9895:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "9903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9903:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9928:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "9920:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9920:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9902:32:0"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "9953:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 226,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9953:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9952:6:0"
									},
									"scope": 242,
									"src": "9886:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "9965:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 241,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "10276:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10297:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "10289:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10289:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10311:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "10303:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10303:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10323:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "10315:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10315:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10288:41:0"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "10348:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 238,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10348:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10347:6:0"
									},
									"scope": 242,
									"src": "10267:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 795,
							"src": "7781:2575:0",
							"usedErrors": [],
							"usedEvents": [
								176,
								185
							]
						},
						{
							"id": 243,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "10528:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 245,
										"name": "IERC20",
										"nameLocations": [
											"10670:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 242,
										"src": "10670:6:0"
									},
									"id": 246,
									"nodeType": "InheritanceSpecifier",
									"src": "10670:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 244,
								"nodeType": "StructuredDocumentation",
								"src": "10555:86:0",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 265,
							"linearizedBaseContracts": [
								265,
								242
							],
							"name": "IERC20Metadata",
							"nameLocation": "10652:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "10683:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 252,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "10751:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10755:2:0"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "10781:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 249,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10781:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10780:15:0"
									},
									"scope": 265,
									"src": "10742:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "10802:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 258,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "10872:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10878:2:0"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "10904:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 255,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10904:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10903:15:0"
									},
									"scope": 265,
									"src": "10863:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "10925:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 264,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "11004:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11012:2:0"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "11038:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 261,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "11038:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11037:7:0"
									},
									"scope": 265,
									"src": "10995:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 795,
							"src": "10642:405:0",
							"usedErrors": [],
							"usedEvents": [
								176,
								185
							]
						},
						{
							"id": 266,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "11179:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 268,
										"name": "Context",
										"nameLocations": [
											"12289:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 165,
										"src": "12289:7:0"
									},
									"id": 269,
									"nodeType": "InheritanceSpecifier",
									"src": "12289:7:0"
								},
								{
									"baseName": {
										"id": 270,
										"name": "IERC20",
										"nameLocations": [
											"12298:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 242,
										"src": "12298:6:0"
									},
									"id": 271,
									"nodeType": "InheritanceSpecifier",
									"src": "12298:6:0"
								},
								{
									"baseName": {
										"id": 272,
										"name": "IERC20Metadata",
										"nameLocations": [
											"12306:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 265,
										"src": "12306:14:0"
									},
									"id": 273,
									"nodeType": "InheritanceSpecifier",
									"src": "12306:14:0"
								},
								{
									"baseName": {
										"id": 274,
										"name": "IERC20Errors",
										"nameLocations": [
											"12322:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "12322:12:0"
									},
									"id": 275,
									"nodeType": "InheritanceSpecifier",
									"src": "12322:12:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 267,
								"nodeType": "StructuredDocumentation",
								"src": "11209:1052:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 771,
							"linearizedBaseContracts": [
								771,
								41,
								265,
								242,
								165
							],
							"name": "ERC20",
							"nameLocation": "12280:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 279,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "12385:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12341:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 278,
										"keyName": "account",
										"keyNameLocation": "12357:7:0",
										"keyType": {
											"id": 276,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12349:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12341:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 277,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "12368:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 285,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "12473:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12401:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 284,
										"keyName": "account",
										"keyNameLocation": "12417:7:0",
										"keyType": {
											"id": 280,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12409:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12401:63:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 283,
											"keyName": "spender",
											"keyNameLocation": "12444:7:0",
											"keyType": {
												"id": 281,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "12436:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "12428:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 282,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "12455:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 287,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "12507:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12491:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 286,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12491:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 289,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "12541:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12526:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 288,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12526:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 291,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "12567:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12552:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 290,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12552:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "12813:57:0",
										"statements": [
											{
												"expression": {
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 299,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "12823:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 300,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "12831:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12823:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "12823:13:0"
											},
											{
												"expression": {
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 303,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "12846:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 304,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "12856:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12846:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 306,
												"nodeType": "ExpressionStatement",
												"src": "12846:17:0"
											}
										]
									},
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "12581:171:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 308,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "12783:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12769:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 293,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12769:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "12804:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12790:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 295,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12790:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12768:44:0"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12813:0:0"
									},
									"scope": 771,
									"src": "12757:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										252
									],
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "12995:29:0",
										"statements": [
											{
												"expression": {
													"id": 314,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 289,
													"src": "13012:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 313,
												"id": 315,
												"nodeType": "Return",
												"src": "13005:12:0"
											}
										]
									},
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "12876:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "12944:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12948:2:0"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "12980:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12980:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12979:15:0"
									},
									"scope": 771,
									"src": "12935:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										258
									],
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "13199:31:0",
										"statements": [
											{
												"expression": {
													"id": 323,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 291,
													"src": "13216:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 322,
												"id": 324,
												"nodeType": "Return",
												"src": "13209:14:0"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "13030:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "13146:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13152:2:0"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "13184:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 320,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13184:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13183:15:0"
									},
									"scope": 771,
									"src": "13137:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										264
									],
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "13919:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13936:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 331,
												"id": 333,
												"nodeType": "Return",
												"src": "13929:9:0"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "13236:622:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "13872:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13880:2:0"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "13912:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 329,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "13912:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13911:7:0"
									},
									"scope": 771,
									"src": "13863:82:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										191
									],
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "14066:36:0",
										"statements": [
											{
												"expression": {
													"id": 341,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 287,
													"src": "14083:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 340,
												"id": 342,
												"nodeType": "Return",
												"src": "14076:19:0"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "13951:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "14014:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14025:2:0"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "14057:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14057:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14056:9:0"
									},
									"scope": 771,
									"src": "14005:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										199
									],
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "14234:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 352,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "14251:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 354,
													"indexExpression": {
														"id": 353,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "14261:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14251:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 351,
												"id": 355,
												"nodeType": "Return",
												"src": "14244:25:0"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "14108:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "14169:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "14187:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "14179:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14179:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14178:17:0"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "14225:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14225:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14224:9:0"
									},
									"scope": 771,
									"src": "14160:116:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										209
									],
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "14546:103:0",
										"statements": [
											{
												"assignments": [
													368
												],
												"declarations": [
													{
														"constant": false,
														"id": 368,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14564:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 380,
														"src": "14556:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 367,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14556:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 371,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 369,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "14572:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14572:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14556:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 373,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "14604:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 374,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "14611:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 375,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "14615:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 372,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "14594:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14594:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "14594:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14638:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 366,
												"id": 379,
												"nodeType": "Return",
												"src": "14631:11:0"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "14282:184:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "14480:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14497:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14489:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14489:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14509:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14501:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14501:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14488:27:0"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14540:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14540:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14539:6:0"
									},
									"scope": 771,
									"src": "14471:178:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										219
									],
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "14796:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 391,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "14813:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 393,
														"indexExpression": {
															"id": 392,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "14825:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "14813:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 395,
													"indexExpression": {
														"id": 394,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "14832:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14813:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 390,
												"id": 396,
												"nodeType": "Return",
												"src": "14806:34:0"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "14655:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "14716:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14734:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14726:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14726:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14749:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14741:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14741:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14725:32:0"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14787:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14787:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14786:9:0"
									},
									"scope": 771,
									"src": "14707:140:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										229
									],
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "15233:107:0",
										"statements": [
											{
												"assignments": [
													409
												],
												"declarations": [
													{
														"constant": false,
														"id": 409,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "15251:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 421,
														"src": "15243:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 408,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15243:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 412,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 410,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "15259:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15259:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15243:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 414,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "15290:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 415,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "15297:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 416,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "15306:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 413,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 662,
														"src": "15281:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15281:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "15281:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15329:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 407,
												"id": 420,
												"nodeType": "Return",
												"src": "15322:11:0"
											}
										]
									},
									"documentation": {
										"id": 399,
										"nodeType": "StructuredDocumentation",
										"src": "14853:296:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "15163:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "15179:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "15171:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15171:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15196:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "15188:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15188:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15170:32:0"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "15227:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 405,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15227:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15226:6:0"
									},
									"scope": 771,
									"src": "15154:186:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										241
									],
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "15993:151:0",
										"statements": [
											{
												"assignments": [
													435
												],
												"declarations": [
													{
														"constant": false,
														"id": 435,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "16011:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 453,
														"src": "16003:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 434,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16003:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 438,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 436,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "16021:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16021:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16003:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 440,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "16059:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 441,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "16065:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 442,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "16074:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 439,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "16043:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16043:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "16043:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 446,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "16100:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 447,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "16106:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 448,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "16110:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 445,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "16090:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16090:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "16090:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16133:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 433,
												"id": 452,
												"nodeType": "Return",
												"src": "16126:11:0"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "15346:549:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "15909:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15930:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15922:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15922:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15944:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15936:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15936:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15956:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15948:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15948:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15921:41:0"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15987:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 431,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15987:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15986:6:0"
									},
									"scope": 771,
									"src": "15900:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "16586:231:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 464,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "16600:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16616:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16608:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 465,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16608:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16608:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16600:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 478,
												"nodeType": "IfStatement",
												"src": "16596:86:0",
												"trueBody": {
													"id": 477,
													"nodeType": "Block",
													"src": "16620:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 473,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16668:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16660:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 471,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16660:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16660:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 470,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "16641:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16641:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 476,
															"nodeType": "RevertStatement",
															"src": "16634:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 479,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "16695:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16709:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16701:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 480,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16701:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16701:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16695:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 493,
												"nodeType": "IfStatement",
												"src": "16691:86:0",
												"trueBody": {
													"id": 492,
													"nodeType": "Block",
													"src": "16713:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 488,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16763:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16755:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 486,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16755:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16755:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 485,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "16734:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16734:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 491,
															"nodeType": "RevertStatement",
															"src": "16727:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 495,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "16794:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 496,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "16800:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "16804:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 494,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "16786:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16786:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "16786:24:0"
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "16150:362:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "16526:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16544:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16536:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16536:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16558:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16550:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16550:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16570:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16562:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16562:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16535:41:0"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16586:0:0"
									},
									"scope": 771,
									"src": "16517:300:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "17207:1032:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 511,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "17221:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17237:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17229:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 512,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17229:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17229:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17221:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 548,
													"nodeType": "Block",
													"src": "17395:362:0",
													"statements": [
														{
															"assignments": [
																523
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 523,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "17417:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 548,
																	"src": "17409:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 522,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "17409:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 527,
															"initialValue": {
																"baseExpression": {
																	"id": 524,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 279,
																	"src": "17431:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 526,
																"indexExpression": {
																	"id": 525,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 504,
																	"src": "17441:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17431:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17409:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 528,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "17464:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 529,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "17478:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17464:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 538,
															"nodeType": "IfStatement",
															"src": "17460:115:0",
															"trueBody": {
																"id": 537,
																"nodeType": "Block",
																"src": "17485:90:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 532,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 504,
																					"src": "17535:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 533,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 523,
																					"src": "17541:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 534,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 508,
																					"src": "17554:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 531,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "17510:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17510:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 536,
																		"nodeType": "RevertStatement",
																		"src": "17503:57:0"
																	}
																]
															}
														},
														{
															"id": 547,
															"nodeType": "UncheckedBlock",
															"src": "17588:159:0",
															"statements": [
																{
																	"expression": {
																		"id": 545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 539,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "17695:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 541,
																			"indexExpression": {
																				"id": 540,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 504,
																				"src": "17705:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "17695:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 542,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 523,
																				"src": "17713:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 543,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 508,
																				"src": "17727:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17713:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17695:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 546,
																	"nodeType": "ExpressionStatement",
																	"src": "17695:37:0"
																}
															]
														}
													]
												},
												"id": 549,
												"nodeType": "IfStatement",
												"src": "17217:540:0",
												"trueBody": {
													"id": 521,
													"nodeType": "Block",
													"src": "17241:148:0",
													"statements": [
														{
															"expression": {
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 517,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 287,
																	"src": "17357:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 518,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "17373:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17357:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 520,
															"nodeType": "ExpressionStatement",
															"src": "17357:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 550,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "17771:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17785:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17777:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 551,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17777:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17777:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17771:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 569,
													"nodeType": "Block",
													"src": "17986:206:0",
													"statements": [
														{
															"id": 568,
															"nodeType": "UncheckedBlock",
															"src": "18000:182:0",
															"statements": [
																{
																	"expression": {
																		"id": 566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 562,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "18145:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 564,
																			"indexExpression": {
																				"id": 563,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 506,
																				"src": "18155:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "18145:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 565,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "18162:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "18145:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 567,
																	"nodeType": "ExpressionStatement",
																	"src": "18145:22:0"
																}
															]
														}
													]
												},
												"id": 570,
												"nodeType": "IfStatement",
												"src": "17767:425:0",
												"trueBody": {
													"id": 561,
													"nodeType": "Block",
													"src": "17789:191:0",
													"statements": [
														{
															"id": 560,
															"nodeType": "UncheckedBlock",
															"src": "17803:167:0",
															"statements": [
																{
																	"expression": {
																		"id": 558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 556,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "17934:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 557,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "17950:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17934:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 559,
																	"nodeType": "ExpressionStatement",
																	"src": "17934:21:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 572,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "18216:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 573,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "18222:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 574,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "18226:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 571,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "18207:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18207:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 576,
												"nodeType": "EmitStatement",
												"src": "18202:30:0"
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "16823:304:0",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "17141:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17157:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "17149:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17149:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17171:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "17163:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17163:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17183:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "17175:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17148:41:0"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17207:0:0"
									},
									"scope": 771,
									"src": "17132:1107:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "18638:152:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 586,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "18652:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18671:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18663:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 587,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18663:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18663:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18652:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "18648:91:0",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "18675:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 595,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "18725:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "18717:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 593,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "18717:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18717:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 592,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "18696:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18696:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "RevertStatement",
															"src": "18689:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18764:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18756:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 602,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18756:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18756:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 606,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "18768:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 607,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "18777:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 601,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "18748:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18748:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 609,
												"nodeType": "ExpressionStatement",
												"src": "18748:35:0"
											}
										]
									},
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "18245:332:0",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "18591:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18605:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "18597:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18597:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18622:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "18614:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18614:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18596:32:0"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18638:0:0"
									},
									"scope": 771,
									"src": "18582:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "19164:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 614,
														"src": "19178:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19197:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19189:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 620,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "19189:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19189:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "19178:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 633,
												"nodeType": "IfStatement",
												"src": "19174:89:0",
												"trueBody": {
													"id": 632,
													"nodeType": "Block",
													"src": "19201:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 628,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19249:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "19241:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 626,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "19241:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19241:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 625,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "19222:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19222:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 631,
															"nodeType": "RevertStatement",
															"src": "19215:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 635,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "19280:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19297:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19289:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 636,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19289:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19289:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 640,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "19301:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 634,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "19272:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19272:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "19272:35:0"
											}
										]
									},
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "18796:307:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "19117:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "19131:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "19123:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19123:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19148:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "19140:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19140:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19122:32:0"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19164:0:0"
									},
									"scope": 771,
									"src": "19108:206:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "19924:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 655,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "19943:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 656,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "19950:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 657,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "19959:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19966:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 654,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 722,
														"src": "19934:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19934:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "19934:37:0"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "19320:525:0",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "19859:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "19876:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19868:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19868:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "19891:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19883:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19883:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19908:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19900:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19900:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19867:47:0"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19924:0:0"
									},
									"scope": 771,
									"src": "19850:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "20908:334:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 674,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "20922:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20939:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20931:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 675,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20931:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20931:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20922:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 688,
												"nodeType": "IfStatement",
												"src": "20918:89:0",
												"trueBody": {
													"id": 687,
													"nodeType": "Block",
													"src": "20943:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 683,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20993:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20985:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 681,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "20985:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20985:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 680,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "20964:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20964:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 686,
															"nodeType": "RevertStatement",
															"src": "20957:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 689,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "21020:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21039:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21031:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 690,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "21031:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21031:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "21020:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 703,
												"nodeType": "IfStatement",
												"src": "21016:90:0",
												"trueBody": {
													"id": 702,
													"nodeType": "Block",
													"src": "21043:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 698,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21092:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "21084:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 696,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "21084:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21084:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 695,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "21064:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21064:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 701,
															"nodeType": "RevertStatement",
															"src": "21057:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 704,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "21115:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 707,
															"indexExpression": {
																"id": 705,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "21127:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "21115:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 708,
														"indexExpression": {
															"id": 706,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "21134:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "21115:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 709,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "21145:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21115:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "21115:35:0"
											},
											{
												"condition": {
													"id": 712,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 671,
													"src": "21164:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 720,
												"nodeType": "IfStatement",
												"src": "21160:76:0",
												"trueBody": {
													"id": 719,
													"nodeType": "Block",
													"src": "21175:61:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 714,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 665,
																		"src": "21203:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 715,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 667,
																		"src": "21210:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 716,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "21219:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 713,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 185,
																	"src": "21194:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21194:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 718,
															"nodeType": "EmitStatement",
															"src": "21189:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "19984:821:0",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "20819:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "20836:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20828:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20828:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "20851:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20843:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20843:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20868:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20860:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "20880:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20875:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 670,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20875:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20827:63:0"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20908:0:0"
									},
									"scope": 771,
									"src": "20810:432:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "21613:388:0",
										"statements": [
											{
												"assignments": [
													733
												],
												"declarations": [
													{
														"constant": false,
														"id": 733,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "21631:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 769,
														"src": "21623:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 732,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21623:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 738,
												"initialValue": {
													"arguments": [
														{
															"id": 735,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "21660:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 736,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "21667:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 734,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "21650:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21650:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21623:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 739,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "21689:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21714:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 741,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "21714:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 740,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "21709:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21709:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 744,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "21723:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "21709:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21689:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 768,
												"nodeType": "IfStatement",
												"src": "21685:310:0",
												"trueBody": {
													"id": 767,
													"nodeType": "Block",
													"src": "21728:267:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 746,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "21746:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 747,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "21765:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21746:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 756,
															"nodeType": "IfStatement",
															"src": "21742:130:0",
															"trueBody": {
																"id": 755,
																"nodeType": "Block",
																"src": "21772:100:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 750,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 727,
																					"src": "21824:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 751,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "21833:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 752,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "21851:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 749,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "21797:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21797:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 754,
																		"nodeType": "RevertStatement",
																		"src": "21790:67:0"
																	}
																]
															}
														},
														{
															"id": 766,
															"nodeType": "UncheckedBlock",
															"src": "21885:100:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 758,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 725,
																				"src": "21922:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 759,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 727,
																				"src": "21929:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 762,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 760,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "21938:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 761,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "21957:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21938:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 763,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21964:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 757,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				662,
																				722
																			],
																			"referencedDeclaration": 722,
																			"src": "21913:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21913:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 765,
																	"nodeType": "ExpressionStatement",
																	"src": "21913:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "21248:271:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "21533:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21557:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21549:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21549:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "21572:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21564:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21564:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21589:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21581:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21581:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21548:47:0"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21613:0:0"
									},
									"scope": 771,
									"src": "21524:477:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 795,
							"src": "12262:9741:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								176,
								185
							]
						},
						{
							"id": 772,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "22088:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 773,
										"name": "ERC20",
										"nameLocations": [
											"22136:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 771,
										"src": "22136:5:0"
									},
									"id": 774,
									"nodeType": "InheritanceSpecifier",
									"src": "22136:5:0"
								}
							],
							"canonicalName": "OPZToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 794,
							"linearizedBaseContracts": [
								794,
								771,
								41,
								265,
								242,
								165
							],
							"name": "OPZToken",
							"nameLocation": "22124:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 792,
										"nodeType": "Block",
										"src": "22188:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 782,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "22204:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "22208:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "22204:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31303030303030303030",
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22216:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000_by_1",
																	"typeString": "int_const 1000000000"
																},
																"value": "1000000000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 788,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22229:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 786,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 335,
																		"src": "22235:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22235:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "22229:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22216:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 781,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "22198:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22198:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 791,
												"nodeType": "ExpressionStatement",
												"src": "22198:48:0"
											}
										]
									},
									"id": 793,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4f505a20546f6b656e",
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "22168:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_d81255581638f2a103e3475a1211ac9cbc236e2ba6410ec15344f0d36968dc6a",
														"typeString": "literal_string \"OPZ Token\""
													},
													"value": "OPZ Token"
												},
												{
													"hexValue": "4f505a",
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "22181:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_da1f95b906499818485f74722be6af082b214887548f56eb3518a88dd5cd60e8",
														"typeString": "literal_string \"OPZ\""
													},
													"value": "OPZ"
												}
											],
											"id": 779,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 776,
												"name": "ERC20",
												"nameLocations": [
													"22162:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 771,
												"src": "22162:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "22162:25:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22159:2:0"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22188:0:0"
									},
									"scope": 794,
									"src": "22148:105:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 795,
							"src": "22115:140:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								176,
								185
							]
						}
					],
					"src": "146:22109:0"
				},
				"id": 0
			}
		}
	}
}